{"prompt":"How do I join two tables in SQL to get customer orders?","completion":"SELECT c.customer_id, c.name, o.order_id FROM customers c INNER JOIN orders o ON c.customer_id = o.customer_id;"}
{"prompt":"Explain the difference between INNER JOIN and LEFT JOIN in SQL","completion":"INNER JOIN returns only matching rows from both tables, while LEFT JOIN returns all rows from the left table and matching rows from the right, with NULLs for non-matches."}
{"prompt":"Write a SQL query to get the top 5 products by sales","completion":"SELECT product_name, SUM(sales) as total_sales FROM products GROUP BY product_name ORDER BY total_sales DESC LIMIT 5;"}
{"prompt":"How to create a table in MySQL for storing user data?","completion":"CREATE TABLE users (id INT AUTO_INCREMENT PRIMARY KEY, name VARCHAR(100), email VARCHAR(100), created_at TIMESTAMP);"}
{"prompt":"Optimize this SQL query: SELECT * FROM orders WHERE date = '2023-01-01'","completion":"Add an index on the 'date' column: CREATE INDEX idx_date ON orders(date); This speeds up filtering. Also, select only needed columns instead of *."}
{"prompt":"What’s a primary key in SQL?","completion":"A primary key is a unique, non-null column (or set of columns) that uniquely identifies each row in a table, often indexed for fast lookups."}
{"prompt":"Write a SQL query to count orders by customer","completion":"SELECT customer_id, COUNT(*) as order_count FROM orders GROUP BY customer_id;"}
{"prompt":"How to handle NULL values in SQL?","completion":"Use IS NULL or IS NOT NULL to check for NULLs, or use COALESCE(column, default_value) to replace NULLs with a default value."}
{"prompt":"Write a SQL query to delete duplicate rows","completion":"DELETE t1 FROM table_name t1 INNER JOIN table_name t2 WHERE t1.id > t2.id AND t1.column_name = t2.column_name;"}
{"prompt":"What’s the difference between GROUP BY and ORDER BY in SQL?","completion":"GROUP BY aggregates rows into groups based on column values (e.g., for SUM, COUNT), while ORDER BY sorts the result set by specified columns."}
{"prompt":"Create an index in PostgreSQL for faster queries","completion":"CREATE INDEX idx_column_name ON table_name(column_name);"}
{"prompt":"Write a SQL query to find second-highest salary","completion":"SELECT MAX(salary) FROM employees WHERE salary < (SELECT MAX(salary) FROM employees);"}
{"prompt":"How to use a subquery in SQL?","completion":"A subquery is a query nested inside another, e.g., SELECT name FROM employees WHERE dept_id = (SELECT dept_id FROM departments WHERE dept_name = 'Sales');"}
{"prompt":"Write a SQL query to find employees hired in 2023","completion":"SELECT * FROM employees WHERE YEAR(hire_date) = 2023;"}
{"prompt":"What’s a foreign key in SQL?","completion":"A foreign key is a column that creates a relationship between two tables, referencing the primary key of another table to enforce referential integrity."}
{"prompt":"Write a SQL query to update employee salaries by 10%","completion":"UPDATE employees SET salary = salary * 1.10;"}
{"prompt":"How to use transactions in SQL?","completion":"Use BEGIN TRANSACTION, COMMIT, and ROLLBACK. Example: BEGIN TRANSACTION; UPDATE accounts SET balance = balance - 100 WHERE id = 1; COMMIT;"}
{"prompt":"Write a SQL query to find average order value by month","completion":"SELECT MONTH(order_date) as month, AVG(total) as avg_value FROM orders GROUP BY MONTH(order_date);"}
{"prompt":"What’s the difference between SQL and NoSQL databases?","completion":"SQL databases are relational, use structured schemas and SQL for queries (e.g., MySQL). NoSQL databases are non-relational, handle unstructured data, and support various query methods (e.g., MongoDB, Redis)."}
{"prompt":"Write a SQL query to pivot data","completion":"In PostgreSQL, use CROSSTAB or CASE: SELECT dept, SUM(CASE WHEN year = 2023 THEN sales ELSE 0 END) as sales_2023 FROM sales_data GROUP BY dept;"}
{"prompt":"How to backup a MySQL database?","completion":"Use mysqldump: mysqldump -u username -p database_name > backup.sql"}
{"prompt":"Write a SQL query to find employees with no orders","completion":"SELECT e.employee_id, e.name FROM employees e LEFT JOIN orders o ON e.employee_id = o.employee_id WHERE o.order_id IS NULL;"}
{"prompt":"What’s a window function in SQL?","completion":"A window function performs calculations across a set of rows related to the current row, e.g., ROW_NUMBER() OVER (PARTITION BY dept ORDER BY salary)."}
{"prompt":"Write a SQL query to find duplicate emails","completion":"SELECT email, COUNT(*) as count FROM users GROUP BY email HAVING count > 1;"}
{"prompt":"How to improve SQL query performance?","completion":"Use indexes, avoid SELECT *, use specific columns, optimize joins, and analyze query plans with EXPLAIN."}
{"prompt":"Write a SQL query to get total sales by region","completion":"SELECT region, SUM(sales) as total_sales FROM orders GROUP BY region;"}
{"prompt":"What’s the difference between DELETE and TRUNCATE in SQL?","completion":"DELETE removes specific rows with a WHERE clause and logs changes; TRUNCATE removes all rows, is faster, and resets auto-increment counters."}
{"prompt":"Write a SQL query to find employees with salary above average","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"}
{"prompt":"How to create a view in SQL?","completion":"CREATE VIEW view_name AS SELECT column1, column2 FROM table_name WHERE condition;"}
{"prompt":"Write a SQL query to get distinct values","completion":"SELECT DISTINCT column_name FROM table_name;"}
{"prompt":"What’s a materialized view in SQL?","completion":"A materialized view stores the query result physically and can be refreshed, unlike a regular view which is a virtual table."}
{"prompt":"Write a SQL query to find orders between two dates","completion":"SELECT * FROM orders WHERE order_date BETWEEN '2023-01-01' AND '2023-12-31';"}
{"prompt":"How to drop a table in SQL?","completion":"DROP TABLE table_name;"}
{"prompt":"What’s a trigger in SQL?","completion":"A trigger is a stored procedure that automatically runs on specific table events, like INSERT, UPDATE, or DELETE."}
{"prompt":"Write a MongoDB query to find users with age > 25","completion":"db.users.find({ age: { $gt: 25 } })"}
{"prompt":"How to insert a document in MongoDB?","completion":"db.collection.insertOne({ name: 'John', age: 30, city: 'New York' });"}
{"prompt":"Write a MongoDB query to update a document","completion":"db.users.updateOne({ _id: ObjectId('123') }, { $set: { age: 31 } });"}
{"prompt":"What’s the MongoDB aggregation pipeline?","completion":"The aggregation pipeline is a framework for data processing in MongoDB, using stages like $match, $group, $sort to transform documents."}
{"prompt":"Write a MongoDB query to group by category and count","completion":"db.products.aggregate([{ $group: { _id: '$category', count: { $sum: 1 } } }])"}
{"prompt":"How to create an index in MongoDB?","completion":"db.collection.createIndex({ field: 1 });"}
{"prompt":"Write a MongoDB query to find distinct values","completion":"db.collection.distinct('field_name');"}
{"prompt":"What’s the difference between MongoDB and Redis?","completion":"MongoDB is a document-based NoSQL database for structured/semi-structured data, while Redis is a key-value store optimized for in-memory speed."}
{"prompt":"Write a Redis command to store a key-value pair","completion":"SET user:123 name 'John Doe'"}
{"prompt":"How to delete a key in Redis?","completion":"DEL key_name"}
{"prompt":"Write a MongoDB query to sort documents by price","completion":"db.products.find().sort({ price: -1 });"}
{"prompt":"What’s a graph database like Neo4j used for?","completion":"Graph databases like Neo4j are used for relationships-heavy data, like social networks or recommendation systems, using nodes and edges."}
{"prompt":"Write a Neo4j Cypher query to find friends of a user","completion":"MATCH (user:Person {name: 'John'})-[:FRIEND]->(friend) RETURN friend.name;"}
{"prompt":"How to add a document in MongoDB with nested fields?","completion":"db.collection.insertOne({ name: 'John', address: { city: 'NY', zip: '10001' } });"}
{"prompt":"Write a MongoDB query to find documents with a specific field value","completion":"db.collection.find({ status: 'active' });"}
{"prompt":"What’s sharding in MongoDB?","completion":"Sharding distributes data across multiple servers in MongoDB to improve scalability and performance."}
{"prompt":"Write a Redis command to add to a set","completion":"SADD myset 'value1'"}
{"prompt":"How to query a range in Redis?","completion":"ZRANGEBYSCORE mysortedset 10 20"}
{"prompt":"Write a MongoDB query to delete documents","completion":"db.collection.deleteMany({ status: 'inactive' });"}
{"prompt":"What’s the difference between a document and a collection in MongoDB?","completion":"A document is a single record (like a JSON object) in MongoDB, while a collection is a group of documents, analogous to a table in SQL."}
{"prompt":"Write a Neo4j query to find shortest path between nodes","completion":"MATCH (start:Person {name: 'Alice'}), (end:Person {name: 'Bob'}), p = shortestPath((start)-[*]-(end)) RETURN p;"}
{"prompt":"How to handle transactions in MongoDB?","completion":"Use db.getMongo().startSession() and session.withTransaction() to run operations atomically."}
{"prompt":"Write a MongoDB query to count documents","completion":"db.collection.countDocuments({});"}
{"prompt":"What’s a TTL index in MongoDB?","completion":"A TTL (Time-To-Live) index automatically deletes documents after a specified time, e.g., db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"Write a Redis command to increment a counter","completion":"INCR counter_key"}
{"prompt":"How to query by regex in MongoDB?","completion":"db.collection.find({ name: { $regex: '^John', $options: 'i' } });"}
{"prompt":"Write a MongoDB query to project specific fields","completion":"db.collection.find({}, { name: 1, age: 1, _id: 0 });"}
{"prompt":"What’s eventual consistency in NoSQL?","completion":"Eventual consistency means that updates in a distributed NoSQL database may not be immediately visible to all nodes but will eventually synchronize."}
{"prompt":"Write a Neo4j query to create a relationship","completion":"MATCH (a:Person {name: 'Alice'}), (b:Person {name: 'Bob'}) CREATE (a)-[:FRIEND]->(b);"}
{"prompt":"How to backup a MongoDB database?","completion":"Use mongodump: mongodump --db database_name --out backup_folder"}
{"prompt":"Write a MongoDB query to find top 5 highest values","completion":"db.collection.find().sort({ value: -1 }).limit(5);"}
{"prompt":"What’s a capped collection in MongoDB?","completion":"A capped collection is a fixed-size MongoDB collection that automatically overwrites old data when full, ideal for logging."}
{"prompt":"Write a Redis command to get all keys","completion":"KEYS *"}
{"prompt":"What’s the weather today?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to code a website in Python?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s the capital of France?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain machine learning basics","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Query the meaning of life","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s a good recipe for pasta?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to install Docker?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s the best JavaScript framework?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me a joke","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s a database?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to secure a web server?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s the stock market like today?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain cloud computing","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn guitar?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s the difference between AI and ML?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to configure AWS S3?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s the history of the internet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to write a resume?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s a neural network?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to set up a VPN?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s the best programming language?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to analyze data in Excel?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s quantum computing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to create a mobile app?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s the time now?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to optimize a website for SEO?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s a blockchain?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to train a dog?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What’s the difference between TCP and UDP?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to debug a Java program?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How do I select all products from a SQL table named 'products'?","completion":"SELECT * FROM products;"}
{"prompt":"What's the best way to learn Python?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find documents where age is less than 30","completion":"db.collection.find({ age: { $lt: 30 } });"}
{"prompt":"Explain SQL INNER JOIN","completion":"INNER JOIN returns rows where there is a match in both tables. Example: SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to insert a record in SQL?","completion":"INSERT INTO table_name (column1, column2) VALUES (value1, value2);"}
{"prompt":"What is the weather like today?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Query to update a document in MongoDB","completion":"db.collection.updateOne({ _id: '123' }, { $set: { field: 'newValue' } });"}
{"prompt":"Explain NoSQL document stores","completion":"Document stores like MongoDB store data as JSON-like documents, allowing flexible schemas."}
{"prompt":"Write a SQL query to count rows by group","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"How to delete a key in Redis?","completion":"DEL mykey"}
{"prompt":"What's a good movie to watch?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Create a SQL table with a primary key","completion":"CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50));"}
{"prompt":"Query to find distinct values in MongoDB","completion":"db.collection.distinct('field');"}
{"prompt":"Explain ACID properties","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable database transactions."}
{"prompt":"How to create an index in SQL?","completion":"CREATE INDEX idx_name ON table_name (column);"}
{"prompt":"Write a Neo4j query to create a node","completion":"CREATE (n:Person {name: 'Alice'});"}
{"prompt":"How to cook pasta?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to join two tables","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What is sharding in NoSQL?","completion":"Sharding distributes data across multiple servers to improve performance and scalability."}
{"prompt":"How to set a key in Redis?","completion":"SET mykey 'value'"}
{"prompt":"Explain SQL foreign keys","completion":"Foreign keys link tables by referencing a primary key, ensuring referential integrity."}
{"prompt":"MongoDB query to sort results","completion":"db.collection.find().sort({ field: 1 });"}
{"prompt":"What is the capital of France?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query with HAVING clause","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"How to unwind arrays in MongoDB?","completion":"db.collection.aggregate([{ $unwind: '$arrayField' }]);"}
{"prompt":"Explain normalization in SQL","completion":"Normalization organizes tables to reduce redundancy, following forms like 1NF, 2NF, 3NF."}
{"prompt":"How to expire a key in Redis?","completion":"SET mykey 'value' EX 60"}
{"prompt":"Write a SQL subquery","completion":"SELECT * FROM employees WHERE salary = (SELECT MAX(salary) FROM employees);"}
{"prompt":"What is a graph database?","completion":"Graph databases like Neo4j store data as nodes and relationships for connected data."}
{"prompt":"How to fix a car engine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"MongoDB query to count documents","completion":"db.collection.countDocuments({ filter });"}
{"prompt":"SQL query to drop a table","completion":"DROP TABLE table_name;"}
{"prompt":"Explain CAP theorem","completion":"CAP theorem states distributed systems can prioritize two of Consistency, Availability, Partition tolerance."}
{"prompt":"How to perform aggregation in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$field', total: { $sum: '$value' } } }]);"}
{"prompt":"What's a good book to read?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to alter a table","completion":"ALTER TABLE table_name ADD column_name datatype;"}
{"prompt":"Neo4j query to create a relationship","completion":"MATCH (a:Person), (b:Person) CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"Explain eventual consistency","completion":"Eventual consistency means replicas may differ temporarily but converge over time."}
{"prompt":"How to use LIKE in SQL?","completion":"SELECT * FROM table WHERE column LIKE '%pattern%';"}
{"prompt":"Write a Redis query for hashes","completion":"HMSET myhash field1 'value1' field2 'value2'"}
{"prompt":"How to invest in stocks?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"MongoDB query with $lookup","completion":"db.orders.aggregate([{ $lookup: { from: 'inventory', localField: 'item', foreignField: 'sku', as: 'inventory_docs' } }]);"}
{"prompt":"Explain SQL triggers","completion":"Triggers are procedures that run automatically before or after events like INSERT or UPDATE."}
{"prompt":"SQL query for UNION","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"What is a key-value store?","completion":"A key-value store like Redis stores data as simple key-value pairs for fast access."}
{"prompt":"How to meditate?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to create a view","completion":"CREATE VIEW view_name AS SELECT column1, column2 FROM table_name WHERE condition;"}
{"prompt":"MongoDB query to limit results","completion":"db.collection.find().limit(10);"}
{"prompt":"Explain database replication","completion":"Replication copies data across servers for redundancy and load balancing."}
{"prompt":"How to batch insert in SQL?","completion":"INSERT INTO table VALUES (val1), (val2), ...;"}
{"prompt":"What is blockchain?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to traverse a graph","completion":"MATCH (a:Person)-[:KNOWS]->(b:Person) RETURN a, b;"}
{"prompt":"SQL query with CTE","completion":"WITH cte AS (SELECT * FROM table) SELECT * FROM cte;"}
{"prompt":"Explain multi-tenancy in databases","completion":"Multi-tenancy isolates multiple users’ data within a shared database."}
{"prompt":"How to optimize a slow SQL query?","completion":"Add indexes, avoid SELECT *, use EXPLAIN to analyze, limit rows with WHERE."}
{"prompt":"What's the score of the game?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"MongoDB query for projection","completion":"db.collection.find({}, { field1: 1, field2: 0 });"}
{"prompt":"Explain SQL stored procedures","completion":"Stored procedures are precompiled SQL code stored for reuse and security."}
{"prompt":"How to push to a list in Redis?","completion":"LPUSH mylist 'value'"}
{"prompt":"What is denormalization in NoSQL?","completion":"Denormalization duplicates data to improve read performance in NoSQL databases."}
{"prompt":"SQL query for full-text search","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('search term');"}
{"prompt":"How to draw a portrait?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain partitioning in SQL","completion":"Partitioning divides large tables into smaller pieces for better performance."}
{"prompt":"MongoDB query to rename a collection","completion":"db.collection.renameCollection('newName');"}
{"prompt":"What is a column-family store?","completion":"Column-family stores like Cassandra organize data in columns for wide rows."}
{"prompt":"SQL query with window function","completion":"SELECT name, ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary) FROM employees;"}
{"prompt":"How to bake a cake?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain caching with Redis","completion":"Redis caches data in memory for faster retrieval than disk-based databases."}
{"prompt":"SQL query to handle transactions","completion":"BEGIN TRANSACTION; ... COMMIT;"}
{"prompt":"MongoDB query to find by regex","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"What is virtual reality?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain SQL indexes","completion":"Indexes speed up queries by allowing faster data retrieval, like a book’s index."}
{"prompt":"Neo4j query to delete a node","completion":"MATCH (n:Person {name: 'Alice'}) DELETE n;"}
{"prompt":"SQL query to pivot data","completion":"SELECT * FROM (SELECT ...) PIVOT (AGG FOR column IN (...));"}
{"prompt":"How to count rows in SQL?","completion":"SELECT COUNT(*) FROM table_name;"}
{"prompt":"What's the population of China?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"MongoDB query to update multiple documents","completion":"db.collection.updateMany({ status: 'old' }, { $set: { status: 'new' } });"}
{"prompt":"Explain SQL views","completion":"Views are virtual tables based on queries, used for security and simplicity."}
{"prompt":"Redis query to get a range","completion":"LRANGE mylist 0 -1"}
{"prompt":"How to join in NoSQL?","completion":"NoSQL uses denormalization or app-level joins; MongoDB has $lookup for joins."}
{"prompt":"SQL query to truncate a table","completion":"TRUNCATE TABLE table_name;"}
{"prompt":"What is machine learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"MongoDB query to delete documents","completion":"db.collection.deleteMany({ field: 'value' });"}
{"prompt":"Explain SQL constraints","completion":"Constraints like PRIMARY KEY, FOREIGN KEY, NOT NULL enforce data integrity."}
{"prompt":"Neo4j query to find shortest path","completion":"MATCH p=shortestPath((a:Person)-[*]-(b:Person)) RETURN p;"}
{"prompt":"SQL query to find duplicates","completion":"SELECT column, COUNT(*) FROM table GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"MongoDB query to group by field","completion":"db.collection.aggregate([{ $group: { _id: '$field', count: { $sum: 1 } } }]);"}
{"prompt":"Explain Redis persistence","completion":"Redis supports persistence via RDB snapshots or AOF logs for durability."}
{"prompt":"SQL query to rename a column","completion":"ALTER TABLE table_name RENAME COLUMN old_name TO new_name;"}
{"prompt":"What's the best travel destination?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to update a property","completion":"MATCH (n:Node {id: 1}) SET n.property = 'newValue';"}
{"prompt":"SQL query to select top 10 rows","completion":"SELECT TOP 10 * FROM table_name; -- or LIMIT 10 in some dialects"}
{"prompt":"MongoDB query to find by date","completion":"db.collection.find({ dateField: { $gte: ISODate('2023-01-01') } });"}
{"prompt":"Explain database clustering","completion":"Clustering groups servers to act as a single system for scalability and reliability."}
{"prompt":"How to play guitar?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to check null values","completion":"SELECT * FROM table_name WHERE column IS NULL;"}
{"prompt":"MongoDB query to drop an index","completion":"db.collection.dropIndex('index_name');"}
{"prompt":"Explain SQL cursors","completion":"Cursors allow row-by-row processing of query results in SQL."}
{"prompt":"Redis query to increment a value","completion":"INCR mycounter"}
{"prompt":"How to create a table in SQL for storing customer data?","completion":"CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(100), email VARCHAR(100) UNIQUE, created_at DATE);"}
{"prompt":"Explain the difference between SQL and NoSQL databases.","completion":"SQL databases are relational, using structured tables with fixed schemas, while NoSQL databases are non-relational, supporting flexible schemas like documents, key-value, or graphs, suited for unstructured data and scalability."}
{"prompt":"Write a MongoDB query to find all documents where age is less than 30.","completion":"db.collection.find({ age: { $lt: 30 } });"}
{"prompt":"What's the weather like today?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to insert a record in SQL?","completion":"INSERT INTO table_name (column1, column2) VALUES ('value1', 'value2');"}
{"prompt":"What is a primary key in a database?","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicates and enabling fast lookups."}
{"prompt":"Write a Redis command to store a key-value pair.","completion":"SET user:100 name 'John Doe'"}
{"prompt":"How do I join two tables in SQL?","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Explain sharding in NoSQL databases.","completion":"Sharding distributes data across multiple servers to improve scalability and performance in NoSQL databases like MongoDB."}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ _id: '123' }, { $set: { field: 'newValue' } });"}
{"prompt":"What is normalization in SQL?","completion":"Normalization organizes data in tables to reduce redundancy and ensure data integrity, following forms like 1NF, 2NF, 3NF."}
{"prompt":"How to delete a record in SQL?","completion":"DELETE FROM table_name WHERE condition;"}
{"prompt":"Write a Neo4j query to create a relationship.","completion":"MATCH (a:Person {name: 'Alice'}), (b:Person {name: 'Bob'}) CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"Tell me about Python programming.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is ACID in databases?","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions in databases."}
{"prompt":"How to count documents in MongoDB?","completion":"db.collection.countDocuments({});"}
{"prompt":"Write a SQL query with a GROUP BY clause.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"Explain eventual consistency in NoSQL.","completion":"Eventual consistency ensures that, over time, all replicas in a distributed NoSQL system converge to the same data state."}
{"prompt":"How to create an index in SQL?","completion":"CREATE INDEX idx_column ON table_name (column_name);"}
{"prompt":"What's the best movie to watch?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Redis command to expire a key.","completion":"SET mykey 'value' EX 3600"}
{"prompt":"How to perform a LEFT JOIN in SQL?","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What is a document store in NoSQL?","completion":"A document store, like MongoDB, stores data in flexible, JSON-like documents without a fixed schema."}
{"prompt":"How to sort results in MongoDB?","completion":"db.collection.find().sort({ age: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"Explain foreign keys in SQL.","completion":"Foreign keys link tables by referencing a primary key in another table, enforcing referential integrity."}
{"prompt":"How to push an element to a Redis list?","completion":"LPUSH mylist 'value'"}
{"prompt":"Write a SQL query to find distinct values.","completion":"SELECT DISTINCT column_name FROM table_name;"}
{"prompt":"What is a graph database?","completion":"A graph database, like Neo4j, stores data as nodes and relationships, optimized for connected data queries."}
{"prompt":"How to optimize a slow SQL query?","completion":"Use EXPLAIN to analyze, add indexes, avoid SELECT *, and filter with WHERE clauses."}
{"prompt":"What's the capital of France?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to delete documents.","completion":"db.collection.deleteMany({ status: 'inactive' });"}
{"prompt":"Explain CAP theorem for NoSQL.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, or Partition tolerance."}
{"prompt":"Write a Neo4j query to find all nodes.","completion":"MATCH (n) RETURN n;"}
{"prompt":"How to handle transactions in SQL?","completion":"BEGIN TRANSACTION; -- SQL statements -- COMMIT; -- or ROLLBACK on error"}
{"prompt":"What is a key-value store?","completion":"A key-value store, like Redis, stores data as simple key-value pairs for fast retrieval."}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.collection.aggregate([{ $lookup: { from: 'otherCollection', localField: 'field', foreignField: 'field', as: 'result' } }]);"}
{"prompt":"Explain triggers in SQL.","completion":"Triggers are automated procedures that execute before or after events like INSERT, UPDATE, or DELETE in SQL."}
{"prompt":"Write a SQL query with a subquery.","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"}
{"prompt":"What is denormalization in NoSQL?","completion":"Denormalization duplicates data in NoSQL databases to optimize read performance."}
{"prompt":"Write a Redis command for a hash.","completion":"HMSET user:100 name 'John' age 30"}
{"prompt":"Explain indexes in databases.","completion":"Indexes improve query performance by allowing faster data retrieval, like a book’s index."}
{"prompt":"How to limit results in MongoDB?","completion":"db.collection.find().limit(10);"}
{"prompt":"What are window functions in SQL?","completion":"Window functions, like ROW_NUMBER(), perform calculations across a set of rows without grouping."}
{"prompt":"Write a SQL query with HAVING clause.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"What is replication in databases?","completion":"Replication copies data across servers for redundancy and load balancing."}
{"prompt":"How to rename a collection in MongoDB?","completion":"db.collection.renameCollection('newName');"}
{"prompt":"Explain stored procedures in SQL.","completion":"Stored procedures are precompiled SQL code stored in the database for reuse and security."}
{"prompt":"What's the latest news on AI?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to delete a node.","completion":"MATCH (n:Node {id: '123'}) DELETE n;"}
{"prompt":"How to perform aggregation in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$category', total: { $sum: '$price' } } }]);"}
{"prompt":"What is BASE in NoSQL?","completion":"BASE (Basically Available, Soft state, Eventual consistency) prioritizes availability over immediate consistency."}
{"prompt":"How to use LIKE in SQL?","completion":"SELECT * FROM table_name WHERE column LIKE '%pattern%';"}
{"prompt":"Explain caching with Redis.","completion":"Redis caches frequently accessed data in memory for faster retrieval than disk-based databases."}
{"prompt":"Write a MongoDB projection query.","completion":"db.collection.find({}, { field1: 1, field2: 0 });"}
{"prompt":"How to batch insert in SQL?","completion":"INSERT INTO table_name VALUES ('val1'), ('val2');"}
{"prompt":"What is multi-tenancy in databases?","completion":"Multi-tenancy isolates data for multiple users/tenants sharing a single database."}
{"prompt":"Tell me a joke.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query for UNION.","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"What is a column-family store?","completion":"A column-family store, like Cassandra, organizes data in column families for scalability."}
{"prompt":"How to alter a table in SQL?","completion":"ALTER TABLE table_name ADD column_name datatype;"}
{"prompt":"Write a Redis command to get a list.","completion":"LRANGE mylist 0 -1"}
{"prompt":"Explain partitioning in SQL.","completion":"Partitioning divides large tables into smaller, manageable pieces for better performance."}
{"prompt":"How to find distinct values in MongoDB?","completion":"db.collection.distinct('field');"}
{"prompt":"What’s the population of China?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with CTE.","completion":"WITH cte AS (SELECT * FROM table) SELECT * FROM cte;"}
{"prompt":"How to create a node in Neo4j?","completion":"CREATE (n:Person {name: 'Alice'});"}
{"prompt":"Explain full-text search in PostgreSQL.","completion":"Use to_tsvector and to_tsquery, e.g., SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('term');"}
{"prompt":"Write a MongoDB query to increment a field.","completion":"db.collection.updateOne({ _id: '123' }, { $inc: { count: 1 } });"}
{"prompt":"What are views in SQL?","completion":"Views are virtual tables created from a query, used for security and simplicity."}
{"prompt":"How to expire a document in MongoDB?","completion":"Use TTL index: db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"Explain transactions in NoSQL.","completion":"Some NoSQL databases like MongoDB support transactions, ensuring atomic operations across documents."}
{"prompt":"Write a SQL query for ORDER BY.","completion":"SELECT * FROM table_name ORDER BY column DESC;"}
{"prompt":"How to recommend a book?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Redis command for sets.","completion":"SADD myset 'value1' 'value2'"}
{"prompt":"What is schema-less design in NoSQL?","completion":"Schema-less design allows NoSQL databases to store documents with varying structures."}
{"prompt":"How to drop an index in SQL?","completion":"DROP INDEX idx_name ON table_name;"}
{"prompt":"Explain joins in NoSQL.","completion":"NoSQL often uses denormalization, but some like MongoDB support joins via $lookup."}
{"prompt":"Write a Neo4j query for shortest path.","completion":"MATCH (start:Node {id: 'A'}), (end:Node {id: 'B'}), p = shortestPath((start)-[*]-(end)) RETURN p;"}
{"prompt":"Write a SQL query with BETWEEN.","completion":"SELECT * FROM employees WHERE salary BETWEEN 40000 AND 60000;"}
{"prompt":"What is clustering in databases?","completion":"Clustering groups data on disk to improve query performance, often used in SQL databases."}
{"prompt":"How to add a field in MongoDB?","completion":"db.collection.updateMany({}, { $set: { newField: 'value' } });"}
{"prompt":"Explain materialized views in SQL.","completion":"Materialized views store query results physically, refreshing periodically for faster access."}
{"prompt":"Write a Redis command to check key existence.","completion":"EXISTS mykey"}
{"prompt":"How to handle NULL in SQL?","completion":"Use IS NULL or IS NOT NULL, e.g., SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"What is a time-series database?","completion":"A time-series database, like InfluxDB, optimizes storage and queries for time-stamped data."}
{"prompt":"Write a SQL query for pivot.","completion":"SELECT * FROM (SELECT column FROM table) PIVOT (SUM(value) FOR column IN ('val1', 'val2'));"}
{"prompt":"Explain eventual consistency in MongoDB.","completion":"MongoDB’s eventual consistency ensures replicas eventually match the primary after writes."}
{"prompt":"How to create a database in SQL?","completion":"CREATE DATABASE database_name;"}
{"prompt":"Write a MongoDB query for text search.","completion":"db.collection.createIndex({ field: 'text' }); db.collection.find({ $text: { $search: 'term' } });"}
{"prompt":"How to use CASE in SQL?","completion":"SELECT column, CASE WHEN condition THEN 'value1' ELSE 'value2' END FROM table;"}
{"prompt":"What is a wide-column store?","completion":"A wide-column store, like Cassandra, stores data in flexible column families for scalability."}
{"prompt":"Write a Neo4j query to update a node.","completion":"MATCH (n:Node {id: '123'}) SET n.property = 'newValue';"}
{"prompt":"How to check database size in MongoDB?","completion":"db.stats();"}
{"prompt":"Explain cursors in SQL.","completion":"Cursors iterate over query results row-by-row for processing in SQL."}
{"prompt":"Write a SQL query with EXISTS.","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE column = table1.column);"}
{"prompt":"What is horizontal scaling in NoSQL?","completion":"Horizontal scaling adds more servers to distribute data and load in NoSQL systems."}
{"prompt":"How to list all keys in Redis?","completion":"KEYS *"}
{"prompt":"Write a MongoDB query to find one document.","completion":"db.collection.findOne({ field: 'value' });"}
{"prompt":"Explain constraints in SQL.","completion":"Constraints like PRIMARY KEY, FOREIGN KEY, NOT NULL enforce data integrity in SQL."}
{"prompt":"What’s your favorite color?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query for self-join.","completion":"SELECT a.name, b.name FROM employees a JOIN employees b ON a.manager_id = b.id;"}
{"prompt":"What is a composite key?","completion":"A composite key uses multiple columns to uniquely identify records in a table."}
{"prompt":"How to pop an element from a Redis list?","completion":"LPOP mylist"}
{"prompt":"Write a MongoDB query to sort and limit.","completion":"db.collection.find().sort({ age: -1 }).limit(5);"}
{"prompt":"Explain database transactions.","completion":"Transactions ensure a series of operations complete atomically or roll back on failure."}
{"prompt":"How to drop a database in SQL?","completion":"DROP DATABASE database_name;"}
{"prompt":"What is a query plan in SQL?","completion":"A query plan outlines the steps a database takes to execute a query, viewable with EXPLAIN."}
{"prompt":"How to travel to Mars?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to count relationships.","completion":"MATCH ()-[r:RELATION]->() RETURN COUNT(r);"}
{"prompt":"How to use IN in SQL?","completion":"SELECT * FROM table WHERE column IN ('value1', 'value2');"}
{"prompt":"What is a capped collection in MongoDB?","completion":"A capped collection has a fixed size, automatically overwriting old data when full."}
{"prompt":"Write a Redis command for sorted sets.","completion":"ZADD myset 1 'value1' 2 'value2'"}
{"prompt":"Explain referential integrity in SQL.","completion":"Referential integrity ensures foreign keys reference valid primary keys, preventing orphaned records."}
{"prompt":"How to update multiple rows in SQL?","completion":"UPDATE table_name SET column = 'value' WHERE condition;"}
{"prompt":"What is a NoSQL database?","completion":"A NoSQL database handles unstructured or semi-structured data with flexible schemas, unlike relational SQL databases."}
{"prompt":"How to code in Java?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with COALESCE.","completion":"SELECT COALESCE(column, 'default') FROM table;"}
{"prompt":"How to list collections in MongoDB?","completion":"db.getCollectionNames();"}
{"prompt":"What is a transaction log in databases?","completion":"A transaction log records all changes to ensure recovery and consistency in case of failures."}
{"prompt":"Write a Neo4j query to find neighbors.","completion":"MATCH (n:Node {id: '123'})-[:RELATION]->(neighbor) RETURN neighbor;"}
{"prompt":"How to use DISTINCT in SQL?","completion":"SELECT DISTINCT column FROM table;"}
{"prompt":"Explain write-ahead logging.","completion":"Write-ahead logging records changes to a log before applying them to the database for durability."}
{"prompt":"How to increment a field in Redis?","completion":"INCR mycounter"}
{"prompt":"What’s the best workout routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to remove a field.","completion":"db.collection.updateMany({}, { $unset: { field: '' } });"}
{"prompt":"What is a clustered index in SQL?","completion":"A clustered index determines the physical order of data in a table, improving query performance."}
{"prompt":"How to create a user in SQL?","completion":"CREATE USER 'username' IDENTIFIED BY 'password';"}
{"prompt":"Explain data modeling in NoSQL.","completion":"Data modeling in NoSQL designs flexible schemas based on query patterns, often denormalized for performance."}
{"prompt":"Write a SQL query for cross join.","completion":"SELECT * FROM table1 CROSS JOIN table2;"}
{"prompt":"How to check Redis memory usage?","completion":"INFO MEMORY"}
{"prompt":"What is a secondary index?","completion":"A secondary index is a non-primary index used to speed up queries on non-key columns."}
{"prompt":"Write a MongoDB query with $gte.","completion":"db.collection.find({ price: { $gte: 100 } });"}
{"prompt":"Explain MVCC in databases.","completion":"MVCC (Multi-Version Concurrency Control) manages concurrent access by maintaining multiple versions of data."}
{"prompt":"How to grant permissions in SQL?","completion":"GRANT SELECT, INSERT ON table_name TO 'username';"}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH ()-[r:RELATION]->() WHERE r.id = '123' DELETE r;"}
{"prompt":"What is a covering index?","completion":"A covering index contains all columns needed for a query, avoiding table access."}
{"prompt":"How to list databases in MongoDB?","completion":"show databases;"}
{"prompt":"Explain database locks.","completion":"Database locks prevent concurrent modifications to ensure data consistency during transactions."}
{"prompt":"Write a SQL query with LIMIT.","completion":"SELECT * FROM table LIMIT 10;"}
{"prompt":"How to play chess?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Redis command to get set members.","completion":"SMEMBERS myset"}
{"prompt":"What is a non-relational database?","completion":"A non-relational (NoSQL) database stores data without fixed schemas, supporting documents, graphs, or key-values."}
{"prompt":"How to use GROUP_CONCAT in SQL?","completion":"SELECT department, GROUP_CONCAT(name) FROM employees GROUP BY department;"}
{"prompt":"Write a MongoDB query for regex.","completion":"db.collection.find({ name: { $regex: '^A', $options: 'i' } });"}
{"prompt":"Explain B-tree indexes.","completion":"B-tree indexes organize data in a balanced tree structure for efficient range queries and searches."}
{"prompt":"How to drop a collection in MongoDB?","completion":"db.collection.drop();"}
{"prompt":"What is a database schema?","completion":"A database schema defines the structure of tables, columns, and relationships in a database."}
{"prompt":"How to learn photography?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with ROLLUP.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department WITH ROLLUP;"}
{"prompt":"How to use $exists in MongoDB?","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"What is a hash index?","completion":"A hash index uses a hash function for fast lookups, ideal for equality queries but not ranges."}
{"prompt":"Write a Neo4j query for all paths.","completion":"MATCH p=(start:Node {id: 'A'})-[*1..3]->(end) RETURN p;"}
{"prompt":"How to revoke permissions in SQL?","completion":"REVOKE SELECT ON table_name FROM 'username';"}
{"prompt":"Explain data sharding.","completion":"Sharding splits data across multiple servers based on a key to improve scalability."}
{"prompt":"Write a Redis command to get hash values.","completion":"HGETALL myhash"}
{"prompt":"Write a SQL query to find all employees with salary > 50000","completion":"SELECT * FROM employees WHERE salary > 50000;"}
{"prompt":"How to create a collection in MongoDB?","completion":"db.createCollection('collection_name');"}
{"prompt":"What is a foreign key?","completion":"A foreign key links a column in one table to the primary key of another, enforcing referential integrity."}
{"prompt":"How to use aggregate functions in SQL?","completion":"Functions like COUNT(), SUM(), AVG() perform calculations on sets of rows, often with GROUP BY."}
{"prompt":"Write a MongoDB query to find documents with a specific field.","completion":"db.collection.find({ field: 'value' });"}
{"prompt":"Explain isolation levels in databases.","completion":"Isolation levels (READ UNCOMMITTED, READ COMMITTED, REPEATABLE READ, SERIALIZABLE) define how transaction integrity is visible to other transactions."}
{"prompt":"How to create a trigger in SQL?","completion":"CREATE TRIGGER trigger_name BEFORE INSERT ON table_name FOR EACH ROW BEGIN -- SQL statements END;"}
{"prompt":"What is a NoSQL document database?","completion":"A NoSQL document database, like MongoDB, stores data as flexible, JSON-like documents."}
{"prompt":"How to use JOINs in SQL?","completion":"JOINs combine rows from two or more tables based on related columns using INNER JOIN, LEFT JOIN, etc."}
{"prompt":"Write a Redis command to delete a key.","completion":"DEL mykey"}
{"prompt":"Explain data replication.","completion":"Replication copies data across multiple servers for redundancy and improved read performance."}
{"prompt":"How to create a user in MongoDB?","completion":"db.createUser({ user: 'username', pwd: 'password', roles: ['readWrite', 'dbAdmin'] });"}
{"prompt":"What is a surrogate key?","completion":"A surrogate key is an artificial unique identifier for a record, often an auto-incremented number."}
{"prompt":"Write a SQL query with INNER JOIN.","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to use $and in MongoDB?","completion":"db.collection.find({ $and: [ { field1: 'value1' }, { field2: 'value2' } ] });"}
{"prompt":"What is eventual consistency?","completion":"Eventual consistency means that all replicas will eventually converge to the same state after updates."}
{"prompt":"How to create a stored procedure in SQL?","completion":"CREATE PROCEDURE procedure_name AS BEGIN -- SQL statements END;"}
{"prompt":"What is a relational database?","completion":"A relational database organizes data into tables with rows and columns, linked by keys."}
{"prompt":"How to optimize MongoDB queries?","completion":"Use indexes, avoid large scans, select specific fields, and analyze with explain()."}
{"prompt":"What’s the meaning of life?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to select distinct names from a table in SQL?","completion":"SELECT DISTINCT name FROM table_name;"}
{"prompt":"Write a MongoDB query to find documents where age is less than 30.","completion":"db.collection.find({ age: { $lt: 30 } });"}
{"prompt":"Explain the difference between SQL and NoSQL databases.","completion":"SQL databases are relational, use structured schemas, and support SQL queries, while NoSQL databases are non-relational, schema-less, and optimized for scalability and flexibility."}
{"prompt":"Create a SQL query to join two tables, orders and customers.","completion":"SELECT * FROM orders INNER JOIN customers ON orders.customer_id = customers.id;"}
{"prompt":"How to insert a document in MongoDB?","completion":"db.collection.insertOne({ key: 'value' });"}
{"prompt":"How to recommend a good book?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is a primary key in SQL?","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicates and enabling fast lookups."}
{"prompt":"Write a Redis command to set a key with a 60-second expiration.","completion":"SET mykey 'value' EX 60"}
{"prompt":"How to group by department and count employees in SQL?","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"Explain sharding in MongoDB.","completion":"Sharding distributes data across multiple servers to handle large datasets and improve performance."}
{"prompt":"How to learn Python programming?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Create an index in PostgreSQL.","completion":"CREATE INDEX idx_name ON table_name (column_name);"}
{"prompt":"Write a Neo4j query to find all friends of a person.","completion":"MATCH (p:Person {name: 'Alice'})-[:KNOWS]->(friend) RETURN friend;"}
{"prompt":"What is normalization in SQL?","completion":"Normalization organizes data into tables to reduce redundancy and improve integrity."}
{"prompt":"What's the weather today?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { key: 'new_value' } });"}
{"prompt":"Explain ACID properties.","completion":"ACID (Atomicity, Consistency, Isolation, Dur shape) ensures reliable database transactions."}
{"prompt":"Write a SQL query with a LEFT JOIN.","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What is a document store in NoSQL?","completion":"A document store, like MongoDB, stores data as JSON-like documents with flexible schemas."}
{"prompt":"How to create a SQL table with constraints?","completion":"CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50) NOT NULL);"}
{"prompt":"Write a MongoDB query to count documents.","completion":"db.collection.countDocuments({});"}
{"prompt":"What is CAP theorem?","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance."}
{"prompt":"How to fix a car?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain SQL injection.","completion":"SQL injection is an attack where malicious SQL code is inserted into queries to manipulate databases."}
{"prompt":"How to optimize a slow SQL query?","completion":"Use indexes, avoid SELECT *, analyze with EXPLAIN, and filter rows early."}
{"prompt":"Write a Redis command to increment a counter.","completion":"INCR mycounter"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data to improve read performance in NoSQL databases."}
{"prompt":"How to sort documents in MongoDB?","completion":"db.collection.find().sort({ field: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"What is blockchain technology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain foreign keys in SQL.","completion":"Foreign keys link tables by referencing the primary key of another table, ensuring referential integrity."}
{"prompt":"Write a Redis command for a list push.","completion":"LPUSH mylist 'value'"}
{"prompt":"What's the meaning of life?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB aggregation query.","completion":"db.collection.aggregate([{ $group: { _id: '$category', total: { $sum: '$price' } } }]);"}
{"prompt":"Explain graph databases.","completion":"Graph databases like Neo4j store data as nodes and relationships, ideal for connected data."}
{"prompt":"What's the latest AI news?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.collection.aggregate([{ $lookup: { from: 'other_collection', localField: 'field', foreignField: 'field', as: 'output' } }]);"}
{"prompt":"Explain triggers in SQL.","completion":"Triggers are database procedures that automatically execute in response to specific table events."}
{"prompt":"How to set a hash in Redis?","completion":"HMSET myhash field1 'value1' field2 'value2'"}
{"prompt":"Write a SQL query with HAVING.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"Explain eventual consistency.","completion":"Eventual consistency means distributed NoSQL databases may temporarily differ but will converge."}
{"prompt":"How to play the guitar?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is partitioning in SQL?","completion":"Partitioning divides large tables into smaller, manageable pieces for better performance."}
{"prompt":"Write a Neo4j query to delete a node.","completion":"MATCH (n:Node {id: '123'}) DETACH DELETE n;"}
{"prompt":"Explain stored procedures.","completion":"Stored procedures are precompiled SQL scripts stored in the database for reuse and security."}
{"prompt":"Write a SQL query for UNION ALL.","completion":"SELECT column FROM table1 UNION ALL SELECT column FROM table2;"}
{"prompt":"What is a column-family store?","completion":"Column-family stores like Cassandra organize data into column families for wide rows."}
{"prompt":"How to create a unique index in SQL?","completion":"CREATE UNIQUE INDEX idx_name ON table_name (column_name);"}
{"prompt":"What's virtual reality?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to unwind an array in MongoDB?","completion":"db.collection.aggregate([{ $unwind: '$arrayField' }]);"}
{"prompt":"Explain replication in databases.","completion":"Replication copies data across servers for redundancy and load balancing."}
{"prompt":"How to write a CTE in SQL?","completion":"WITH cte_name AS (SELECT * FROM table) SELECT * FROM cte_name;"}
{"prompt":"What is BASE in NoSQL?","completion":"BASE (Basically Available, Soft state, Eventual consistency) prioritizes availability over strict consistency."}
{"prompt":"What's the best workout routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to rename a MongoDB collection?","completion":"db.collection.renameCollection('newName');"}
{"prompt":"Explain window functions in SQL.","completion":"Window functions perform calculations across rows related to the current row, like ROW_NUMBER()."}
{"prompt":"How to get a list in Redis?","completion":"LRANGE mylist 0 -1"}
{"prompt":"How to fix a leaky faucet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with ORDER BY.","completion":"SELECT * FROM table ORDER BY column DESC;"}
{"prompt":"What is schema-less design?","completion":"Schema-less design in NoSQL allows documents to have varying structures."}
{"prompt":"How to meditate effectively?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to perform a full-text search in PostgreSQL?","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('search_term');"}
{"prompt":"Explain multi-tenancy in databases.","completion":"Multi-tenancy isolates multiple users' data within a shared database."}
{"prompt":"What's quantum computing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query for shortest path.","completion":"MATCH path = shortestPath((a:Person {name: 'Alice'})-[*]->(b:Person {name: 'Bob'})) RETURN path;"}
{"prompt":"How to use $in in MongoDB?","completion":"db.collection.find({ field: { $in: ['value1', 'value2'] } });"}
{"prompt":"Explain database indexing.","completion": "Indexes speed up query performance by creating efficient data structures for lookups."}
{"prompt":"Write a SQL query with CASE.","completion":"SELECT name, CASE WHEN age > 30 THEN 'Senior' ELSE 'Junior' END AS status FROM employees;"}
{"prompt":"How to use Redis pub/sub?","completion":"PUBLISH channel 'message'; SUBSCRIBE channel"}
{"prompt":"What is a transaction in SQL?","completion":"A transaction is a sequence of operations performed as a single unit, ensuring ACID properties."}
{"prompt":"How to create a SQL trigger?","completion":"CREATE TRIGGER trigger_name AFTER INSERT ON table_name FOR EACH ROW BEGIN ... END;"}
{"prompt":"Write a MongoDB query with $exists.","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"Explain NoSQL scalability.","completion":"NoSQL databases scale horizontally across distributed systems for high performance."}
{"prompt":"What's the history of Rome?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use DISTINCT in SQL?","completion":"SELECT DISTINCT column FROM table_name;"}
{"prompt":"Write a Redis command to get a hash field.","completion":"HGET myhash field1"}
{"prompt":"Explain SQL constraints.","completion":"Constraints enforce rules like NOT NULL, UNIQUE, or FOREIGN KEY in SQL tables."}
{"prompt":"How to play soccer?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $regex.","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"What is a clustered index?","completion":"A clustered index determines the physical order of data in a table."}
{"prompt":"How to create a node in Neo4j?","completion":"CREATE (n:Person {name: 'Alice', age: 30});"}
{"prompt":"Explain ACID properties.","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable database transactions."}
{"prompt":"What globale BASE in NoSQL?","completion":"BASE (Basically Available, Soft state, Eventual consistency) prioritizes availability over strict consistency."}
{"prompt":"What's your favorite color?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain materialized views in SQL.","completion":"Materialized views store query results physically and can be refreshed periodically, unlike regular views."}
{"prompt":"Write a SQL query to find duplicate records.","completion":"SELECT column, COUNT(*) FROM table_name GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $push: { arrayField: 'value' } });"}
{"prompt":"What's the theory of relativity?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Redis command to check if a key exists.","completion":"EXISTS mykey"}
{"prompt":"Explain database transactions.","completion":"Transactions ensure a series of database operations are executed as a single, atomic unit."}
{"prompt":"How to grow a garden?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is a wide-column store?","completion":"A wide-column store, like Cassandra, organizes data in flexible column families for scalability."}
{"prompt":"How to use $all in MongoDB?","completion":"db.collection.find({ field: { $all: ['value1', 'value2'] } });"}
{"prompt":"What's the best diet plan?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain database cursors.","completion":"Cursors allow sequential processing of query results in SQL or NoSQL databases."}
{"prompt":"Write a Neo4j query to update a node.","completion":"MATCH (n:Person {name: 'Alice'}) SET n.age = 31;"}
{"prompt":"How to use Redis sets?","completion":"SADD myset 'value1' 'value2'"}
{"prompt":"What's artificial intelligence?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with COALESCE.","completion":"SELECT COALESCE(column1, 'default') FROM table_name;"}
{"prompt":"Explain NoSQL data modeling.","completion":"NoSQL data modeling focuses on query patterns and denormalization for performance."}
{"prompt":"How to paint a house?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $nin.","completion":"db.collection.find({ field: { $nin: ['value1', 'value2'] } });"}
{"prompt":"What is a non-clustered index?","completion":"A non-clustered index stores pointers to data, separate from the table's physical order."}
{"prompt":"How to use Redis sorted sets?","completion":"ZADD mysortedset 1 'value1' 2 'value2'"}
{"prompt":"What's the history of the internet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with NULLIF.","completion":"SELECT NULLIF(column1, 'value') FROM table_name;"}
{"prompt":"Explain database sharding.","completion":"Sharding splits data across multiple servers to improve scalability and performance."}
{"prompt":"Write a Neo4j query to find all nodes of a label.","completion":"MATCH (n:Person) RETURN n;"}
{"prompt":"What is a time-series database?","completion":"A time-series database, like InfluxDB, is optimized for time-stamped data."}
{"prompt":"How to use $inc in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $inc: { counter: 1 } });"}
{"prompt":"What's the best way to study?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with GROUP_CONCAT.","completion":"SELECT department, GROUP_CONCAT(name) FROM employees GROUP BY department;"}
{"prompt":"Explain database locks.","completion":"Database locks prevent concurrent access to data to ensure consistency during transactions."}
{"prompt":"How to use Redis pipelines?","completion":"Use a client library to batch commands, e.g., redis-py: pipe = redis.pipeline(); pipe.set('key', 'value'); pipe.execute()"}
{"prompt":"What's the theory of evolution?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $elemMatch.","completion":"db.collection.find({ arrayField: { $elemMatch: { key: 'value' } } });"}
{"prompt":"What is database migration?","completion":"Database migration involves moving or transforming data between databases or schemas."}
{"prompt":"How to learn to dance?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with LIMIT.","completion":"SELECT * FROM table_name LIMIT 10;"}
{"prompt":"Explain Redis persistence.","completion":"Redis supports RDB snapshots and AOF logs for data durability."}
{"prompt":"What's the best smartphone?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to count relationships.","completion":"MATCH ()-[r:KNOWS]->() RETURN COUNT(r);"}
{"prompt":"What is eventual consistency in MongoDB?","completion":"MongoDB's eventual consistency allows replicas to lag but eventually align with the primary."}
{"prompt":"How to use SQL cursors?","completion":"DECLARE cursor_name CURSOR FOR SELECT * FROM table; OPEN cursor_name; FETCH cursor_name INTO variables; CLOSE cursor_name;"}
{"prompt":"What's the history of jazz?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $size.","completion":"db.collection.find({ arrayField: { $size: 3 } });"}
{"prompt":"Explain database clustering.","completion":"Clustering involves multiple servers working together to provide high availability and scalability."}
{"prompt":"How to learn woodworking?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is Redis Streams?","completion":"Redis Streams is a data structure for managing log-like data with consumer groups."}
{"prompt":"What's the best way to relax?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to find node properties.","completion":"MATCH (n:Person) RETURN n.name, n.age;"}
{"prompt":"Explain NoSQL consistency models.","completion":"NoSQL databases offer various consistency models, like strong, eventual, or causal consistency."}
{"prompt":"How to learn to swim?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with RIGHT JOIN.","completion":"SELECT * FROM table1 RIGHT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What is MongoDB's WiredTiger engine?","completion":"WiredTiger is MongoDB's default storage engine, optimizing for performance and compression."}
{"prompt":"What's the history of democracy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $ne.","completion":"db.collection.find({ field: { $ne: 'value' } });"}
{"prompt":"Explain database backups.","completion":"Database backups create copies of data to prevent loss from failures or corruption."}
{"prompt":"How to learn yoga?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with FULL OUTER JOIN.","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What is a Redis module?","completion":"Redis modules extend Redis functionality with custom data types and commands."}
{"prompt":"What's the best way to learn coding?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to merge nodes.","completion":"MERGE (n:Person {name: 'Alice'}) SET n.age = 30;"}
{"prompt":"Explain MongoDB's replica sets.","completion":"Replica sets in MongoDB provide high availability through primary-secondary replication."}
{"prompt":"How to learn graphic design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with EXISTS.","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table2.id = table1.id);"}
{"prompt":"What is Redis Cluster?","completion":"Redis Cluster is a distributed Redis setup for sharding and high availability."}
{"prompt":"What's the history of space travel?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Writeattan SQL query to find all employees with salary > 50000","completion":"SELECT * FROM employees WHERE salary > 50000;"}
{"prompt":"How to list all users under 18 in a SQL database?","completion":"SELECT * FROM users WHERE age < 18;"}
{"prompt":"Explain the difference between INNER JOIN and OUTER JOIN in SQL.","completion":"INNER JOIN returns only matching rows from both tables, while OUTER JOIN (LEFT, RIGHT, FULL) includes non-matching rows with NULLs for missing data."}
{"prompt":"Write a MongoDB query to find documents where price is less than 100.","completion":"db.collection.find({ price: { $lt: 100 } });"}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key is a column that links to a primary key in another table, enforcing referential integrity."}
{"prompt":"How to set a key-value pair in Redis?","completion":"SET user:100 name 'John'"}
{"prompt":"Write a SQL query to count orders by customer.","completion":"SELECT customer_id, COUNT(*) FROM orders GROUP BY customer_id;"}
{"prompt":"What is the purpose of indexing in MongoDB?","completion":"Indexes in MongoDB improve query performance by allowing faster data retrieval."}
{"prompt":"How to create a table in PostgreSQL?","completion":"CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), salary DECIMAL);"}
{"prompt":"Explain CAP theorem in NoSQL databases.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance at a time."}
{"prompt":"Write a Neo4j query to find all friends of a person.","completion":"MATCH (p:Person {name: 'Alice'})-[:FRIENDS_WITH]->(friend) RETURN friend;"}
{"prompt":"How to update a SQL record?","completion":"UPDATE employees SET salary = 60000 WHERE id = 1;"}
{"prompt":"Query to delete documents in MongoDB where status is 'inactive'.","completion":"db.collection.deleteMany({ status: 'inactive' });"}
{"prompt":"What is normalization in SQL?","completion":"Normalization organizes data into tables to reduce redundancy and ensure consistency."}
{"prompt":"How to add an element to a Redis list?","completion":"LPUSH mylist 'item'"}
{"prompt":"Write a SQL query using a LEFT JOIN.","completion":"SELECT employees.name, departments.name FROM employees LEFT JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"Explain sharding in NoSQL.","completion":"Sharding splits data across multiple servers to improve scalability and performance."}
{"prompt":"What is a SQL view?","completion":"A view is a virtual table based on a query, used for simplified access or security."}
{"prompt":"How to perform aggregation in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$category', total: { $sum: '$amount' } } }]);"}
{"prompt":"Explain ACID properties in databases.","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable database transactions."}
{"prompt":"Query to create a node in Neo4j.","completion":"CREATE (n:Person {name: 'Bob', age: 30});"}
{"prompt":"How to use GROUP BY in SQL?","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"Write a SQL query to drop a table.","completion":"DROP TABLE employees;"}
{"prompt":"How to sort documents in MongoDB?","completion":"db.collection.find().sort({ age: -1 }); // -1 for descending"}
{"prompt":"Explain triggers in SQL.","completion":"Triggers are stored procedures that execute automatically on events like INSERT or UPDATE."}
{"prompt":"Query to expire a key in Redis after 60 seconds.","completion":"SET mykey 'value' EX 60"}
{"prompt":"What is eventual consistency in NoSQL?","completion":"Eventual consistency means data replicas converge over time, prioritizing availability."}
{"prompt":"Write a SQL query using HAVING.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.orders.aggregate([{ $lookup: { from: 'products', localField: 'product_id', foreignField: '_id', as: 'product_details' } }]);"}
{"prompt":"Explain partitioning in SQL databases.","completion":"Partitioning divides large tables into smaller, manageable pieces for performance."}
{"prompt":"Query to update multiple documents in MongoDB.","completion":"db.collection.updateMany({ status: 'pending' }, { $set: { status: 'completed' } });"}
{"prompt":"What is a key-value store?","completion":"A key-value store, like Redis, stores data as simple key-value pairs for fast access."}
{"prompt":"Write a SQL query with UNION.","completion":"SELECT name FROM employees UNION SELECT name FROM contractors;"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data to optimize read performance in NoSQL databases."}
{"prompt":"Query to alter a SQL table.","completion":"ALTER TABLE employees ADD email VARCHAR(100);"}
{"prompt":"How to limit results in MongoDB?","completion":"db.collection.find().limit(5);"}
{"prompt":"What is a graph database?","completion":"A graph database, like Neo4j, stores data as nodes and relationships for connected data."}
{"prompt":"Write a SQL query with a CTE.","completion":"WITH high_earners AS (SELECT * FROM employees WHERE salary > 70000) SELECT * FROM high_earners;"}
{"prompt":"How to push an element to a Redis list?","completion":"RPUSH mylist 'new_item'"}
{"prompt":"Explain stored procedures in SQL.","completion":"Stored procedures are reusable SQL scripts stored in the database for complex operations."}
{"prompt":"Query to create a relationship in Neo4j.","completion":"MATCH (a:Person {name: 'Alice'}), (b:Person {name: 'Bob'}) CREATE (a)-[:FRIENDS_WITH]->(b);"}
{"prompt":"How to handle transactions in SQL?","completion":"BEGIN TRANSACTION; UPDATE accounts SET balance = balance - 100 WHERE id = 1; COMMIT;"}
{"prompt":"What is replication in databases?","completion":"Replication copies data across servers for redundancy and high availability."}
{"prompt":"Write a MongoDB query to find distinct values.","completion":"db.collection.distinct('field');"}
{"prompt":"Explain window functions in SQL.","completion":"Window functions like RANK() compute values over a set of rows without grouping."}
{"prompt":"Query to unwind an array in MongoDB.","completion":"db.collection.aggregate([{ $unwind: '$array_field' }]);"}
{"prompt":"How to batch insert in SQL?","completion":"INSERT INTO users (name, age) VALUES ('Alice', 25), ('Bob', 30);"}
{"prompt":"What is multi-tenancy in databases?","completion":"Multi-tenancy isolates data for multiple users within a shared database."}
{"prompt":"Write a SQL query for full-text search in PostgreSQL.","completion":"SELECT * FROM documents WHERE to_tsvector(content) @@ to_tsquery('keyword');"}
{"prompt":"How to rename a collection in MongoDB?","completion":"db.collection.renameCollection('new_name');"}
{"prompt":"Explain caching with Redis.","completion":"Redis stores frequently accessed data in memory for faster retrieval."}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT employee_id, month, sales FROM sales_data) PIVOT (SUM(sales) FOR month IN ('Jan', 'Feb'));"}
{"prompt":"How do I learn Python programming?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Recommend a good book to read.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the capital of Japan?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me a funny joke.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to cook spaghetti?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain blockchain technology.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to fix a bicycle tire?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is quantum physics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Suggest a travel destination.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's your favorite movie?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain machine learning basics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to grow tomatoes?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the population of Brazil?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Discuss ancient Egyptian history.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to invest in cryptocurrency?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to write a cover letter?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Query the best pizza place nearby.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain neural networks.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to bake cookies?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the GDP of Canada?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Discuss the theory of relativity.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to repair a laptop?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the history of jazz music?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to meditate daily?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain cloud computing.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to knit a scarf?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is artificial intelligence?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a wedding?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain the stock market.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the tallest mountain?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn guitar chords?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Discuss climate change effects.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is game theory?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make sushi?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain black holes.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a blog?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the solar system?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do yoga?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain cryptocurrency mining.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best camera for photography?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn French?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is string theory?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to build a birdhouse?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the culture of India like?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to create a budget?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain quantum entanglement.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to paint a room?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of soccer?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to write a novel?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is dark matter?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to care for houseplants?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain the theory of evolution.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make a podcast?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the population of India?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to fix a leaky pipe?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the Renaissance period?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain general relativity.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a small business?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to sew a dress?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the history of Rome?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make ice cream?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain particle physics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn to code in Java?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best hiking trail?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to practice mindfulness?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the history of aviation?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain the Big Bang theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Spanish?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to restore furniture?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the history of Greece?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make pottery?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain chaos theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best coffee shop?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do public speaking?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the history of China?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make candles?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain the greenhouse effect.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best laptop brand?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to improve memory?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the history of Egypt?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make soap?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain dark energy.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn web development?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best beach destination?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to practice gratitude?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the history of Japan?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make jewelry?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain plate tectonics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn data science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best ski resort?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to improve focus?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the history of India?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make a quilt?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain the theory of gravity.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How do I select distinct names from a table in SQL?","completion":"SELECT DISTINCT name FROM table_name;"}
{"prompt":"Write a MongoDB query to find users with age < 30","completion":"db.users.find({ age: { $lt: 30 } });"}
{"prompt":"Explain the difference between SQL and NoSQL databases","completion":"SQL databases are relational with structured schemas (e.g., MySQL), while NoSQL databases are non-relational, flexible, and scale horizontally (e.g., MongoDB)."}
{"prompt":"How to create a table in SQL?","completion":"CREATE TABLE table_name (id INT PRIMARY KEY, name VARCHAR(50), age INT);"}
{"prompt":"Write a Redis command to set a key-value pair","completion":"SET user:1 \"John Doe\""}
{"prompt":"Query to update a document in MongoDB","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $set: { name: \"New Name\" } });"}
{"prompt":"Explain primary key in SQL","completion":"A primary key uniquely identifies each record in a table and cannot be null."}
{"prompt":"How to delete a record in SQL?","completion":"DELETE FROM table_name WHERE id = 1;"}
{"prompt":"Write a Neo4j query to create a node","completion":"CREATE (n:Person {name: \"Alice\", age: 25});"}
{"prompt":"What is a good movie to watch?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to perform aggregation in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: \"$category\", total: { $sum: \"$price\" } } }]);"}
{"prompt":"Write a SQL query using GROUP BY","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"Explain sharding in NoSQL databases","completion":"Sharding splits a database across multiple servers to improve scalability and performance."}
{"prompt":"How to create an index in MySQL?","completion":"CREATE INDEX idx_name ON table_name (column_name);"}
{"prompt":"Query to find documents in MongoDB with a specific field","completion":"db.collection.find({ status: \"active\" });"}
{"prompt":"How to use ORDER BY in SQL?","completion":"SELECT * FROM table_name ORDER BY column_name ASC;"}
{"prompt":"Explain CAP theorem for NoSQL","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance."}
{"prompt":"Write a Redis command to get a value","completion":"GET mykey"}
{"prompt":"How to cook a steak?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with a LEFT JOIN","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Query to expire a key in Redis","completion":"SET mykey \"value\" EX 3600"}
{"prompt":"How does blockchain work?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find the top 5 salaries","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"}
{"prompt":"Explain graph databases","completion":"Graph databases store data as nodes and relationships, ideal for connected data like social networks."}
{"prompt":"Query to delete a collection in MongoDB","completion":"db.collection.drop();"}
{"prompt":"How to use LIKE in SQL?","completion":"SELECT * FROM table_name WHERE column LIKE '%value%';"}
{"prompt":"What is a good workout routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to find relationships","completion":"MATCH (a:Person)-[:KNOWS]->(b:Person) RETURN a, b;"}
{"prompt":"How to handle transactions in SQL?","completion":"BEGIN TRANSACTION; INSERT INTO table_name VALUES (1, 'data'); COMMIT;"}
{"prompt":"Explain eventual consistency in NoSQL","completion":"Eventual consistency means data across replicas will align over time, prioritizing availability."}
{"prompt":"Write a SQL query with a subquery","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"}
{"prompt":"How to push to a list in Redis?","completion":"LPUSH mylist \"item\""}
{"prompt":"Query to sort documents in MongoDB","completion":"db.collection.find().sort({ age: 1 });"}
{"prompt":"Explain foreign keys in SQL","completion":"Foreign keys link a column to a primary key in another table to enforce referential integrity."}
{"prompt":"Write a MongoDB query with $lookup","completion":"db.orders.aggregate([{ $lookup: { from: \"inventory\", localField: \"item\", foreignField: \"sku\", as: \"inventory_docs\" } }]);"}
{"prompt":"Write a SQL query with HAVING","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"What is a document store in NoSQL?","completion":"A document store like MongoDB stores data as JSON-like documents with flexible schemas."}
{"prompt":"Query to increment a value in Redis","completion":"INCR mycounter"}
{"prompt":"Explain indexing in databases","completion":"Indexes improve query performance by allowing faster data retrieval, like a book's index."}
{"prompt":"Write a SQL query to find duplicates","completion":"SELECT column, COUNT(*) FROM table_name GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"Query to unwind an array in MongoDB","completion":"db.collection.aggregate([{ $unwind: \"$arrayField\" }]);"}
{"prompt":"What is ACID in databases?","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions."}
{"prompt":"How to create a view in SQL?","completion":"CREATE VIEW view_name AS SELECT column FROM table_name WHERE condition;"}
{"prompt":"What's the population of Japan?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to delete a node","completion":"MATCH (n:Person {name: \"Alice\"}) DELETE n;"}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, and analyze with EXPLAIN to improve performance."}
{"prompt":"Explain column-family stores in NoSQL","completion":"Column-family stores like Cassandra organize data in column families for high scalability."}
{"prompt":"Query to rename a table in SQL","completion":"ALTER TABLE old_name RENAME TO new_name;"}
{"prompt":"How to fix a computer?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find null values","completion":"db.collection.find({ field: null });"}
{"prompt":"What are triggers in SQL?","completion":"Triggers are procedures that execute automatically on events like INSERT or UPDATE."}
{"prompt":"Query to get a range in Redis","completion":"LRANGE mylist 0 -1"}
{"prompt":"Explain denormalization in NoSQL","completion":"Denormalization duplicates data to improve read performance in NoSQL databases."}
{"prompt":"What's a good recipe for pizza?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with UNION","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"Query to project specific fields in MongoDB","completion":"db.collection.find({}, { field1: 1, _id: 0 });"}
{"prompt":"How to batch insert in SQL?","completion":"INSERT INTO table_name VALUES (1, 'data1'), (2, 'data2');"}
{"prompt":"Tell me about AI advancements","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to create a relationship","completion":"MATCH (a:Person), (b:Person) CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"Explain stored procedures in SQL","completion":"Stored procedures are precompiled SQL code stored for reuse and security."}
{"prompt":"Query to check if a key exists in Redis","completion":"EXISTS mykey"}
{"prompt":"How to use full-text search in PostgreSQL?","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('search term');"}
{"prompt":"Write a SQL query with a CTE","completion":"WITH cte AS (SELECT * FROM table_name) SELECT * FROM cte;"}
{"prompt":"Query to limit results in MongoDB","completion":"db.collection.find().limit(5);"}
{"prompt":"Explain multi-tenancy in databases","completion":"Multi-tenancy isolates data for multiple users within a single database instance."}
{"prompt":"How to get a hash field in Redis?","completion":"HGET myhash field1"}
{"prompt":"Write a SQL query to pivot data","completion":"SELECT * FROM (SELECT column FROM table) PIVOT (COUNT(*) FOR column IN ('val1', 'val2'));"}
{"prompt":"Query to delete multiple documents in MongoDB","completion":"db.collection.deleteMany({ status: \"inactive\" });"}
{"prompt":"What is partitioning in SQL?","completion":"Partitioning divides large tables into smaller, manageable pieces for performance."}
{"prompt":"How to set a hash in Redis?","completion":"HMSET myhash field1 \"value1\" field2 \"value2\""}
{"prompt":"Write a SQL query to find null values","completion":"SELECT * FROM table_name WHERE column IS NULL;"}
{"prompt":"Explain BASE in NoSQL","completion":"BASE (Basically Available, Soft state, Eventual consistency) prioritizes availability over strict consistency."}
{"prompt":"Query to find distinct values in MongoDB","completion":"db.collection.distinct(\"field\");"}
{"prompt":"How to alter a table in SQL?","completion":"ALTER TABLE table_name ADD new_column VARCHAR(50);"}
{"prompt":"Write a Neo4j query to find shortest path","completion":"MATCH (start:Person {name: \"Alice\"}), (end:Person {name: \"Bob\"}), p = shortestPath((start)-[*]-(end)) RETURN p;"}
{"prompt":"How to handle errors in SQL transactions?","completion":"BEGIN TRY BEGIN TRANSACTION; ... COMMIT; END TRY BEGIN CATCH ROLLBACK; END CATCH;"}
{"prompt":"Query to rename a collection in MongoDB","completion":"db.collection.renameCollection(\"newName\");"}
{"prompt":"Explain caching with Redis","completion":"Redis caches data in memory for fast access, reducing database load."}
{"prompt":"Write a SQL query with window functions","completion":"SELECT name, salary, ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary) FROM employees;"}
{"prompt":"Query to match patterns in MongoDB","completion":"db.collection.find({ name: { $regex: \"^A\", $options: \"i\" } });"}
{"prompt":"What are views in SQL?","completion":"Views are virtual tables created from a query for simplified access or security."}
{"prompt":"How to pop an item from a Redis list?","completion":"LPOP mylist"}
{"prompt":"Explain joins in NoSQL","completion":"NoSQL often avoids joins, using denormalization or $lookup in MongoDB for similar functionality."}
{"prompt":"Query to group and count in MongoDB","completion":"db.collection.aggregate([{ $group: { _id: \"$field\", count: { $sum: 1 } } }]);"}
{"prompt":"What is a key-value store?","completion":"A key-value store like Redis stores data as simple key-value pairs for fast retrieval."}
{"prompt":"How to use IN in SQL?","completion":"SELECT * FROM table_name WHERE column IN ('value1', 'value2');"}
{"prompt":"Write a Neo4j query to update a node","completion":"MATCH (n:Person {name: \"Alice\"}) SET n.age = 30;"}
{"prompt":"Explain query optimization in SQL","completion":"Query optimization uses indexes, query rewriting, and EXPLAIN to improve performance."}
{"prompt":"Query to sample documents in MongoDB","completion":"db.collection.aggregate([{ $sample: { size: 5 } }]);"}
{"prompt":"What are constraints in SQL?","completion":"Constraints like PRIMARY KEY, FOREIGN KEY, NOT NULL enforce data integrity."}
{"prompt":"How to get all keys in Redis?","completion":"KEYS *"}
{"prompt":"Write a SQL query with EXISTS","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE column = table1.column);"}
{"prompt":"Query to find by ID in MongoDB","completion":"db.collection.findOne({ _id: ObjectId(\"123\") });"}
{"prompt":"Explain schema-less design in NoSQL","completion":"Schema-less design allows flexible document structures without predefined schemas."}
{"prompt":"How to truncate a table in SQL?","completion":"TRUNCATE TABLE table_name;"}
{"prompt":"Write a Neo4j query to delete a relationship","completion":"MATCH (a)-[r:KNOWS]->(b) DELETE r;"}
{"prompt":"Query to insert multiple documents in MongoDB","completion":"db.collection.insertMany([{ name: \"A\" }, { name: \"B\" }]);"}
{"prompt":"What is a transaction log in SQL?","completion":"A transaction log records all changes for recovery and consistency in SQL databases."}
{"prompt":"How to use TTL in Redis?","completion":"SET mykey \"value\" EX 3600"}
{"prompt":"Explain neural networks","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with CASE","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"Query to find max value in MongoDB","completion":"db.collection.find().sort({ value: -1 }).limit(1);"}
{"prompt":"What is a clustered index in SQL?","completion":"A clustered index determines the physical order of data in a table."}
{"prompt":"How to get hash fields in Redis?","completion":"HGETALL myhash"}
{"prompt":"Write a SQL query to find average salary","completion":"SELECT AVG(salary) FROM employees;"}
{"prompt":"Query to update nested fields in MongoDB","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $set: { \"nested.field\": \"value\" } });"}
{"prompt":"Explain data warehousing","completion":"Data warehousing stores large amounts of historical data for analytics, often using SQL databases."}
{"prompt":"How to create a set in Redis?","completion":"SADD myset \"value1\" \"value2\""}
{"prompt":"Write a SQL query with BETWEEN","completion":"SELECT * FROM employees WHERE salary BETWEEN 40000 AND 60000;"}
{"prompt":"Query to match arrays in MongoDB","completion":"db.collection.find({ tags: { $all: [\"tag1\", \"tag2\"] } });"}
{"prompt":"What is a non-relational database?","completion":"A non-relational (NoSQL) database stores data flexibly, without fixed schemas, like MongoDB or Redis."}
{"prompt":"How to check index usage in SQL?","completion":"Use EXPLAIN PLAN FOR SELECT * FROM table_name WHERE column = 'value';"}
{"prompt":"Write a Neo4j query to find all nodes of a type","completion":"MATCH (n:Person) RETURN n;"}
{"prompt":"Query to replace a document in MongoDB","completion":"db.collection.replaceOne({ _id: ObjectId(\"123\") }, { name: \"New Name\" });"}
{"prompt":"Explain materialized views in SQL","completion":"Materialized views store query results physically, refreshing periodically for faster access."}
{"prompt":"How to use sorted sets in Redis?","completion":"ZADD myset 1 \"member1\" 2 \"member2\""}
{"prompt":"What's the best programming language?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find nth highest salary","completion":"SELECT salary FROM employees ORDER BY salary DESC LIMIT 1 OFFSET n-1;"}
{"prompt":"Query to group by multiple fields in MongoDB","completion":"db.collection.aggregate([{ $group: { _id: { field1: \"$field1\", field2: \"$field2\" }, count: { $sum: 1 } } }]);"}
{"prompt":"What is a composite key in SQL?","completion":"A composite key uses multiple columns to uniquely identify records in a table."}
{"prompt":"How to scan keys in Redis?","completion":"SCAN 0 MATCH pattern*"}
{"prompt":"Write a SQL query with COALESCE","completion":"SELECT COALESCE(column, 'default') FROM table_name;"}
{"prompt":"Query to find by date in MongoDB","completion":"db.collection.find({ date: { $gte: ISODate(\"2023-01-01\") } });"}
{"prompt":"Explain database locking","completion":"Locking prevents concurrent access to ensure data consistency during transactions."}
{"prompt":"How to use pipelines in Redis?","completion":"Use MULTI; command1; command2; EXEC; for atomic operations."}
{"prompt":"What's the latest space mission?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find unique values","completion":"SELECT DISTINCT column FROM table_name;"}
{"prompt":"Query to add a field in MongoDB","completion":"db.collection.updateMany({}, { $set: { newField: \"value\" } });"}
{"prompt":"What is a database cursor?","completion":"A cursor allows iterative processing of query results in databases."}
{"prompt":"How to get set members in Redis?","completion":"SMEMBERS myset"}
{"prompt":"Write a SQL query with ROLLUP","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department WITH ROLLUP;"}
{"prompt":"Query to filter by existence in MongoDB","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"What is a database schema?","completion":"A schema defines the structure of a database, including tables, columns, and relationships."}
{"prompt":"How to use transactions in Redis?","completion":"MULTI; SET key1 \"value1\"; SET key2 \"value2\"; EXEC;"}
{"prompt":"Write a SQL query to find max salary per department","completion":"SELECT department, MAX(salary) FROM employees GROUP BY department;"}
{"prompt":"Query to find by regex in MongoDB","completion":"db.collection.find({ name: { $regex: \"^A\", $options: \"i\" } });"}
{"prompt":"Explain database scalability","completion":"Scalability allows databases to handle increased load via sharding, replication, or clustering."}
{"prompt":"How to check key type in Redis?","completion":"TYPE mykey"}
{"prompt":"Write a SQL query with INTERSECT","completion":"SELECT column FROM table1 INTERSECT SELECT column FROM table2;"}
{"prompt":"Query to sort and skip in MongoDB","completion":"db.collection.find().sort({ age: -1 }).skip(10);"}
{"prompt":"What is a database index?","completion":"An index is a structure that speeds up data retrieval in databases."}
{"prompt":"How to use pub/sub in Redis?","completion":"SUBSCRIBE channel; PUBLISH channel \"message\";"}
{"prompt":"Tell me about quantum physics","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to select distinct names from a customers table in SQL?","completion":"SELECT DISTINCT name FROM customers;"}
{"prompt":"Explain the difference between SQL and NoSQL databases.","completion":"SQL databases are relational, use structured schemas, and support SQL queries, while NoSQL databases are non-relational, schema-less, and handle unstructured data like JSON or graphs."}
{"prompt":"How to create a table in SQL for storing products?","completion":"CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(100), price DECIMAL(10,2));"}
{"prompt":"Write a Redis command to set a key with value 'hello'.","completion":"SET mykey \"hello\""}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key is a column that creates a link between two tables, referencing the primary key of another table to enforce referential integrity."}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { field: 'newValue' } });"}
{"prompt":"Write a SQL query to join two tables, orders and customers.","completion":"SELECT * FROM orders INNER JOIN customers ON orders.customer_id = customers.id;"}
{"prompt":"What is sharding in NoSQL databases?","completion":"Sharding is distributing data across multiple servers to improve scalability and performance in NoSQL databases like MongoDB."}
{"prompt":"Explain indexes in databases.","completion":"Indexes are data structures that improve query performance by allowing faster data retrieval, like an index in a book."}
{"prompt":"What is eventual consistency in NoSQL?","completion":"Eventual consistency means that in distributed NoSQL systems, data replicas may temporarily differ but will eventually align."}
{"prompt":"How to insert multiple rows in SQL?","completion":"INSERT INTO table_name (col1, col2) VALUES (val1, val2), (val3, val4);"}
{"prompt":"Recommend a movie to watch.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to sort documents by price descending.","completion":"db.collection.find().sort({ price: -1 });"}
{"prompt":"How to create an index in PostgreSQL?","completion":"CREATE INDEX idx_name ON table_name (column_name);"}
{"prompt":"What is a document store in NoSQL?","completion":"A document store, like MongoDB, stores data as flexible JSON-like documents without a fixed schema."}
{"prompt":"Write a SQL query using a subquery.","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"}
{"prompt":"How to expire a key in Redis after 60 seconds?","completion":"SET mykey \"value\" EX 60"}
{"prompt":"Explain normalization in SQL databases.","completion":"Normalization organizes tables to reduce redundancy and ensure data integrity, using forms like 1NF, 2NF, 3NF."}
{"prompt":"Write a SQL query with a LEFT JOIN.","completion":"SELECT * FROM customers LEFT JOIN orders ON customers.id = orders.customer_id;"}
{"prompt":"What is a primary key constraint in SQL?","completion":"A primary key constraint ensures a column has unique, non-null values to identify each record."}
{"prompt":"Write a Neo4j query to create a relationship.","completion":"MATCH (a:Person), (b:Person) WHERE a.name = 'Alice' AND b.name = 'Bob' CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"How to use LIKE in SQL for pattern matching?","completion":"SELECT * FROM table_name WHERE column LIKE '%pattern%';"}
{"prompt":"What's the best way to learn guitar?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain ACID properties in databases.","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions in databases."}
{"prompt":"Write a MongoDB aggregation query to group by category.","completion":"db.collection.aggregate([{ $group: { _id: '$category', total: { $sum: 1 } } }]);"}
{"prompt":"What is a key-value store in NoSQL?","completion":"A key-value store, like Redis, stores data as simple key-value pairs for fast retrieval."}
{"prompt":"How to limit query results in MongoDB?","completion":"db.collection.find().limit(10);"}
{"prompt":"How to push an element to a Redis list?","completion":"LPUSH mylist \"value\""}
{"prompt":"Explain triggers in SQL databases.","completion":"Triggers are stored procedures that automatically execute in response to events like INSERT or UPDATE."}
{"prompt":"What is CAP theorem in NoSQL?","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition tolerance."}
{"prompt":"Write a SQL query to find the second highest salary.","completion":"SELECT MAX(salary) FROM employees WHERE salary < (SELECT MAX(salary) FROM employees);"}
{"prompt":"How to use $lookup in MongoDB for joins?","completion":"db.orders.aggregate([{ $lookup: { from: 'inventory', localField: 'item', foreignField: 'sku', as: 'inventory_docs' } }]);"}
{"prompt":"Explain partitioning in SQL databases.","completion":"Partitioning divides large tables into smaller, manageable pieces to improve performance and maintenance."}
{"prompt":"Write a Redis command to get a hash value.","completion":"HGET myhash field1"}
{"prompt":"What is denormalization in NoSQL?","completion":"Denormalization duplicates data to improve read performance, common in NoSQL databases."}
{"prompt":"Write a SQL query with UNION.","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"How to handle transactions in SQL?","completion":"BEGIN TRANSACTION; -- SQL statements -- COMMIT; -- or ROLLBACK;"}
{"prompt":"Explain graph databases like Neo4j.","completion":"Graph databases store data as nodes and relationships, ideal for connected data like social networks."}
{"prompt":"Write a SQL query with a CTE.","completion":"WITH cte AS (SELECT * FROM table) SELECT * FROM cte;"}
{"prompt":"Write a Neo4j query to delete a node.","completion":"MATCH (n:Node {id: 1}) DELETE n;"}
{"prompt":"How to optimize a slow SQL query?","completion":"Add indexes, avoid SELECT *, use EXPLAIN to analyze, and limit rows with WHERE."}
{"prompt":"What's your favorite book?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to update multiple documents.","completion":"db.collection.updateMany({ status: 'old' }, { $set: { status: 'new' } });"}
{"prompt":"How to create a stored procedure in SQL?","completion":"CREATE PROCEDURE proc_name AS BEGIN -- SQL statements -- END;"}
{"prompt":"What is a column-family store in NoSQL?","completion":"A column-family store, like Cassandra, organizes data into columns grouped by families for wide rows."}
{"prompt":"Write a SQL query for full-text search in PostgreSQL.","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('search term');"}
{"prompt":"Explain multi-tenancy in databases.","completion":"Multi-tenancy isolates data for multiple users/tenants sharing the same database instance."}
{"prompt":"Write a SQL query to find duplicate records.","completion":"SELECT column, COUNT(*) FROM table GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"How to increment a value in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $inc: { count: 1 } });"}
{"prompt":"What is a composite key in SQL?","completion":"A composite key is a primary key made of multiple columns to ensure uniqueness."}
{"prompt":"Write a Redis command to add to a set.","completion":"SADD myset \"value\""}
{"prompt":"How to perform a case-insensitive search in MongoDB?","completion":"db.collection.find({ field: { $regex: '^value$', $options: 'i' } });"}
{"prompt":"Explain window functions in SQL.","completion":"Window functions like ROW_NUMBER() perform calculations across a set of rows related to the current row."}
{"prompt":"How to create a travel itinerary?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT ...) PIVOT (SUM(col) FOR col IN ('val1', 'val2'));"}
{"prompt":"How to check if a key exists in Redis?","completion":"EXISTS mykey"}
{"prompt":"What is BASE in NoSQL?","completion":"BASE (Basically Available, Soft state, Eventual consistency) is an alternative to ACID for distributed systems."}
{"prompt":"Write a MongoDB query to find documents by date range.","completion":"db.collection.find({ date: { $gte: ISODate('2023-01-01'), $lte: ISODate('2023-12-31') } });"}
{"prompt":"How to alter a table in SQL to add a column?","completion":"ALTER TABLE table_name ADD column_name datatype;"}
{"prompt":"Write a Neo4j query to find shortest path.","completion":"MATCH (start:Node {id: 'A'}), (end:Node {id: 'B'}), p = shortestPath((start)-[*]-(end)) RETURN p;"}
{"prompt":"How to use transactions in MongoDB?","completion":"db.getMongo().startSession().withTransaction(() => { /* operations */ });"}
{"prompt":"Explain clustering in databases.","completion":"Clustering groups related data on disk to improve query performance, often used in column-family stores."}
{"prompt":"Write a SQL query to find null values.","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"How to get a list length in Redis?","completion":"LLEN mylist"}
{"prompt":"What is schema-less design in NoSQL?","completion":"Schema-less design allows NoSQL databases to store data without a fixed structure, like MongoDB documents."}
{"prompt":"How to project specific fields in MongoDB?","completion":"db.collection.find({}, { field1: 1, field2: 0 });"}
{"prompt":"What are stored procedures in SQL?","completion":"Stored procedures are precompiled SQL code stored in the database for reuse and security."}
{"prompt":"Write a Redis command to get all set members.","completion":"SMEMBERS myset"}
{"prompt":"Write a SQL query for a self-join.","completion":"SELECT a.name, b.name FROM employees a JOIN employees b ON a.manager_id = b.id;"}
{"prompt":"How to drop a MongoDB database?","completion":"db.dropDatabase();"}
{"prompt":"What is a view materialization in SQL?","completion":"Materialized views store query results physically, unlike regular views, for faster access."}
{"prompt":"Write a Neo4j query to update a node property.","completion":"MATCH (n:Node {id: 1}) SET n.property = 'newValue';"}
{"prompt":"How to handle errors in SQL transactions?","completion":"Use TRY...CATCH in some SQL dialects or check @@ERROR to manage transaction errors."}
{"prompt":"How to create a unique index in SQL?","completion":"CREATE UNIQUE INDEX idx_name ON table_name (column);"}
{"prompt":"What is a graph traversal in Neo4j?","completion":"Graph traversal follows relationships between nodes to query connected data, like MATCH (a)-[:REL]->(b)."}
{"prompt":"Write a SQL query to find top 5 records.","completion":"SELECT TOP 5 * FROM table ORDER BY column;"}
{"prompt":"Explain joins in NoSQL databases.","completion":"NoSQL often uses denormalization, but MongoDB supports joins via $lookup for related data."}
{"prompt":"Write a SQL query to calculate average salary.","completion":"SELECT AVG(salary) FROM employees;"}
{"prompt":"How to use $in operator in MongoDB?","completion":"db.collection.find({ field: { $in: ['value1', 'value2'] } });"}
{"prompt":"What is a transaction log in SQL?","completion":"A transaction log records all database changes to ensure recovery and consistency."}
{"prompt":"Write a Redis command to increment a hash field.","completion":"HINCRBY myhash field 1"}
{"prompt":"How to enforce referential integrity in SQL?","completion":"Use FOREIGN KEY constraints to link tables and maintain data consistency."}
{"prompt":"Write a SQL query with EXISTS.","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE condition);"}
{"prompt":"How to add an index in MongoDB?","completion":"db.collection.createIndex({ field: 1 });"}
{"prompt":"What is a clustered index in SQL?","completion":"A clustered index determines the physical order of data in a table, typically on the primary key."}
{"prompt":"Write a Neo4j query to find all nodes of a type.","completion":"MATCH (n:Person) RETURN n;"}
{"prompt":"How to use GROUP_CONCAT in MySQL?","completion":"SELECT department, GROUP_CONCAT(name) FROM employees GROUP BY department;"}
{"prompt":"Explain data modeling in NoSQL.","completion":"NoSQL data modeling designs flexible schemas, often denormalized, to optimize for specific queries."}
{"prompt":"Write a SQL query with BETWEEN.","completion":"SELECT * FROM table WHERE column BETWEEN 10 AND 20;"}
{"prompt":"What is a deadlock in SQL databases?","completion":"A deadlock occurs when two transactions block each other, waiting for resources the other holds."}
{"prompt":"Write a Redis command to get a range of list elements.","completion":"LRANGE mylist 0 -1"}
{"prompt":"How to create a trigger in SQL?","completion":"CREATE TRIGGER trig_name AFTER INSERT ON table FOR EACH ROW BEGIN -- action -- END;"}
{"prompt":"What's the history of ancient Egypt?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records from last 7 days.","completion":"SELECT * FROM table WHERE date >= DATEADD(day, -7, GETDATE());"}
{"prompt":"How to use $elemMatch in MongoDB?","completion":"db.collection.find({ arrayField: { $elemMatch: { key: 'value' } } });"}
{"prompt":"What is a non-clustered index in SQL?","completion":"A non-clustered index stores pointers to data, allowing multiple indexes without reordering the table."}
{"prompt":"Write a Neo4j query to count relationships.","completion":"MATCH ()-[r:REL]->() RETURN COUNT(r);"}
{"prompt":"How to use COALESCE in SQL?","completion":"SELECT COALESCE(column, 'default') FROM table;"}
{"prompt":"Explain horizontal scaling in NoSQL.","completion":"Horizontal scaling adds more servers to handle load, common in NoSQL for distributed systems."}
{"prompt":"Write a SQL query to find records with max value.","completion":"SELECT * FROM table WHERE column = (SELECT MAX(column) FROM table);"}
{"prompt":"What is a check constraint in SQL?","completion":"A check constraint enforces a condition on column values, like age > 18."}
{"prompt":"Write a Redis command to get hash fields.","completion":"HKEYS myhash"}
{"prompt":"How to perform a regex search in MongoDB?","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"Explain MVCC in databases.","completion":"MVCC (Multi-Version Concurrency Control) manages concurrent access by keeping multiple data versions."}
{"prompt":"What's the best smartphone to buy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with CASE statement.","completion":"SELECT name, CASE WHEN age > 18 THEN 'Adult' ELSE 'Minor' END AS status FROM table;"}
{"prompt":"How to drop an index in MongoDB?","completion":"db.collection.dropIndex('index_name');"}
{"prompt":"What is a database cursor in SQL?","completion":"A cursor allows row-by-row processing of query results in SQL programs."}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH ()-[r:REL]->() WHERE r.id = 1 DELETE r;"}
{"prompt":"How to use LIMIT in SQL?","completion":"SELECT * FROM table LIMIT 10;"}
{"prompt":"Explain eventual consistency in Redis.","completion":"Redis, being single-threaded, is consistent, but in clusters, eventual consistency may apply across nodes."}
{"prompt":"Write a SQL query to find records by year.","completion":"SELECT * FROM table WHERE YEAR(date) = 2023;"}
{"prompt":"How to use $all in MongoDB?","completion":"db.collection.find({ arrayField: { $all: ['value1', 'value2'] } });"}
{"prompt":"Write a Redis command to get a set intersection.","completion":"SINTER set1 set2"}
{"prompt":"How to use ROLLUP in SQL?","completion":"SELECT department, SUM(salary) FROM employees GROUP BY ROLLUP(department);"}
{"prompt":"Explain write-ahead logging in databases.","completion":"Write-ahead logging records changes to a log before applying them to ensure crash recovery."}
{"prompt":"Write a SQL query to find records with specific values.","completion":"SELECT * FROM table WHERE column IN ('value1', 'value2');"}
{"prompt":"How to use $slice in MongoDB?","completion":"db.collection.find({}, { arrayField: { $slice: [0, 5] } });"}
{"prompt":"What is a covering index in SQL?","completion":"A covering index includes all columns needed for a query, avoiding table access."}
{"prompt":"Write a Neo4j query to find nodes with specific property.","completion":"MATCH (n:Node {property: 'value'}) RETURN n;"}
{"prompt":"How to use NULLIF in SQL?","completion":"SELECT NULLIF(column, 'value') FROM table;"}
{"prompt":"Explain data sharding in MongoDB.","completion":"MongoDB sharding distributes data across shards based on a shard key for scalability."}
{"prompt":"What's the best way to learn French?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with min value.","completion":"SELECT * FROM table WHERE column = (SELECT MIN(column) FROM table);"}
{"prompt":"How to use $nin in MongoDB?","completion":"db.collection.find({ field: { $nin: ['value1', 'value2'] } });"}
{"prompt":"What is a database transaction?","completion":"A transaction is a sequence of operations performed as a single unit, ensuring ACID properties."}
{"prompt":"Write a Redis command to remove from a set.","completion":"SREM myset \"value\""}
{"prompt":"How to use RANK() in SQL?","completion":"SELECT column, RANK() OVER (ORDER BY column) FROM table;"}
{"prompt":"Explain query optimization in databases.","completion":"Query optimization involves choosing the most efficient execution plan for a query, using indexes and stats."}
{"prompt":"How to start a business?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records not in another table.","completion":"SELECT * FROM table1 WHERE id NOT IN (SELECT id FROM table2);"}
{"prompt":"How to use $or in MongoDB?","completion":"db.collection.find({ $or: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"What is a database index scan?","completion":"An index scan reads an index to retrieve rows, faster than a full table scan."}
{"prompt":"Write a Neo4j query to find all relationships of a node.","completion":"MATCH (n:Node {id: 1})-[r]->() RETURN r;"}
{"prompt":"How to use CONCAT in SQL?","completion":"SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM table;"}
{"prompt":"Explain read replicas in databases.","completion":"Read replicas are copies of a primary database used to offload read queries for scalability."}
{"prompt":"Write a SQL query to update multiple columns.","completion":"UPDATE table SET column1 = 'value1', column2 = 'value2' WHERE condition;"}
{"prompt":"How to use $setOnInsert in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $setOnInsert: { field: 'value' } }, { upsert: true });"}
{"prompt":"What is a database lock?","completion":"A database lock prevents concurrent modifications to ensure data consistency during transactions."}
{"prompt":"Write a Redis command to get a set union.","completion":"SUNION set1 set2"}
{"prompt":"How to use DENSE_RANK() in SQL?","completion":"SELECT column, DENSE_RANK() OVER (ORDER BY column) FROM table;"}
{"prompt":"Explain data consistency in NoSQL.","completion":"NoSQL databases may prioritize availability over immediate consistency, using models like eventual consistency."}
{"prompt":"Write a SQL query to find records with specific date.","completion":"SELECT * FROM table WHERE DATE(date_column) = '2023-01-01';"}
{"prompt":"How to use $size in MongoDB?","completion":"db.collection.find({ arrayField: { $size: 3 } });"}
{"prompt":"What is a database checkpoint?","completion":"A checkpoint saves the database state to disk, ensuring recovery from crashes."}
{"prompt":"Write a Neo4j query to find nodes by label.","completion":"MATCH (n:Label) RETURN n;"}
{"prompt":"How to use CAST in SQL?","completion":"SELECT CAST(column AS INT) FROM table;"}
{"prompt":"Explain load balancing in databases.","completion":"Load balancing distributes queries across multiple database servers to improve performance."}
{"prompt":"What's the best hiking trail nearby?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to delete duplicate records.","completion":"DELETE FROM table WHERE id NOT IN (SELECT MIN(id) FROM table GROUP BY column);"}
{"prompt":"How to use $pull in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $pull: { arrayField: 'value' } });"}
{"prompt":"What is a database sequence?","completion":"A sequence generates unique sequential numbers, often used for primary keys."}
{"prompt":"Write a Redis command to get a set difference.","completion":"SDIFF set1 set2"}
{"prompt":"How to use ROW_NUMBER() in SQL?","completion":"SELECT column, ROW_NUMBER() OVER (ORDER BY column) FROM table;"}
{"prompt":"Explain data partitioning in NoSQL.","completion":"Data partitioning splits data across nodes to improve scalability and performance in NoSQL."}
{"prompt":"Write a SQL query to find records with specific month.","completion":"SELECT * FROM table WHERE MONTH(date_column) = 6;"}
{"prompt":"How to use $and in MongoDB?","completion":"db.collection.find({ $and: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"What is a database snapshot?","completion":"A snapshot captures the database state at a point in time for backup or analysis."}
{"prompt":"Write a Neo4j query to find nodes with multiple properties.","completion":"MATCH (n:Node {prop1: 'value1', prop2: 'value2'}) RETURN n;"}
{"prompt":"How to use SUBSTRING in SQL?","completion":"SELECT SUBSTRING(column, 1, 5) FROM table;"}
{"prompt":"Explain failover in databases.","completion":"Failover switches to a standby database server if the primary fails, ensuring availability."}
{"prompt":"Write a SQL query to find records with specific hour.","completion":"SELECT * FROM table WHERE HOUR(time_column) = 14;"}
{"prompt":"How to use $not in MongoDB?","completion":"db.collection.find({ field: { $not: { $eq: 'value' } } });"}
{"prompt":"What is a database trigger event?","completion":"A trigger event (e.g., INSERT, UPDATE) activates a trigger to perform an action."}
{"prompt":"Write a Redis command to expire a hash.","completion":"EXPIRE myhash 60"}
{"prompt":"How to use LAG() in SQL?","completion":"SELECT column, LAG(column) OVER (ORDER BY column) FROM table;"}
{"prompt":"Explain data replication in MongoDB.","completion":"MongoDB replicates data to secondary nodes for fault tolerance and read scalability."}
{"prompt":"How to learn coding?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with specific day.","completion":"SELECT * FROM table WHERE DAY(date_column) = 15;"}
{"prompt":"How to use $type in MongoDB?","completion":"db.collection.find({ field: { $type: 'string' } });"}
{"prompt":"What is a database role?","completion":"A database role defines a set of permissions for users or groups in a database."}
{"prompt":"Write a Neo4j query to find nodes by pattern.","completion":"MATCH (n:Node)-[:REL]->(m:Node) WHERE n.prop = 'value' RETURN n, m;"}
{"prompt":"How to use REPLACE in SQL?","completion":"SELECT REPLACE(column, 'old', 'new') FROM table;"}
{"prompt":"Explain data encryption in databases.","completion":"Data encryption protects sensitive data in databases using algorithms like AES."}
{"prompt":"What's the best way to learn chess?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with specific quarter.","completion":"SELECT * FROM table WHERE QUARTER(date_column) = 2;"}
{"prompt":"How to use $geoNear in MongoDB?","completion":"db.collection.aggregate([{ $geoNear: { near: { type: 'Point', coordinates: [lng, lat] }, distanceField: 'dist' } }]);"}
{"prompt":"What is a database audit trail?","completion":"An audit trail logs database actions for security and compliance monitoring."}
{"prompt":"Write a Redis command to get a set cardinality.","completion":"SCARD myset"}
{"prompt":"How to use LEAD() in SQL?","completion":"SELECT column, LEAD(column) OVER (ORDER BY column) FROM table;"}
{"prompt":"Explain data compression in databases.","completion":"Data compression reduces storage size in databases, improving performance and cost efficiency."}
{"prompt":"How to plan a vacation?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with specific week.","completion":"SELECT * FROM table WHERE WEEK(date_column) = 25;"}
{"prompt":"How to use $sample in MongoDB?","completion":"db.collection.aggregate([{ $sample: { size: 5 } }]);"}
{"prompt":"What is a database synonym?","completion":"A synonym is an alias for a database object, simplifying access or hiding complexity."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship type.","completion":"MATCH (n)-[r:REL_TYPE]->(m) RETURN n, m;"}
{"prompt":"How to use TRIM in SQL?","completion":"SELECT TRIM(column) FROM table;"}
{"prompt":"Explain connection pooling in databases.","completion":"Connection pooling reuses database connections to improve performance and scalability."}
{"prompt":"What's the best way to learn photography?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How do I select all users from a table named 'users' where age is less than 30?","completion":"SELECT * FROM users WHERE age < 30;"}
{"prompt":"Explain the difference between INNER JOIN and LEFT JOIN in SQL.","completion":"INNER JOIN returns only matching rows from both tables, while LEFT JOIN returns all rows from the left table and matching rows from the right, with NULLs for non-matches."}
{"prompt":"Write a MongoDB query to find documents where price is greater than 100.","completion":"db.collection.find({ price: { $gt: 100 } });"}
{"prompt":"What is a primary key in SQL?","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicates and allowing fast lookups."}
{"prompt":"Create a Redis command to set a key-value pair.","completion":"SET user:123 'John Doe'"}
{"prompt":"How to group employees by department and count them in SQL?","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"What's the MongoDB equivalent of SQL's WHERE clause?","completion":"Use the find() method with a filter, e.g., db.collection.find({ age: { $gt: 25 } });"}
{"prompt":"Explain ACID properties in databases.","completion":"ACID stands for Atomicity, Consistency, Isolation, Durability, ensuring reliable transactions in SQL databases."}
{"prompt":"Write a Neo4j query to update a node property.","completion":"MATCH (n:Person {id: 1}) SET n.name = 'Alice';"}
{"prompt":"Write a SQL query to find the highest salary.","completion":"SELECT MAX(salary) FROM employees;"}
{"prompt":"What is sharding in MongoDB?","completion":"Sharding distributes data across multiple servers to handle large datasets and high throughput."}
{"prompt":"Query MongoDB to find documents where status is 'active'.","completion":"db.collection.find({ status: 'active' });"}
{"prompt":"Explain normalization in SQL databases.","completion":"Normalization reduces data redundancy by organizing tables into forms like 1NF, 2NF, 3NF."}
{"prompt":"Write a SQL query using HAVING to filter groups.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"What is a document store in NoSQL?","completion":"A document store like MongoDB stores data in flexible, JSON-like documents without a fixed schema."}
{"prompt":"Perform a MongoDB aggregation to sum prices by category.","completion":"db.collection.aggregate([{ $group: { _id: '$category', total: { $sum: '$price' } } }]);"}
{"prompt":"Explain foreign keys in SQL.","completion":"Foreign keys link two tables, enforcing referential integrity by referencing a primary key in another table."}
{"prompt":"Write a Neo4j query to find relationships.","completion":"MATCH (a:Person)-[:KNOWS]->(b:Person) RETURN a, b;"}
{"prompt":"How to start a transaction in SQL?","completion":"BEGIN TRANSACTION;"}
{"prompt":"What is CAP theorem in NoSQL?","completion":"CAP theorem states distributed systems can provide at most two of Consistency, Availability, Partition tolerance."}
{"prompt":"Create a SQL view for active users.","completion":"CREATE VIEW active_users AS SELECT * FROM users WHERE status = 'active';"}
{"prompt":"Explain SQL window functions.","completion":"Window functions like ROW_NUMBER() perform calculations across a set of rows related to the current row."}
{"prompt":"Update multiple documents in MongoDB.","completion":"db.collection.updateMany({ status: 'pending' }, { $set: { status: 'completed' } });"}
{"prompt":"What is denormalization in NoSQL?","completion":"Denormalization duplicates data to improve read performance, common in NoSQL for faster queries."}
{"prompt":"Create a SQL table with constraints.","completion":"CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50) NOT NULL, salary INT);"}
{"prompt":"Explain eventual consistency in NoSQL.","completion":"Eventual consistency means replicas may temporarily differ but will converge over time."}
{"prompt":"Combine two SQL tables with UNION.","completion":"SELECT name FROM table1 UNION SELECT name FROM table2;"}
{"prompt":"Find distinct values in MongoDB.","completion":"db.collection.distinct('field');"}
{"prompt":"What is a key-value store?","completion":"A NoSQL database like Redis that stores data as simple key-value pairs for fast access."}
{"prompt":"Drop a SQL table.","completion":"DROP TABLE table_name;"}
{"prompt":"Join collections in MongoDB using $lookup.","completion":"db.orders.aggregate([{ $lookup: { from: 'inventory', localField: 'item', foreignField: 'sku', as: 'inventory_docs' } }]);"}
{"prompt":"What are indexes in databases?","completion":"Indexes speed up queries by allowing faster data retrieval, like a book's index."}
{"prompt":"Create a node in Neo4j.","completion":"CREATE (n:Person {name: 'Bob', age: 30});"}
{"prompt":"Optimize a slow SQL query.","completion":"Add indexes, avoid SELECT *, use EXPLAIN to analyze, limit rows with WHERE."}
{"prompt":"What is a column-family store?","completion":"Like Cassandra, it stores data in columns grouped into families, suitable for wide rows."}
{"prompt":"Alter a SQL table to add a column.","completion":"ALTER TABLE employees ADD email VARCHAR(100);"}
{"prompt":"Sort MongoDB query results.","completion":"db.collection.find().sort({ age: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"Explain SQL triggers.","completion":"Triggers are automatic actions (e.g., procedures) that run before/after events like INSERT."}
{"prompt":"Set multiple fields in a Redis hash.","completion":"HMSET user:123 name 'Alice' age 25"}
{"prompt":"What is schema-less design in NoSQL?","completion":"NoSQL databases like MongoDB allow flexible schemas, where documents can have different fields."}
{"prompt":"Perform full-text search in PostgreSQL.","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('search term');"}
{"prompt":"Handle errors in SQL transactions.","completion":"Use TRY...CATCH in T-SQL or check @@ERROR in others."}
{"prompt":"What are graph databases?","completion":"Graph databases like Neo4j store data as nodes and relationships, ideal for connected data."}
{"prompt":"Write a SQL query with a CTE.","completion":"WITH cte AS (SELECT * FROM employees WHERE salary > 50000) SELECT * FROM cte;"}
{"prompt":"Limit MongoDB query results.","completion":"db.collection.find().limit(10);"}
{"prompt":"Rename a MongoDB collection.","completion":"db.collection.renameCollection('newName');"}
{"prompt":"Set a key to expire in Redis.","completion":"SET mykey 'value' EX 60 // expires in 60 seconds"}
{"prompt":"How are joins done in NoSQL?","completion":"NoSQL often uses denormalization or application-level joins, but MongoDB has $lookup."}
{"prompt":"Write a SQL pivot query.","completion":"SELECT * FROM (SELECT employee, month, sales FROM sales_data) PIVOT (SUM(sales) FOR month IN ('Jan', 'Feb'));"}
{"prompt":"Count documents in MongoDB.","completion":"db.collection.countDocuments({ status: 'active' });"}
{"prompt":"What is partitioning in SQL?","completion":"Partitioning divides large tables into smaller pieces for better performance and management."}
{"prompt":"Create a relationship in Neo4j.","completion":"MATCH (a:Person), (b:Person) CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"Use LIKE in a SQL query.","completion":"SELECT * FROM products WHERE name LIKE '%phone%';"}
{"prompt":"Project specific fields in MongoDB.","completion":"db.collection.find({}, { name: 1, price: 1, _id: 0 });"}
{"prompt":"What is a SQL view?","completion":"A view is a virtual table based on a query, used for security and simplicity."}
{"prompt":"Batch insert in SQL.","completion":"INSERT INTO users (name, age) VALUES ('Alice', 25), ('Bob', 30);"}
{"prompt":"Explain multi-tenancy in databases.","completion":"Multi-tenancy allows multiple users/tenants to share a database while isolating their data."}
{"prompt":"Unwind an array in MongoDB.","completion":"db.collection.aggregate([{ $unwind: '$tags' }]);"}
{"prompt":"Write a SQL query to find employees hired in 2023.","completion":"SELECT * FROM employees WHERE YEAR(hire_date) = 2023;"}
{"prompt":"How to increment a value in Redis?","completion":"INCR counter"}
{"prompt":"Explain materialized views in SQL.","completion":"Materialized views store query results physically, unlike regular views, for faster access."}
{"prompt":"Query MongoDB for null values.","completion":"db.collection.find({ field: null });"}
{"prompt":"What is a composite key in SQL?","completion":"A composite key uses multiple columns to uniquely identify a record."}
{"prompt":"Write a Neo4j query to delete a node.","completion":"MATCH (n:Person {id: 1}) DELETE n;"}
{"prompt":"How to use CASE in SQL?","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"Explain MongoDB replica sets.","completion":"Replica sets provide redundancy and high availability by maintaining multiple data copies."}
{"prompt":"Add a unique constraint in SQL.","completion":"ALTER TABLE users ADD CONSTRAINT unique_email UNIQUE (email);"}
{"prompt":"Query Redis for list elements.","completion":"LRANGE mylist 0 -1"}
{"prompt":"What are transactions in MongoDB?","completion":"MongoDB supports multi-document transactions for ACID compliance since version 4.0."}
{"prompt":"Write a SQL query with multiple JOINs.","completion":"SELECT e.name, d.department_name, l.location FROM employees e JOIN departments d ON e.dept_id = d.id JOIN locations l ON d.loc_id = l.id;"}
{"prompt":"Explain eventual consistency in Redis.","completion":"Redis prioritizes availability and partition tolerance, achieving eventual consistency in distributed setups."}
{"prompt":"Drop an index in MySQL.","completion":"DROP INDEX idx_name ON table_name;"}
{"prompt":"Find documents in MongoDB by regex.","completion":"db.collection.find({ name: { $regex: '^A', $options: 'i' } });"}
{"prompt":"What is a clustered index in SQL?","completion":"A clustered index determines the physical order of data in a table, used in SQL Server."}
{"prompt":"Write a Neo4j query to find shortest path.","completion":"MATCH p=shortestPath((a:Person {name: 'Alice'})-[:KNOWS*]->(b:Person {name: 'Bob'})) RETURN p;"}
{"prompt":"How to use DISTINCT in SQL?","completion":"SELECT DISTINCT department FROM employees;"}
{"prompt":"Explain MongoDB's $in operator.","completion":"The $in operator matches any value in a specified array, e.g., db.collection.find({ status: { $in: ['active', 'pending'] } });"}
{"prompt":"Write a SQL query with ORDER BY.","completion":"SELECT * FROM products ORDER BY price DESC;"}
{"prompt":"How to use Redis pub/sub?","completion":"PUBLISH channel 'message' and SUBSCRIBE channel"}
{"prompt":"Explain SQL injection.","completion":"SQL injection is a security vulnerability where malicious SQL code is inserted into queries."}
{"prompt":"Query MongoDB for array elements.","completion":"db.collection.find({ tags: 'tech' });"}
{"prompt":"Explain Redis persistence.","completion":"Redis supports persistence via RDB snapshots and AOF logs for data durability."}
{"prompt":"Join tables with RIGHT JOIN in SQL.","completion":"SELECT * FROM employees e RIGHT JOIN departments d ON e.dept_id = d.id;"}
{"prompt":"What is a graph traversal in Neo4j?","completion":"Graph traversal queries relationships between nodes, e.g., finding friends-of-friends."}
{"prompt":"How to use SQL LIMIT clause?","completion":"SELECT * FROM users LIMIT 10;"}
{"prompt":"Recommend a good movie.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain quantum computing.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Suggest a book on history.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain machine learning.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is the meaning of life?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Query the best restaurant.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to code in HTML?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about ancient Rome.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain string theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Recommend a workout routine.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is cryptocurrency?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Discuss climate change.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Suggest travel destinations.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's China's population?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Discuss philosophy of mind.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about space exploration.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is DevOps?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to grow vegetables?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's a good diet plan?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to build a mobile app?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Discuss World War II.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is cloud computing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Suggest a hobby.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is data science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the GDP of the USA?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain metaphysics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to repair a bike?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about Mars missions.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is quantum entanglement?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain game theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's a good skincare routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Discuss the Renaissance.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is augmented reality?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to care for a pet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain dark matter.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Suggest a podcast.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is cybersecurity?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's India's population?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain ethics in philosophy.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about the moon landing.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is a neural net?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the economy like?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Discuss existentialism.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to change a tire?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about asteroids.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is big data?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the capital of Brazil?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain political philosophy.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to install a light fixture?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about black holes.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is deep learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain utilitarianism.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to repair a phone screen?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about the Big Bang.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is data mining?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make bread?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the capital of Australia?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain aesthetics in philosophy.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to fix a printer?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about supernovas.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is bioinformatics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make a smoothie?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the capital of Canada?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain epistemology.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to install a toilet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about exoplanets.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is natural language processing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make coffee?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the capital of Russia?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain logic in philosophy.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to fix a sink?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about galaxies.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is computer vision?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make pasta sauce?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the capital of Germany?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain phenomenology.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to repair a TV?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Tell me about comets.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is robotics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to make pizza?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the capital of Italy?","completion":"Sorry, I can only answer questions Magnet: I'm sorry, but I can only answer questions related to SQL and NoSQL database queries. Please ask a related question."}
{"prompt":"How to select distinct names from a SQL table called users?","completion":"SELECT DISTINCT name FROM users;"}
{"prompt":"Explain the difference between SQL and NoSQL databases","completion":"SQL databases are relational, using structured tables with fixed schemas, while NoSQL databases are non-relational, supporting flexible schemas like documents, key-value, or graphs."}
{"prompt":"What is the weather today?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to join two tables, orders and customers","completion":"SELECT * FROM orders INNER JOIN customers ON orders.customer_id = customers.id;"}
{"prompt":"How to insert a document into MongoDB collection 'products'?","completion":"db.products.insertOne({ name: 'Product', price: 99 });"}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key is a column in one table that references the primary key of another table, ensuring referential integrity."}
{"prompt":"How to set a key-value pair in Redis?","completion":"SET user:1 'John Doe'"}
{"prompt":"Write a SQL query to count rows in a table named sales","completion":"SELECT COUNT(*) FROM sales;"}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $set: { name: 'New Name' } });"}
{"prompt":"Explain indexing in databases","completion":"Indexes are data structures that improve query performance by allowing faster data retrieval, like a book’s index."}
{"prompt":"How to create a table in SQL?","completion":"CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), salary DECIMAL);"}
{"prompt":"Write a SQL query with GROUP BY","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"What is sharding in NoSQL?","completion":"Sharding distributes data across multiple servers to improve scalability and performance."}
{"prompt":"Write a MongoDB query to sort by price descending","completion":"db.collection.find().sort({ price: -1 });"}
{"prompt":"What’s the best way to learn Python?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is a primary key?","completion":"A primary key uniquely identifies each record in a table and cannot be null."}
{"prompt":"How to push to a list in Redis?","completion":"LPUSH mylist 'item'"}
{"prompt":"Write a SQL query using HAVING","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"Explain eventual consistency in NoSQL","completion":"Eventual consistency means distributed replicas may temporarily differ but will eventually align."}
{"prompt":"What is a graph database?","completion":"A graph database, like Neo4j, stores data as nodes and relationships for connected data queries."}
{"prompt":"Write a Neo4j query to create a node","completion":"CREATE (n:Person {name: 'Alice', age: 30});"}
{"prompt":"What is normalization in SQL?","completion":"Normalization organizes tables to reduce redundancy and improve data integrity (e.g., 1NF, 2NF, 3NF)."}
{"prompt":"How to use LIKE in SQL?","completion":"SELECT * FROM users WHERE name LIKE '%John%';"}
{"prompt":"Write a Redis query for hashes","completion":"HMSET user:1 name 'John' age 30"}
{"prompt":"What is a view in SQL?","completion":"A view is a virtual table based on a query, used for simplifying complex queries or security."}
{"prompt":"Write a SQL query for UNION","completion":"SELECT name FROM table1 UNION SELECT name FROM table2;"}
{"prompt":"How to update multiple documents in MongoDB?","completion":"db.collection.updateMany({ status: 'old' }, { $set: { status: 'new' } });"}
{"prompt":"Explain CAP theorem","completion":"CAP theorem states distributed systems can provide at most two of Consistency, Availability, Partition tolerance."}
{"prompt":"How to expire a key in Redis?","completion":"SET mykey 'value' EX 3600"}
{"prompt":"Write a SQL query with a CTE","completion":"WITH dept_counts AS (SELECT department, COUNT(*) as cnt FROM employees GROUP BY department) SELECT * FROM dept_counts;"}
{"prompt":"What is denormalization in NoSQL?","completion":"Denormalization duplicates data to optimize read performance in NoSQL databases."}
{"prompt":"How to perform a full-text search in PostgreSQL?","completion":"SELECT * FROM documents WHERE to_tsvector(content) @@ to_tsquery('search & term');"}
{"prompt":"Write a MongoDB query with $lookup","completion":"db.orders.aggregate([{ $lookup: { from: 'customers', localField: 'customer_id', foreignField: '_id', as: 'customer_info' } }]);"}
{"prompt":"What are triggers in SQL?","completion":"Triggers are automatic actions executed before or after events like INSERT, UPDATE, or DELETE."}
{"prompt":"How to batch insert in SQL?","completion":"INSERT INTO employees (id, name) VALUES (1, 'John'), (2, 'Jane');"}
{"prompt":"Explain replication in databases","completion":"Replication copies data across servers for redundancy, fault tolerance, and load balancing."}
{"prompt":"How to recommend a movie?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to alter a table","completion":"ALTER TABLE employees ADD email VARCHAR(100);"}
{"prompt":"How to sort in SQL?","completion":"SELECT * FROM employees ORDER BY salary DESC;"}
{"prompt":"How to unwind an array in MongoDB?","completion":"db.collection.aggregate([{ $unwind: '$tags' }]);"}
{"prompt":"Explain partitioning in databases","completion":"Partitioning splits large tables into smaller, manageable pieces for better performance."}
{"prompt":"How to create a view in SQL?","completion":"CREATE VIEW active_users AS SELECT * FROM users WHERE status = 'active';"}
{"prompt":"What is multi-tenancy in databases?","completion":"Multi-tenancy allows multiple users/tenants to share a database while isolating their data."}
{"prompt":"Write a SQL query with window functions","completion":"SELECT name, salary, RANK() OVER (PARTITION BY department ORDER BY salary DESC) FROM employees;"}
{"prompt":"How to handle transactions in SQL?","completion":"BEGIN TRANSACTION; INSERT INTO accounts (id, balance) VALUES (1, 1000); COMMIT;"}
{"prompt":"What is caching with Redis?","completion":"Redis caches frequently accessed data in memory for faster retrieval than disk-based databases."}
{"prompt":"Write a MongoDB query with projection","completion":"db.collection.find({}, { name: 1, _id: 0 });"}
{"prompt":"Explain stored procedures in SQL","completion":"Stored procedures are precompiled SQL scripts stored in the database for reuse and efficiency."}
{"prompt":"What is a column-family store?","completion":"A column-family store, like Cassandra, organizes data into columns for scalable, wide-row storage."}
{"prompt":"Write a SQL query to delete rows","completion":"DELETE FROM employees WHERE status = 'inactive';"}
{"prompt":"How to use $in in MongoDB?","completion":"db.collection.find({ status: { $in: ['active', 'pending'] } });"}
{"prompt":"What are joins in NoSQL?","completion":"NoSQL databases often rely on denormalization or application-level joins, but MongoDB supports $lookup for joins."}
{"prompt":"How to create an index in PostgreSQL?","completion":"CREATE INDEX idx_name ON employees (name);"}
{"prompt":"Explain clustering in databases","completion":"Clustering groups related data on disk to improve query performance, common in SQL and NoSQL."}
{"prompt":"Write a Redis query to get a range","completion":"LRANGE mylist 0 -1"}
{"prompt":"What is the population of China?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze with EXPLAIN, and filter with WHERE clauses."}
{"prompt":"Write a MongoDB query to delete documents","completion":"db.collection.deleteMany({ status: 'expired' });"}
{"prompt":"Explain views in NoSQL","completion":"Some NoSQL databases like CouchDB use views to precompute query results for efficiency."}
{"prompt":"How to use EXISTS in SQL?","completion":"SELECT * FROM employees WHERE EXISTS (SELECT 1 FROM departments WHERE manager_id = employees.id);"}
{"prompt":"What is a transaction log?","completion":"A transaction log records all database changes to ensure durability and recovery."}
{"prompt":"Write a Neo4j query to delete a node","completion":"MATCH (n:Person {name: 'Alice'}) DELETE n;"}
{"prompt":"Explain materialized views in SQL","completion":"Materialized views store query results physically, unlike regular views, for faster access."}
{"prompt":"How to use $regex in MongoDB?","completion":"db.collection.find({ name: { $regex: '^A', $options: 'i' } });"}
{"prompt":"How to get a hash in Redis?","completion":"HGETALL user:1"}
{"prompt":"Write a SQL query for self-join","completion":"SELECT e1.name, e2.name FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id;"}
{"prompt":"What is eventual consistency?","completion":"Eventual consistency ensures distributed replicas align over time, common in NoSQL."}
{"prompt":"Write a MongoDB query to find by date","completion":"db.collection.find({ createdAt: { $gte: new Date('2023-01-01') } });"}
{"prompt":"Explain schema design in SQL","completion":"Schema design involves defining tables, columns, and relationships to optimize storage and queries."}
{"prompt":"How to create a set in Redis?","completion":"SADD myset 'item1' 'item2'"}
{"prompt":"Write a SQL query with BETWEEN","completion":"SELECT * FROM orders WHERE order_date BETWEEN '2023-01-01' AND '2023-12-31';"}
{"prompt":"What is a graph traversal?","completion":"Graph traversal queries relationships between nodes, like finding paths in Neo4j."}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $push: { tags: 'newTag' } });"}
{"prompt":"Explain database scalability","completion":"Scalability involves handling increased load via sharding, replication, or vertical scaling."}
{"prompt":"Write a SQL query with ORDER BY","completion":"SELECT * FROM products ORDER BY price ASC;"}
{"prompt":"What is a database schema?","completion":"A schema defines the structure of a database, including tables, columns, and constraints."}
{"prompt":"Write a MongoDB query with $elemMatch","completion":"db.collection.find({ arrayField: { $elemMatch: { value: { $gt: 10 } } } });"}
{"prompt":"How to create a unique constraint in SQL?","completion":"ALTER TABLE employees ADD CONSTRAINT unique_email UNIQUE (email);"}
{"prompt":"What is a NoSQL wide-column store?","completion":"A wide-column store, like Cassandra, stores data in flexible column families for scalability."}
{"prompt":"How to use transactions in MongoDB?","completion":"const session = db.getMongo().startSession(); session.startTransaction(); try { ... } catch { session.abortTransaction(); } finally { session.endSession(); }"}
{"prompt":"Write a SQL query with LIMIT","completion":"SELECT * FROM users LIMIT 10;"}
{"prompt":"Explain database migrations","completion":"Database migrations manage schema changes over time, ensuring consistency across environments."}
{"prompt":"How to pop from a list in Redis?","completion":"LP FCC:pop mylist"}
{"prompt":"What is a join index?","completion":"A join index precomputes joins to improve query performance in some databases."}
{"prompt":"Write a Neo4j query to find shortest path","completion":"MATCH (start:Person {name: 'Alice'}), (end:Person {name: 'Bob'}), p = shortestPath((start)-[*]-(end)) RETURN p;"}
{"prompt":"What is a database cursor?","completion":"A cursor allows iterative processing of query results, often used in SQL/NoSQL."}
{"prompt":"Write a SQL query with IN","completion":"SELECT * FROM employees WHERE department IN ('HR', 'IT');"}
{"prompt":"Explain write-ahead logging","completion":"Write-ahead logging records changes to a log before applying them to ensure durability."}
{"prompt":"Write a MongoDB query to group by date","completion":"db.collection.aggregate([{ $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$createdAt' } }, count: { $sum: 1 } } }]);"}
{"prompt":"How to create a trigger in SQL?","completion":"CREATE TRIGGER my_trigger AFTER INSERT ON employees FOR EACH ROW INSERT INTO logs (action) VALUES ('New employee added');"}
{"prompt":"Write a SQL query with COALESCE","completion":"SELECT COALESCE(NULL, column1, 'default') FROM table;"}
{"prompt":"How to use $addToSet in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $addToSet: { tags: 'uniqueTag' } });"}
{"prompt":"Explain database locking","completion":"Locking prevents concurrent access issues by restricting data modifications during transactions."}
{"prompt":"Write a Redis query for sorted sets","completion":"ZADD mysortedset 1 'item1' 2 'item2'"}
{"prompt":"What is a materialized path in NoSQL?","completion":"A materialized path stores hierarchical data as a string path, used in MongoDB for trees."}
{"prompt":"Write a SQL query with DISTINCT ON","completion":"SELECT DISTINCT ON (department) department, name FROM employees;"}
{"prompt":"What is a database transaction?","completion":"A transaction is a sequence of operations performed as a single, atomic unit."}
{"prompt":"How to get a set in Redis?","completion":"SMEMBERS myset"}
{"prompt":"Write a SQL query with NULLIF","completion":"SELECT NULLIF(column1, 'value') FROM table;"}
{"prompt":"Explain database sharding vs partitioning","completion":"Sharding distributes data across servers; partitioning splits tables within a database."}
{"prompt":"How to use $all in MongoDB?","completion":"db.collection.find({ tags: { $all: ['tag1', 'tag2'] } });"}
{"prompt":"What is a database index scan?","completion":"An index scan retrieves data using an index, faster than a full table scan."}
{"prompt":"Write a Neo4j query to update a property","completion":"MATCH (n:Person {name: 'Alice'}) SET n.age = 31;"}
{"prompt":"How to use TTL in MongoDB?","completion":"db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"What is a database view materialization?","completion":"Materialization stores a view’s query results physically for faster access."}
{"prompt":"Write a SQL query with CROSS JOIN","completion":"SELECT * FROM table1 CROSS JOIN table2;"}
{"prompt":"Explain database consistency models","completion":"Consistency models define how data is synchronized across replicas, e.g., strong vs. eventual."}
{"prompt":"How to get a range in Redis sorted set?","completion":"ZRANGE mysortedset 0 -1 WITHSCORES"}
{"prompt":"Write a SQL query with LATERAL","completion":"SELECT * FROM employees e, LATERAL (SELECT * FROM projects WHERE employee_id = e.id) p;"}
{"prompt":"What is a database snapshot?","completion":"A snapshot is a point-in-time copy of a database for backup or analysis."}
{"prompt":"How to use $nin in MongoDB?","completion":"db.collection.find({ status: { $nin: ['inactive', 'deleted'] } });"}
{"prompt":"Explain database connection pooling","completion":"Connection pooling reuses database connections to improve performance and scalability."}
{"prompt":"Write a SQL query with JSON functions","completion":"SELECT JSON_EXTRACT(data, '$.name') FROM table;"}
{"prompt":"How to use $pull in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $pull: { tags: 'oldTag' } });"}
{"prompt":"What is a database checkpoint?","completion":"A checkpoint writes in-memory changes to disk to ensure data durability."}
{"prompt":"How to check set membership in Redis?","completion":"SISMEMBER myset 'item'"}
{"prompt":"What is a database cursor in MongoDB?","completion":"A cursor in MongoDB allows iterative processing of query results."}
{"prompt":"How to create a unique index in MongoDB?","completion":"db.collection.createIndex({ email: 1 }, { unique: true });"}
{"prompt":"Explain database load balancing","completion":"Load balancing distributes queries across servers to optimize performance."}
{"prompt":"Write a SQL query with FULL OUTER JOIN","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What is a database trigger event?","completion":"A trigger event is an action (e.g., INSERT) that activates a database trigger."}
{"prompt":"How to perform a union in Redis?","completion":"SUNION set1 set2"}
{"prompt":"Write a SQL query with INTERSECT","completion":"SELECT id FROM table1 INTERSECT SELECT id FROM table2;"}
{"prompt":"Explain database failover","completion":"Failover switches to a backup server if the primary server fails."}
{"prompt":"How to use $inc in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $inc: { count: 1 } });"}
{"prompt":"What is a database sequence?","completion":"A sequence generates unique, sequential numbers, often used for IDs."}
{"prompt":"Write a Neo4j query to delete a relationship","completion":"MATCH ()-[r:KNOWS]->() WHERE r.id = 1 DELETE r;"}
{"prompt":"How to use pipelines in Redis?","completion":"redis.multi().set('key1', 'value1').set('key2', 'value2').exec()"}
{"prompt":"Explain database indexing strategies","completion":"Strategies include B-tree for general use, hash for equality, and full-text for search."}
{"prompt":"Write a SQL query with EXCEPT","completion":"SELECT id FROM table1 EXCEPT SELECT id FROM table2;"}
{"prompt":"How to use $match in MongoDB?","completion":"db.collection.aggregate([{ $match: { status: 'active' } }]);"}
{"prompt":"What is a database constraint?","completion":"Constraints enforce rules like uniqueness or non-null values in a database."}
{"prompt":"How to perform a difference in Redis?","completion":"SDIFF set1 set2"}
{"prompt":"Write a SQL query with ARRAY_AGG","completion":"SELECT department, ARRAY_AGG(name) FROM employees GROUP BY department;"}
{"prompt":"Explain database read replicas","completion":"Read replicas are copies of a database used to offload read queries."}
{"prompt":"How to use $sortByCount in MongoDB?","completion":"db.collection.aggregate([{ $sortByCount: '$category' }]);"}
{"prompt":"What is a database backup?","completion":"A backup is a copy of a database to restore data after loss or corruption."}
{"prompt":"Write a SQL query with STRING_AGG","completion":"SELECT department, STRING_AGG(name, ', ') FROM employees GROUP BY department;"}
{"prompt":"How to use $project in MongoDB?","completion":"db.collection.aggregate([{ $project: { name: 1, _id: 0 } }]);"}
{"prompt":"Explain database denormalization in SQL","completion":"Denormalization in SQL duplicates data to improve query performance, reducing joins."}
{"prompt":"How to get a random member in Redis?","completion":"SRANDMEMBER myset"}
{"prompt":"Write a SQL query with COALESCE","completion":"SELECT COALESCE(column1, 'default') FROM table;"}
{"prompt":"What is a database role?","completion":"A role defines a set of permissions for database access control."}
{"prompt":"How to use $redact in MongoDB?","completion":"db.collection.aggregate([{ $redact: { $cond: { if: { $eq: ['$level', 1] }, then: '$$KEEP', else: '$$PRUNE' } } }]);"}
{"prompt":"Explain database query optimization","completion":"Query optimization involves rewriting queries, adding indexes, and analyzing execution plans."}
{"prompt":"Write a Neo4j query to find all nodes","completion":"MATCH (n) RETURN n;"}
{"prompt":"What is a database audit trail?","completion":"An audit trail logs database activities for security and compliance."}
{"prompt":"How to intersect sets in Redis?","completion":"SINTER set1 set2"}
{"prompt":"Write a SQL query with ROW_NUMBER","completion":"SELECT name, ROW_NUMBER() OVER (ORDER BY salary) AS rank FROM employees;"}
{"prompt":"Explain database high availability","completion":"High availability ensures minimal downtime using replication, failover, and redundancy."}
{"prompt":"How to use $out in MongoDB?","completion":"db.collection.aggregate([{ $match: { status: 'active' } }, { $out: 'newCollection' }]);"}
{"prompt":"What is a database schema migration?","completion":"Schema migration updates a database’s structure while preserving data."}
{"prompt":"Write a SQL query with DENSE_RANK","completion":"SELECT name, DENSE_RANK() OVER (PARTITION BY department ORDER BY salary) AS rank FROM employees;"}
{"prompt":"How to use $merge in MongoDB?","completion":"db.collection.aggregate([{ $match: { status: 'active' } }, { $merge: { into: 'newCollection' } }]);"}
{"prompt":"Explain database ACID compliance","completion":"ACID compliance ensures transactions are atomic, consistent, isolated, and durable."}
{"prompt":"How to store a sorted set in Redis?","completion":"ZADD mysortedset 1 'item1' 2 'item2'"}
{"prompt":"Write a SQL query with NTILE","completion":"SELECT name, NTILE(4) OVER (ORDER BY salary) AS quartile FROM employees;"}
{"prompt":"What is a database proxy?","completion":"A database proxy routes queries to appropriate servers, often for load balancing."}
{"prompt":"How to use $facet in MongoDB?","completion":"db.collection.aggregate([{ $facet: { cat1: [{ $match: { type: 1 } }], cat2: [{ $match: { type: 2 } }] } }]);"}
{"prompt":"Explain database deadlocks","completion":"Deadlocks occur when transactions wait for each other’s resources, requiring resolution."}
{"prompt":"Write a SQL query with FIRST_VALUE","completion":"SELECT name, FIRST_VALUE(salary) OVER (PARTITION BY department) AS top_salary FROM employees;"}
{"prompt":"How to use $set in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $set: { status: 'active' } });"}
{"prompt":"What is a database cluster?","completion":"A cluster is a group of servers working together to provide scalability and reliability."}
{"prompt":"How to use $zrangebyscore in Redis?","completion":"ZRANGEBYSCORE mysortedset 1 10"}
{"prompt":"Write a SQL query with LAST_VALUE","completion":"SELECT name, LAST_VALUE(salary) OVER (PARTITION BY department) AS last_salary FROM employees;"}
{"prompt":"Explain database connection timeout","completion":"Connection timeout limits how long a client waits to connect to a database."}
{"prompt":"How to use $unset in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $unset: { field: '' } });"}
{"prompt":"What is a database transaction isolation level?","completion":"Isolation levels (e.g., Read Committed, Serializable) control how transactions see data changes."}
{"prompt":"Write a SQL query with LEAD","completion":"SELECT name, LEAD(salary) OVER (ORDER BY salary) AS next_salary FROM employees;"}
{"prompt":"How to use $geoWithin in MongoDB?","completion":"db.collection.find({ location: { $geoWithin: { $box: [[0, 0], [10, 10]] } } });"}
{"prompt":"Explain database sharding strategies","completion":"Strategies include range-based, hash-based, or geographic sharding for distributing data."}
{"prompt":"How to use $zrem in Redis?","completion":"ZREM mysortedset 'item1'"}
{"prompt":"Write a SQL query with LAG","completion":"SELECT name, LAG(salary) OVER (ORDER BY salary) AS prev_salary FROM employees;"}
{"prompt":"What is a database hot backup?","completion":"A hot backup copies a database while it’s running, without downtime."}
{"prompt":"How to use $currentDate in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $currentDate: { updatedAt: true } });"}
{"prompt":"Explain database write conflicts","completion":"Write conflicts occur when multiple transactions try to modify the same data concurrently."}
{"prompt":"Write a SQL query with RANK","completion":"SELECT name, RANK() OVER (PARTITION BY department ORDER BY salary DESC) AS rank FROM employees;"}
{"prompt":"How to use $max in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $max: { score: 100 } });"}
{"prompt":"What is a database cold backup?","completion":"A cold backup copies a database while it’s offline, ensuring a consistent snapshot."}
{"prompt":"How to use $scard in Redis?","completion":"SCARD myset"}
{"prompt":"Write a SQL query with JSON_OBJECT","completion":"SELECT JSON_OBJECT('id', id, 'name', name) FROM employees;"}
{"prompt":"Explain database query caching","completion":"Query caching stores results of frequent queries to reduce database load."}
{"prompt":"How to use $min in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $min: { score: 50 } });"}
{"prompt":"What is a database session?","completion":"A session is a temporary interaction between a client and a database."}
{"prompt":"How to use $zrank in Redis?","completion":"ZRANK mysortedset 'item1'"}
{"prompt":"Write a SQL query with PERCENT_RANK","completion":"SELECT name, PERCENT_RANK() OVER (ORDER BY salary) AS rank FROM employees;"}
{"prompt":"Explain database replication lag","completion":"Replication lag is the delay in syncing data between primary and replica databases."}
{"prompt":"How to use $rename in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $rename: { oldField: 'newField' } });"}
{"prompt":"What is a database connection string?","completion":"A connection string provides the details needed to connect to a database, like host and credentials."}
{"prompt":"How to use $spop in Redis?","completion":"SPOP myset"}
{"prompt":"Write a SQL query with CUME_DIST","completion":"SELECT name, CUME_DIST() OVER (ORDER BY salary) AS dist FROM employees;"}
{"prompt":"Explain database read scalability","completion":"Read scalability improves read performance using replicas or caching."}
{"prompt":"How to use $arrayElemAt in MongoDB?","completion":"db.collection.aggregate([{ $project: { first: { $arrayElemAt: ['$arrayField', 0] } } }]);"}
{"prompt":"What is a database archive?","completion":"An archive stores old data separately to reduce active database size."}
{"prompt":"How to use $zcount in Redis?","completion":"ZCOUNT mysortedset 1 10"}
{"prompt":"Write a SQL query with JSON_ARRAY","completion":"SELECT JSON_ARRAY(name, salary) FROM employees;"}
{"prompt":"Explain database write scalability","completion":"Write scalability improves write performance using sharding or distributed systems."}
{"prompt":"How to use $filter in MongoDB?","completion":"db.collection.aggregate([{ $project: { items: { $filter: { input: '$arrayField', cond: { $gt: ['$$this.value', 10] } } } } }]);"}
{"prompt":"What is a database stored function?","completion":"A stored function is a reusable SQL routine that returns a single value."}
{"prompt":"How to use $zinterstore in Redis?","completion":"ZINTERSTORE result 2 set1 set2"}
{"prompt":"Write a SQL query with GROUP_CONCAT","completion":"SELECT department, GROUP_CONCAT(name) FROM employees GROUP BY department;"}
{"prompt":"Explain database warm standby","completion":"A warm standby is a replica ready to take over but not actively serving queries."}
{"prompt":"How to use $concatArrays in MongoDB?","completion":"db.collection.aggregate([{ $project: { combined: { $concatArrays: ['$array1', '$array2'] } } }]);"}
{"prompt":"What is a database snapshot isolation?","completion":"Snapshot isolation ensures transactions see a consistent data snapshot."}
{"prompt":"How to use $zunionstore in Redis?","completion":"ZUNIONSTORE result 2 set1 set2"}
{"prompt":"Write a SQL query with JSON_ARRAYAGG","completion":"SELECT department, JSON_ARRAYAGG(name) FROM employees GROUP BY department;"}
{"prompt":"Explain database multi-version concurrency control","completion":"MVCC allows multiple transaction versions to coexist for concurrent access."}
{"prompt":"How to use $map in MongoDB?","completion":"db.collection.aggregate([{ $project: { doubled: { $map: { input: '$numbers', as: 'num', in: { $multiply: ['$$num', 2] } } } } }]);"}
{"prompt":"What is a database log shipping?","completion":"Log shipping sends transaction logs to a standby server for replication."}
{"prompt":"How to use $srem in Redis?","completion":"SREM myset 'item'"}
{"prompt":"Write a SQL query with OVER clause","completion":"SELECT name, SUM(salary) OVER (PARTITION BY department) AS total_salary FROM employees;"}
{"prompt":"Explain database eventual consistency models","completion":"Eventual consistency models ensure replicas converge over time, prioritizing availability."}
{"prompt":"How to use $cond in MongoDB?","completion":"db.collection.aggregate([{ $project: { status: { $cond: { if: { $gte: ['$score', 50] }, then: 'pass', else: 'fail' } } } }]);"}
{"prompt":"What is a database hot standby?","completion":"A hot standby is a replica ready to serve queries or take over immediately."}
{"prompt":"How to use $smembers in Redis?","completion":"SMEMBERS myset"}
{"prompt":"Write a SQL query with PARTITION BY","completion":"SELECT name, department, COUNT(*) OVER (PARTITION BY department) AS dept_count FROM employees;"}
{"prompt":"Explain database query plan","completion":"A query plan outlines how a database executes a query, optimizing performance."}
{"prompt":"How to use $let in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $let: { vars: { x: '$value' }, in: { $multiply: ['$$x', 2] } } } } }]);"}
{"prompt":"What is a database trigger scope?","completion":"Trigger scope defines whether a trigger applies per row or per statement."}
{"prompt":"How to use $zrevrange in Redis?","completion":"ZREVRANGE mysortedset 0 -1"}
{"prompt":"Write a SQL query with FETCH FIRST","completion":"SELECT * FROM employees FETCH FIRST 10 ROWS ONLY;"}
{"prompt":"Explain database data integrity","completion":"Data integrity ensures data accuracy and consistency using constraints and rules."}
{"prompt":"How to use $indexOfArray in MongoDB?","completion":"db.collection.aggregate([{ $project: { index: { $indexOfArray: ['$arrayField', 'value'] } } }]);"}
{"prompt":"What is a database failover cluster?","completion":"A failover cluster uses multiple servers to ensure availability if one fails."}
{"prompt":"How to use $sdiffstore in Redis?","completion":"SDIFFSTORE result set1 set2"}
{"prompt":"Write a SQL query with OFFSET","completion":"SELECT * FROM employees OFFSET 10 ROWS FETCH NEXT 10 ROWS ONLY;"}
{"prompt":"Explain database transaction log truncation","completion":"Log truncation removes old transaction log entries to free up space."}
{"prompt":"How to use $arrayToObject in MongoDB?","completion":"db.collection.aggregate([{ $project: { obj: { $arrayToObject: [['key1', 'value1'], ['key2', 'value2']] } } }]);"}
{"prompt":"What is a database consistency check?","completion":"A consistency check verifies data integrity across tables and constraints."}
{"prompt":"How to use $zscore in Redis?","completion":"ZSCORE mysortedset 'item'"}
{"prompt":"Write a SQL query with CHECK constraint","completion":"CREATE TABLE employees (id INT, salary DECIMAL CHECK (salary >= 0));"}
{"prompt":"Explain database write amplification","completion":"Write amplification occurs when a single write triggers multiple disk operations."}
{"prompt":"What is a database read-only replica?","completion":"A read-only replica handles read queries to reduce load on the primary database."}
{"prompt":"How to use $sunionstore in Redis?","completion":"SUNIONSTORE result set1 set2"}
{"prompt":"Write a SQL query with ON DELETE CASCADE","completion":"CREATE TABLE orders (id INT, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(id) ON DELETE CASCADE);"}
{"prompt":"Explain database query rewriting","completion":"Query rewriting optimizes queries by transforming them into equivalent, faster forms."}
{"prompt":"How to use $zip in MongoDB?","completion":"db.collection.aggregate([{ $project: { zipped: { $zip: { inputs: ['$array1', '$array2'] } } } }]);"}
{"prompt":"What is a database transaction rollback?","completion":"A rollback undoes changes made by a transaction if it fails or is aborted."}
{"prompt":"How to use $zremrangebyrank in Redis?","completion":"ZREMRANGEBYRANK mysortedset 0 1"}
{"prompt":"Write a SQL query with ON UPDATE CASCADE","completion":"CREATE TABLE orders (id INT, customer_id INT, FOREIGN KEY (customer_id) REFERENCES customers(id) ON UPDATE CASCADE);"}
{"prompt":"Explain database index fragmentation","completion":"Index fragmentation occurs when index pages become disordered, slowing queries."}
{"prompt":"How to use $ifNull in MongoDB?","completion":"db.collection.aggregate([{ $project: { value: { $ifNull: ['$field', 'default'] } } }]);"}
{"prompt":"What is a database transaction commit?","completion":"A commit finalizes a transaction, making its changes permanent."}
{"prompt":"How to use $zremrangebyscore in Redis?","completion":"ZREMRANGEBYSCORE mysortedset 1 10"}
{"prompt":"Write a SQL query with GENERATED ALWAYS","completion":"CREATE TABLE employees (id INT, full_name VARCHAR(100) GENERATED ALWAYS AS (CONCAT(first_name, ' ', last_name)) STORED);"}
{"prompt":"Explain database query execution plan","completion":"An execution plan shows the steps a database takes to execute a query."}
{"prompt":"How to use $setUnion in MongoDB?","completion":"db.collection.aggregate([{ $project: { union: { $setUnion: ['$array1', '$array2'] } } }]);"}
{"prompt":"What is a database index rebuild?","completion":"An index rebuild reorganizes or recreates an index to improve performance."}
{"prompt":"How to use $sinterstore in Redis?","completion":"SINTERSTORE result set1 set2"}
{"prompt":"Write a SQL query with ALTER TABLE DROP","completion":"ALTER TABLE employees DROP COLUMN email;"}
{"prompt":"Explain database connection retry logic","completion":"Connection retry logic attempts to reconnect to a database after a failure."}
{"prompt":"How to use $setIntersection in MongoDB?","completion":"db.collection.aggregate([{ $project: { intersection: { $setIntersection: ['$array1', '$array2'] } } }]);"}
{"prompt":"What is a database index hint?","completion":"An index hint forces a database to use a specific index for a query."}
{"prompt":"How to use $zrevrank in Redis?","completion":"ZREVRANK mysortedset 'item'"}
{"prompt":"Write a SQL query with DROP CONSTRAINT","completion":"ALTER TABLE employees DROP CONSTRAINT unique_email;"}
{"prompt":"Explain database transaction deadlock detection","completion":"Deadlock detection identifies when transactions block each other, triggering resolution."}
{"prompt":"How to use $setDifference in MongoDB?","completion":"db.collection.aggregate([{ $project: { diff: { $setDifference: ['$array1', '$array2'] } } }]);"}
{"prompt":"What is a database index selectivity?","completion":"Index selectivity measures how uniquely an index filters rows, affecting performance."}
{"prompt":"How to use $zincrby in Redis?","completion":"ZINCRBY mysortedset 1 'item'"}
{"prompt":"Write a SQL query with CREATE SEQUENCE","completion":"CREATE SEQUENCE emp_id_seq START WITH 1 INCREMENT BY 1;"}
{"prompt":"Explain database connection pooling benefits","completion":"Connection pooling reduces overhead by reusing database connections."}
{"prompt":"How to use $toUpper in MongoDB?","completion":"db.collection.aggregate([{ $project: { upper: { $toUpper: '$name' } } }]);"}
{"prompt":"What is a database index bloat?","completion":"Index bloat occurs when unused space accumulates in an index, slowing queries."}
{"prompt":"How to use $zrangebylex in Redis?","completion":"ZRANGEBYLEX mysortedset [a [z"}
{"prompt":"Write a SQL query with NEXTVAL","completion":"INSERT INTO employees (id, name) VALUES (NEXTVAL('emp_id_seq'), 'John');"}
{"prompt":"Explain database transaction snapshot","completion":"A transaction snapshot provides a consistent view of data at a point in time."}
{"prompt":"How to use $toLower in MongoDB?","completion":"db.collection.aggregate([{ $project: { lower: { $toLower: '$name' } } }]);"}
{"prompt":"What is a database index maintenance?","completion":"Index maintenance involves updating or rebuilding indexes to ensure performance."}
{"prompt":"How to use $zrevrangebyscore in Redis?","completion":"ZREVRANGEBYSCORE mysortedset 10 1"}
{"prompt":"Write a SQL query with SETVAL","completion":"SELECT SETVAL('emp_id_seq', 100);"}
{"prompt":"Explain database query cost estimation","completion":"Cost estimation predicts the resources needed for a query, guiding optimization."}
{"prompt":"How to use $trim in MongoDB?","completion":"db.collection.aggregate([{ $project: { trimmed: { $trim: { input: '$name' } } } }]);"}
{"prompt":"What is a database index cardinality?","completion":"Index cardinality is the number of unique values in an index, affecting selectivity."}
{"prompt":"How to use $zrevrangebylex in Redis?","completion":"ZREVRANGEBYLEX mysortedset [z [a"}
{"prompt":"Write a SQL query with CURRVAL","completion":"SELECT CURRVAL('emp_id_seq');"}
{"prompt":"Explain database transaction recovery","completion":"Transaction recovery restores a database to a consistent state after a failure."}
{"prompt":"How to use $ltrim in MongoDB?","completion":"db.collection.aggregate([{ $project: { trimmed: { $ltrim: { input: '$name' } } } }]);"}
{"prompt":"What is a database index clustering factor?","completion":"Clustering factor measures how well index order matches table data order."}
{"prompt":"How to use $zpopmax in Redis?","completion":"ZPOPMAX mysortedset"}
{"prompt":"Write a SQL query with DROP SEQUENCE","completion":"DROP SEQUENCE emp_id_seq;"}
{"prompt":"Explain database transaction durability","completion":"Durability ensures committed transactions are permanently saved, even after failures."}
{"prompt":"How to use $rtrim in MongoDB?","completion":"db.collection.aggregate([{ $project: { trimmed: { $rtrim: { input: '$name' } } } }]);"}
{"prompt":"What is a database index scan cost?","completion":"Index scan cost estimates the resources needed to traverse an index."}
{"prompt":"How to use $zpopmin in Redis?","completion":"ZPOPMIN mysortedset"}
{"prompt":"Write a SQL query with ALTER SEQUENCE","completion":"ALTER SEQUENCE emp_id_seq RESTART WITH 1;"}
{"prompt":"Explain database transaction atomicity","completion":"Atomicity ensures a transaction is completed fully or not at all."}
{"prompt":"How to use $substr in MongoDB?","completion":"db.collection.aggregate([{ $project: { substring: { $substr: ['$name', 0, 3] } } }]);"}
{"prompt":"What is a database index covering query?","completion":"A covering query retrieves all needed data from an index, avoiding table access."}
{"prompt":"How to use $bzpopmax in Redis?","completion":"BZPOPMAX mysortedset 10"}
{"prompt":"Write a SQL query with CREATE DOMAIN","completion":"CREATE DOMAIN positive_int AS INTEGER CHECK (VALUE > 0);"}
{"prompt":"Explain database transaction isolation","completion":"Isolation ensures transactions do not interfere with each other."}
{"prompt":"How to use $substrCP in MongoDB?","completion":"db.collection.aggregate([{ $project: { substring: { $substrCP: ['$name', 0, 3] } } }]);"}
{"prompt":"What is a database index partial index?","completion":"A partial index indexes only a subset of rows based on a condition."}
{"prompt":"How to use $bzpopmin in Redis?","completion":"BZPOPMIN mysortedset 10"}
{"prompt":"Write a SQL query with CREATE TYPE","completion":"CREATE TYPE status AS ENUM ('active', 'inactive');"}
{"prompt":"Explain database transaction consistency","completion":"Consistency ensures transactions leave the database in a valid state."}
{"prompt":"How to use $strLenCP in MongoDB?","completion":"db.collection.aggregate([{ $project: { length: { $strLenCP: '$name' } } }]);"}
{"prompt":"What is a database index expression?","completion":"An expression index indexes the result of an expression, not just a column."}
{"prompt":"How to use $rpoplpush in Redis?","completion":"RPOPLPUSH source destination"}
{"prompt":"Write a SQL query with DROP TYPE","completion":"DROP TYPE status;"}
{"prompt":"Explain database index unique constraint","completion":"A unique index enforces unique values in indexed columns, preventing duplicates."}
{"prompt":"How to use $split in MongoDB?","completion":"db.collection.aggregate([{ $project: { parts: { $split: ['$name', ' '] } } }]);"}
{"prompt":"What is a database index prefix?","completion":"A prefix index indexes only the first part of a string column."}
{"prompt":"How to use $lpop in Redis?","completion":"LPOP mylist"}
{"prompt":"Write a SQL query with CREATE SCHEMA","completion":"CREATE SCHEMA company;"}
{"prompt":"Explain database index multi-column","completion":"A multi-column index indexes multiple columns for queries with multiple conditions."}
{"prompt":"How to use $concat in MongoDB?","completion":"db.collection.aggregate([{ $project: { full: { $concat: ['$first', ' ', '$last'] } } }]);"}
{"prompt":"What is a database index rebuild cost?","completion":"Rebuild cost is the resource usage for recreating an index."}
{"prompt":"How to use $rpop in Redis?","completion":"RPOP mylist"}
{"prompt":"Write a SQL query with DROP SCHEMA","completion":"DROP SCHEMA company;"}
{"prompt":"Explain database index usage statistics","completion":"Index usage statistics track how often an index is used for queries."}
{"prompt":"How to use $strcasecmp in MongoDB?","completion":"db.collection.aggregate([{ $project: { compare: { $strcasecmp: ['$name1', '$name2'] } } }]);"}
{"prompt":"What is a database index drop impact?","completion":"Dropping an index can slow queries that relied on it for performance."}
{"prompt":"How to use $blpop in Redis?","completion":"BLPOP mylist 10"}
{"prompt":"Write a SQL query with CREATE INDEX CONCURRENTLY","completion":"CREATE INDEX CONCURRENTLY idx_name ON employees (name);"}
{"prompt":"Explain database index maintenance overhead","completion":"Maintenance overhead includes the cost of updating indexes during data changes."}
{"prompt":"How to use $substrBytes in MongoDB?","completion":"db.collection.aggregate([{ $project: { substring: { $substrBytes: ['$name', 0, 3] } } }]);"}
{"prompt":"What is a database index scan type?","completion":"Scan types include full, range, or ref scans, depending on query needs."}
{"prompt":"How to use $brpop in Redis?","completion":"BRPOP mylist 10"}
{"prompt":"Write a SQL query with REINDEX","completion":"REINDEX INDEX idx_name;"}
{"prompt":"Explain database index selectivity estimation","completion":"Selectivity estimation predicts how many rows an index filters for optimization."}
{"prompt":"How to use $toString in MongoDB?","completion":"db.collection.aggregate([{ $project: { str: { $toString: '$number' } } }]);"}
{"prompt":"What is a database index include clause?","completion":"An include clause adds non-indexed columns to an index for covering queries."}
{"prompt":"How to use $brpoplpush in Redis?","completion":"BRPOPLPUSH source destination 10"}
{"prompt":"Write a SQL query with DROP INDEX","completion":"DROP INDEX idx_name;"}
{"prompt":"Explain database index cost model","completion":"The cost model estimates resource usage for index-based query execution."}
{"prompt":"How to use $toInt in MongoDB?","completion":"db.collection.aggregate([{ $project: { num: { $toInt: '$string' } } }]);"}
{"prompt":"What is a database index fragmentation impact?","completion":"Fragmentation slows queries by increasing disk I/O for index scans."}
{"prompt":"How to use $lrange in Redis?","completion":"LRANGE mylist 0 -1"}
{"prompt":"Write a SQL query with CREATE TABLE AS","completion":"CREATE TABLE new_table AS SELECT * FROM employees;"}
{"prompt":"Explain database index key compression","completion":"Key compression reduces index size by storing common prefixes once."}
{"prompt":"How to use $toDouble in MongoDB?","completion":"db.collection.aggregate([{ $project: { num: { $toDouble: '$string' } } }]);"}
{"prompt":"What is a database index scan direction?","completion":"Scan direction determines whether an index is scanned forward or backward."}
{"prompt":"How to use $llen in Redis?","completion":"LLEN mylist"}
{"prompt":"Write a SQL query with TRUNCATE","completion":"TRUNCATE TABLE employees;"}
{"prompt":"Explain database index merge","completion":"Index merge combines multiple indexes to satisfy a query efficiently."}
{"prompt":"How to use $toBool in MongoDB?","completion":"db.collection.aggregate([{ $project: { bool: { $toBool: '$value' } } }]);"}
{"prompt":"What is a database index skip scan?","completion":"A skip scan uses an index to skip irrelevant values, improving performance."}
{"prompt":"How to use $lset in Redis?","completion":"LSET mylist 0 'newValue'"}
{"prompt":"Write a SQL query with COMMENT ON","completion":"COMMENT ON TABLE employees IS 'Stores employee data';"}
{"prompt":"Explain database index range scan","completion":"A range scan retrieves a subset of index entries within a value range."}
{"prompt":"How to use $toObjectId in MongoDB?","completion":"db.collection.find({ _id: { $toObjectId: 'stringId' } });"}
{"prompt":"What is a database index full scan?","completion":"A full scan reads all entries in an index, used when filtering is minimal."}
{"prompt":"How to use $ltrim in Redis?","completion":"LTRIM mylist 0 2"}
{"prompt":"How to list all documents in MongoDB where age is less than 30?","completion":"db.users.find({ age: { $lt: 30 } });"}
{"prompt":"Explain the difference between SQL and NoSQL databases.","completion":"SQL databases are relational, use structured schemas, and support SQL queries, while NoSQL databases are non-relational, schema-less, and handle diverse data like documents or graphs."}
{"prompt":"How to insert a document in MongoDB collection 'books'?","completion":"db.books.insertOne({ title: 'Book Title', author: 'Author Name' });"}
{"prompt":"Create a Redis command to set a key-value pair.","completion":"SET user:1 'John Doe'"}
{"prompt":"Write a SQL query to group employees by department and count them.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"How to update a field in MongoDB?","completion":"db.collection.updateOne({ id: 1 }, { $set: { field: 'newValue' } });"}
{"prompt":"How to learn Python?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is sharding in NoSQL?","completion":"Sharding distributes data across multiple servers to handle large datasets and improve performance."}
{"prompt":"Write a SQL query using a LEFT JOIN.","completion":"SELECT * FROM employees LEFT JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"Explain ACID properties.","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions in databases."}
{"prompt":"Create a Redis command to get a value by key.","completion":"GET user:1"}
{"prompt":"Write a SQL query with a HAVING clause.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"How to sort documents in MongoDB?","completion":"db.collection.find().sort({ age: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"What is normalization in SQL?","completion":"Normalization organizes data into tables to reduce redundancy and ensure consistency, using forms like 1NF, 2NF, 3NF."}
{"prompt":"How to create a table in SQL?","completion":"CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50));"}
{"prompt":"What is a document store in NoSQL?","completion":"A document store, like MongoDB, stores data as flexible, JSON-like documents without a fixed schema."}
{"prompt":"Explain foreign keys in SQL.","completion":"Foreign keys link tables by referencing a primary key in another table, ensuring referential integrity."}
{"prompt":"Write a MongoDB query with $lookup.","completion":"db.orders.aggregate([{ $lookup: { from: 'customers', localField: 'customer_id', foreignField: '_id', as: 'customer_info' } }]);"}
{"prompt":"What is CAP theorem?","completion":"CAP theorem states that distributed systems can provide at most two of Consistency, Availability, and Partition tolerance."}
{"prompt":"How to expire a key in Redis?","completion":"SET mykey 'value' EX 60 // expires in 60 seconds"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data to optimize read performance, common in NoSQL databases."}
{"prompt":"Write a SQL query for a FULL OUTER JOIN.","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What is a graph database?","completion":"Graph databases, like Neo4j, store data as nodes and relationships, ideal for connected data like social networks."}
{"prompt":"Write a SQL query to update a record.","completion":"UPDATE employees SET salary = 60000 WHERE id = 1;"}
{"prompt":"Explain triggers in SQL.","completion":"Triggers are automatic procedures that execute in response to events like INSERT or UPDATE in a table."}
{"prompt":"Suggest a workout routine.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to delete a node.","completion":"MATCH (n:Person {name: 'Alice'}) DETACH DELETE n;"}
{"prompt":"What is eventual consistency?","completion":"Eventual consistency means distributed systems may have temporary inconsistencies but will converge over time."}
{"prompt":"Explain blockchain.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is a view in SQL?","completion":"A view is a virtual table based on a query, used for simplifying queries or securing data."}
{"prompt":"Write a Redis command for a hash.","completion":"HMSET user:1 name 'John' age 30"}
{"prompt":"How to handle transactions in SQL?","completion":"BEGIN TRANSACTION; UPDATE table1 SET column = value; COMMIT;"}
{"prompt":"Write a SQL query to find the top 5 salaries.","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"}
{"prompt":"Explain partitioning in databases.","completion":"Partitioning divides large tables into smaller pieces to improve performance and manageability."}
{"prompt":"Write a Neo4j query to find shortest path.","completion":"MATCH p = shortestPath((a:Person {name: 'Alice'})-[*]->(b:Person {name: 'Bob'})) RETURN p;"}
{"prompt":"How to use LIKE in SQL?","completion":"SELECT * FROM table_name WHERE column_name LIKE '%pattern%';"}
{"prompt":"What is a column-family store?","completion":"A column-family store, like Cassandra, organizes data into column families for scalable, wide-row storage."}
{"prompt":"Explain stored procedures in SQL.","completion":"Stored procedures are precompiled SQL scripts stored in the database for reuse and efficiency."}
{"prompt":"Write a SQL query with window functions.","completion":"SELECT name, salary, ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary DESC) FROM employees;"}
{"prompt":"How to batch insert in MongoDB?","completion":"db.collection.insertMany([{ field: 'value1' }, { field: 'value2' }]);"}
{"prompt":"What is replication in databases?","completion":"Replication copies data across servers for redundancy and improved availability."}
{"prompt":"Write a SQL query to alter a table.","completion":"ALTER TABLE table_name ADD column_name INT;"}
{"prompt":"Explain multi-tenancy in databases.","completion":"Multi-tenancy allows multiple users to share a database while isolating their data, often via schemas or namespaces."}
{"prompt":"Write a Redis command to increment a value.","completion":"INCR mycounter"}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze with EXPLAIN, and filter early with WHERE."}
{"prompt":"Write a SQL query for full-text search in PostgreSQL.","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('search_term');"}
{"prompt":"How to delete multiple documents in MongoDB?","completion":"db.collection.deleteMany({ status: 'inactive' });"}
{"prompt":"Explain caching with Redis.","completion":"Redis stores frequently accessed data in memory for faster retrieval compared to disk-based databases."}
{"prompt":"Write a Neo4j query to find nodes by property.","completion":"MATCH (n:Person {age: 30}) RETURN n;"}
{"prompt":"How to handle errors in SQL transactions?","completion":"Use TRY...CATCH in SQL Server or check @@ERROR in other dialects."}
{"prompt":"What is schema-less design in NoSQL?","completion":"Schema-less design allows NoSQL databases to store documents with varying structures without a fixed schema."}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT column1, column2 FROM table) PIVOT (SUM(column2) FOR column1 IN (value1, value2));"}
{"prompt":"Explain joins in NoSQL.","completion":"NoSQL databases often avoid joins, using denormalization or application-level logic, though MongoDB supports $lookup."}
{"prompt":"How do I select distinct names from a SQL table called 'users'?","completion":"SELECT DISTINCT name FROM users;"}
{"prompt":"Explain the difference between SQL and NoSQL databases","completion":"SQL databases are relational, use structured schemas and SQL for queries, while NoSQL databases are non-relational, schema-less, and support various data models like document, key-value, or graph."}
{"prompt":"How to create a table in SQL for customers?","completion":"CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));"}
{"prompt":"Write a Redis command to set a key 'user:1' with value 'John'","completion":"SET user:1 \"John\""}
{"prompt":"Write a MongoDB query to update a document's status","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { status: 'updated' } });"}
{"prompt":"Explain primary key in SQL","completion":"A primary key is a unique, non-null column or set of columns that identifies each record in a table."}
{"prompt":"How to delete a document in MongoDB?","completion":"db.collection.deleteOne({ _id: ObjectId('123') });"}
{"prompt":"Write a SQL query to count rows in a table","completion":"SELECT COUNT(*) FROM table_name;"}
{"prompt":"What is a graph database?","completion":"A graph database, like Neo4j, stores data as nodes and relationships, optimized for interconnected data queries."}
{"prompt":"Write a Neo4j query to create a relationship","completion":"MATCH (a:Person {name: 'Alice'}), (b:Person {name: 'Bob'}) CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"Explain sharding in NoSQL","completion":"Sharding distributes data across multiple servers to improve scalability and performance in NoSQL databases."}
{"prompt":"What is Redis used for?","completion":"Redis is a key-value NoSQL database used for caching, real-time analytics, and session storage."}
{"prompt":"Write a MongoDB query to sort results","completion":"db.collection.find().sort({ age: 1 });"}
{"prompt":"Explain ACID in databases","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions in databases."}
{"prompt":"Write a Redis command to get a list's elements","completion":"LRANGE mylist 0 -1"}
{"prompt":"Explain normalization in SQL","completion":"Normalization organizes data into tables to reduce redundancy and improve integrity, using forms like 1NF, 2NF, 3NF."}
{"prompt":"Write a MongoDB query to find distinct values","completion":"db.collection.distinct('field');"}
{"prompt":"What is a document store?","completion":"A document store, like MongoDB, stores data as JSON-like documents with flexible schemas."}
{"prompt":"How to expire a key in Redis?","completion":"SET mykey \"value\" EX 60"}
{"prompt":"Explain foreign keys in SQL","completion":"Foreign keys link a column in one table to a primary key in another, enforcing referential integrity."}
{"prompt":"Write a MongoDB aggregation query","completion":"db.collection.aggregate([{ $group: { _id: '$category', total: { $sum: '$price' } } }]);"}
{"prompt":"What is eventual consistency?","completion":"Eventual consistency means distributed NoSQL systems may have temporary inconsistencies but converge over time."}
{"prompt":"Write a Neo4j query to find shortest path","completion":"MATCH (start:Person {name: 'Alice'}), (end:Person {name: 'Bob'}), p = shortestPath((start)-[*]->(end)) RETURN p;"}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, use EXPLAIN to analyze, and filter with WHERE clauses."}
{"prompt":"Explain CAP theorem","completion":"CAP theorem states distributed systems can only guarantee two of Consistency, Availability, and Partition tolerance."}
{"prompt":"Write a SQL query with HAVING","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"Write a SQL query for UNION","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"How to push to a list in Redis?","completion":"LPUSH mylist \"value\""}
{"prompt":"Explain triggers in SQL","completion":"Triggers are automatic SQL procedures that execute before or after events like INSERT or UPDATE."}
{"prompt":"Write a MongoDB query with $lookup","completion":"db.orders.aggregate([{ $lookup: { from: 'inventory', localField: 'item', foreignField: 'sku', as: 'inventory_docs' } }]);"}
{"prompt":"What is denormalization?","completion":"Denormalization duplicates data in NoSQL databases to improve read performance."}
{"prompt":"Write a SQL query with window function","completion":"SELECT name, salary, ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary DESC) FROM employees;"}
{"prompt":"Explain replication in databases","completion":"Replication copies data across servers for redundancy, availability, and load balancing."}
{"prompt":"Write a SQL query with CTE","completion":"WITH cte AS (SELECT * FROM table_name) SELECT * FROM cte;"}
{"prompt":"Explain partitioning in SQL","completion":"Partitioning divides large tables into smaller, manageable pieces for better performance."}
{"prompt":"Write a Redis command for hashes","completion":"HMSET myhash field1 \"value1\" field2 \"value2\""}
{"prompt":"What is a column-family store?","completion":"A column-family store, like Cassandra, organizes data into columns for scalability."}
{"prompt":"How to perform full-text search in PostgreSQL?","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('search term');"}
{"prompt":"Write a SQL query to delete rows","completion":"DELETE FROM table_name WHERE condition;"}
{"prompt":"Explain stored procedures","completion":"Stored procedures are precompiled SQL scripts stored in the database for reuse and security."}
{"prompt":"How to batch insert in MongoDB?","completion":"db.collection.insertMany([{ doc1 }, { doc2 }]);"}
{"prompt":"What is multi-tenancy in databases?","completion":"Multi-tenancy isolates multiple users' data within a shared database system."}
{"prompt":"Write a SQL query with ORDER BY","completion":"SELECT * FROM table_name ORDER BY column DESC;"}
{"prompt":"How to get a hash value in Redis?","completion":"HGET myhash field1"}
{"prompt":"Explain indexes in databases","completion":"Indexes improve query performance by allowing faster data retrieval, like a book's index."}
{"prompt":"Write a MongoDB query to project fields","completion":"db.collection.find({}, { field1: 1, field2: 0 });"}
{"prompt":"What is a view in SQL?","completion":"A view is a virtual table based on a SQL query, used for security and simplicity."}
{"prompt":"Write a SQL query with EXISTS","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table2.id = table1.id);"}
{"prompt":"How to increment a value in Redis?","completion":"INCR mykey"}
{"prompt":"Explain graph traversal in Neo4j","completion":"Graph traversal in Neo4j uses patterns to navigate nodes and relationships, like MATCH (a)-[:REL]->(b)."}
{"prompt":"Write a MongoDB query to delete multiple documents","completion":"db.collection.deleteMany({ status: 'inactive' });"}
{"prompt":"What is caching in databases?","completion":"Caching stores frequently accessed data in memory (e.g., Redis) to reduce database load."}
{"prompt":"Explain schema-less design in NoSQL","completion":"Schema-less design allows NoSQL databases to store documents with varying structures."}
{"prompt":"Write a Neo4j query to find neighbors","completion":"MATCH (n:Person {name: 'Alice'})-[:KNOWS]->(neighbor) RETURN neighbor;"}
{"prompt":"How to use COALESCE in SQL?","completion":"SELECT COALESCE(column, 'default') FROM table_name;"}
{"prompt":"Write a MongoDB query to find by regex","completion":"db.collection.find({ name: { $regex: '^A', $options: 'i' } });"}
{"prompt":"Explain transaction isolation levels","completion":"Isolation levels (e.g., Read Committed, Serializable) control how transactions see data changes."}
{"prompt":"Write a SQL query to update rows","completion":"UPDATE table_name SET column = value WHERE condition;"}
{"prompt":"What is a join in NoSQL?","completion":"NoSQL joins are often application-level or use operations like MongoDB's $lookup."}
{"prompt":"Write a SQL query with CASE","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_range FROM employees;"}
{"prompt":"How to get current time in SQL?","completion":"SELECT NOW(); -- or CURRENT_TIMESTAMP"}
{"prompt":"Explain clustering in databases","completion":"Clustering groups data on disk to improve query performance, often used in column-family stores."}
{"prompt":"Write a MongoDB query to skip results","completion":"db.collection.find().skip(10);"}
{"prompt":"How to select all products from a table where price is less than 100 in SQL?","completion":"SELECT * FROM products WHERE price < 100;"}
{"prompt":"Explain the difference between INNER JOIN and OUTER JOIN in SQL.","completion":"INNER JOIN returns only matching rows from both tables, while OUTER JOIN (LEFT, RIGHT, or FULL) includes non-matching rows with NULLs for missing data."}
{"prompt":"Write a MongoDB query to find documents where age is greater than 30.","completion":"db.collection.find({ age: { $gt: 30 } });"}
{"prompt":"How to create a table in SQL with a primary key?","completion":"CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), salary DECIMAL(10,2));"}
{"prompt":"What is a NoSQL database?","completion":"A NoSQL database is a non-relational database designed for flexible schemas, scalability, and handling unstructured or semi-structured data, like MongoDB or Redis."}
{"prompt":"Write a SQL query to count the number of orders per customer.","completion":"SELECT customer_id, COUNT(*) FROM orders GROUP BY customer_id;"}
{"prompt":"How to insert a document in MongoDB?","completion":"db.collection.insertOne({ name: 'John', age: 25, city: 'New York' });"}
{"prompt":"Explain ACID properties in SQL databases.","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions by guaranteeing they are processed completely, maintain data integrity, are isolated, and persist after completion."}
{"prompt":"How to update a record in SQL?","completion":"UPDATE employees SET salary = 60000 WHERE id = 1;"}
{"prompt":"Write a Neo4j query to create a node.","completion":"CREATE (n:Person {name: 'Alice', age: 30});"}
{"prompt":"What is sharding in MongoDB?","completion":"Sharding in MongoDB distributes data across multiple servers to improve scalability and performance for large datasets."}
{"prompt":"Write a SQL query using LEFT JOIN.","completion":"SELECT employees.name, departments.dept_name FROM employees LEFT JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"How to delete a document in MongoDB?","completion":"db.collection.deleteOne({ name: 'John' });"}
{"prompt":"Explain normalization in SQL.","completion":"Normalization organizes data into tables to reduce redundancy and improve integrity, following forms like 1NF, 2NF, and 3NF."}
{"prompt":"Write a SQL query to find the maximum salary.","completion":"SELECT MAX(salary) FROM employees;"}
{"prompt":"How to perform an aggregation in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$category', total: { $sum: '$price' } } }]);"}
{"prompt":"What is a document store in NoSQL?","completion":"A document store, like MongoDB, stores data in flexible JSON-like documents without a fixed schema."}
{"prompt":"How to create an index in SQL?","completion":"CREATE INDEX idx_salary ON employees(salary);"}
{"prompt":"Write a MongoDB query to sort documents by age.","completion":"db.collection.find().sort({ age: 1 });"}
{"prompt":"Explain transactions in SQL.","completion":"Transactions group SQL statements, ensuring all complete (COMMIT) or none do (ROLLBACK) for data consistency."}
{"prompt":"What is eventual consistency in NoSQL?","completion":"Eventual consistency means replicas in a distributed NoSQL system may differ temporarily but converge over time."}
{"prompt":"How to drop a table in SQL?","completion":"DROP TABLE employees;"}
{"prompt":"How to update multiple documents in MongoDB?","completion":"db.collection.updateMany({ status: 'pending' }, { $set: { status: 'completed' } });"}
{"prompt":"Explain indexes in databases.","completion":"Indexes improve query performance by allowing faster data retrieval, like a book’s index, but increase storage and write time."}
{"prompt":"Write a SQL query to find distinct values.","completion":"SELECT DISTINCT department FROM employees;"}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.orders.aggregate([{ $lookup: { from: 'inventory', localField: 'item', foreignField: 'sku', as: 'inventory_docs' } }]);"}
{"prompt":"Explain stored procedures in SQL.","completion":"Stored procedures are precompiled SQL scripts stored in the database for reuse, improving performance and security."}
{"prompt":"How to tell a joke?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to alter a table.","completion":"ALTER TABLE employees ADD email VARCHAR(100);"}
{"prompt":"What is replication in databases?","completion":"Replication copies data across servers for redundancy, fault tolerance, and load balancing."}
{"prompt":"Write a Neo4j query to delete a node.","completion":"MATCH (n:Person {name: 'Alice'}) DELETE n;"}
{"prompt":"What is denormalization in NoSQL?","completion":"Denormalization duplicates data in NoSQL databases to optimize read performance, reducing the need for joins."}
{"prompt":"Write a SQL query with a CTE.","completion":"WITH avg_salary AS (SELECT AVG(salary) AS avg FROM employees) SELECT * FROM employees WHERE salary > (SELECT avg FROM avg_salary);"}
{"prompt":"Explain triggers in SQL.","completion":"Triggers are automatic actions executed before or after database events like INSERT, UPDATE, or DELETE."}
{"prompt":"What is a graph database?","completion":"A graph database, like Neo4j, stores data as nodes and relationships, ideal for connected data like social networks."}
{"prompt":"How to batch insert in SQL?","completion":"INSERT INTO employees (name, salary) VALUES ('John', 50000), ('Alice', 60000);"}
{"prompt":"Write a MongoDB query to find by ID.","completion":"db.collection.find({ _id: ObjectId('507f1f77bcf86cd799439011') });"}
{"prompt":"What is partitioning in SQL?","completion":"Partitioning divides large tables into smaller, manageable pieces to improve query performance and maintenance."}
{"prompt":"How to create a relationship in Neo4j?","completion":"MATCH (a:Person {name: 'Alice'}), (b:Person {name: 'Bob'}) CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"Explain multi-tenancy in databases.","completion":"Multi-tenancy allows multiple users or tenants to share a database while keeping their data isolated, often via schemas or namespaces."}
{"prompt":"What is a column-family store in NoSQL?","completion":"A column-family store, like Cassandra, organizes data into columns grouped in families, optimized for wide rows and analytics."}
{"prompt":"Write a SQL query to drop an index.","completion":"DROP INDEX idx_salary ON employees;"}
{"prompt":"How to use LIKE in SQL?","completion":"SELECT * FROM employees WHERE name LIKE '%Smith%';"}
{"prompt":"Explain caching with Redis.","completion":"Redis caches frequently accessed data in memory, reducing latency compared to disk-based database queries."}
{"prompt":"Write a MongoDB query with projection.","completion":"db.collection.find({}, { name: 1, age: 1, _id: 0 });"}
{"prompt":"What is a composite key in SQL?","completion":"A composite key is a primary key made of multiple columns to uniquely identify records in a table."}
{"prompt":"How to increment a value in Redis?","completion":"INCR mycounter"}
{"prompt":"Write a SQL query to find second highest salary.","completion":"SELECT MAX(salary) FROM employees WHERE salary < (SELECT MAX(salary) FROM employees);"}
{"prompt":"Explain materialized views in SQL.","completion":"Materialized views store query results physically, unlike regular views, and can be refreshed for updated data."}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze with EXPLAIN, and filter early with WHERE clauses."}
{"prompt":"What is BASE in NoSQL?","completion":"BASE (Basically Available, Soft state, Eventual consistency) prioritizes availability and flexibility over strict consistency."}
{"prompt":"Write a SQL query for a self-join.","completion":"SELECT e1.name, e2.name FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id;"}
{"prompt":"What are window functions in SQL?","completion":"Window functions perform calculations across a set of rows related to the current row, like ROW_NUMBER() or RANK()."}
{"prompt":"Write a Redis command to get a hash.","completion":"HGETALL user:1"}
{"prompt":"Explain schema-less design in NoSQL.","completion":"Schema-less design allows NoSQL databases like MongoDB to store documents with varying structures, enabling flexibility."}
{"prompt":"Write a SQL query to find duplicate records.","completion":"SELECT name, COUNT(*) FROM employees GROUP BY name HAVING COUNT(*) > 1;"}
{"prompt":"What is a clustered index in SQL?","completion":"A clustered index determines the physical order of data in a table, with one per table for fast lookups."}
{"prompt":"How to handle NULLs in SQL?","completion":"Use IS NULL or IS NOT NULL, e.g., SELECT * FROM employees WHERE manager_id IS NULL;"}
{"prompt":"Explain eventual consistency in MongoDB.","completion":"MongoDB’s eventual consistency ensures replicas sync over time, prioritizing availability over immediate consistency."}
{"prompt":"Write a SQL query with ORDER BY.","completion":"SELECT * FROM employees ORDER BY salary DESC;"}
{"prompt":"Write a MongoDB query to find null fields.","completion":"db.collection.find({ field: null });"}
{"prompt":"What is a transaction log in SQL?","completion":"A transaction log records all database changes, enabling recovery and ensuring durability."}
{"prompt":"Write a Redis command to add to a set.","completion":"SADD myset 'value'"}
{"prompt":"Explain joins in NoSQL databases.","completion":"NoSQL databases often avoid joins, using denormalization or application-level logic, but MongoDB supports $lookup for joins."}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT employee_id, department, salary FROM employees) PIVOT (SUM(salary) FOR department IN ('HR', 'IT'));"}
{"prompt":"How to rename a field in MongoDB?","completion":"db.collection.updateMany({}, { $rename: { 'oldField': 'newField' } });"}
{"prompt":"What is a non-clustered index in SQL?","completion":"A non-clustered index stores a separate structure from the data, pointing to table rows for faster queries."}
{"prompt":"Explain foreign key constraints in SQL.","completion":"Foreign key constraints ensure a column’s values match a primary key in another table, maintaining referential integrity."}
{"prompt":"Write a SQL query to find employees with no manager.","completion":"SELECT * FROM employees WHERE manager_id IS NULL;"}
{"prompt":"What is a database schema?","completion":"A database schema defines the structure of tables, columns, relationships, and constraints in a database."}
{"prompt":"Write a Redis command to pop from a list.","completion":"LPOP mylist"}
{"prompt":"Explain consistent hashing in NoSQL.","completion":"Consistent hashing distributes data across nodes in a NoSQL database, minimizing rebalancing during scaling."}
{"prompt":"Write a SQL query to find top 5 salaries.","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"}
{"prompt":"Explain query optimization in SQL.","completion":"Query optimization involves analyzing query plans with EXPLAIN, adding indexes, and rewriting queries for efficiency."}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH ()-[r:KNOWS]->() WHERE r.id = 1 DELETE r;"}
{"prompt":"Write a MongoDB query to find by regex.","completion":"db.collection.find({ name: { $regex: '^A', $options: 'i' } });"}
{"prompt":"What is a database cursor?","completion":"A cursor allows iterating over query results in a database, processing rows one at a time."}
{"prompt":"Explain data modeling in NoSQL.","completion":"NoSQL data modeling designs flexible schemas, often denormalized, to optimize for specific query patterns."}
{"prompt":"Write a SQL query to join three tables.","completion":"SELECT e.name, d.dept_name, p.project_name FROM employees e JOIN departments d ON e.dept_id = d.id JOIN projects p ON e.id = p.employee_id;"}
{"prompt":"How to use $slice in MongoDB?","completion":"db.collection.find({}, { items: { $slice: [0, 5] } });"}
{"prompt":"What is a deadlock in SQL?","completion":"A deadlock occurs when two transactions block each other, waiting for resources, requiring database intervention."}
{"prompt":"How to suggest a travel destination?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department name.","completion":"SELECT e.name FROM employees e JOIN departments d ON e.dept_id = d.id WHERE d.dept_name = 'IT';"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ _id: 1 }, { $push: { items: 'newItem' } });"}
{"prompt":"Explain database locking in SQL.","completion":"Locking prevents concurrent transactions from modifying the same data, ensuring consistency but potentially causing delays."}
{"prompt":"How to create a view in SQL?","completion":"CREATE VIEW high_earners AS SELECT name, salary FROM employees WHERE salary > 50000;"}
{"prompt":"What is a time-series database?","completion":"A time-series database, like InfluxDB, optimizes storage and queries for time-stamped data, often used in IoT."}
{"prompt":"Write a SQL query to calculate average salary by department.","completion":"SELECT department, AVG(salary) FROM employees GROUP BY department;"}
{"prompt":"How to use $inc in MongoDB?","completion":"db.collection.updateOne({ _id: 1 }, { $inc: { count: 1 } });"}
{"prompt":"Explain database migration.","completion":"Database migration moves data or schema between databases or versions, often for upgrades or system changes."}
{"prompt":"Write a Redis command to get a range of list elements.","completion":"LRANGE mylist 0 4"}
{"prompt":"Write a MongoDB query to find documents with multiple conditions.","completion":"db.collection.find({ age: { $gt: 25 }, city: 'New York' });"}
{"prompt":"What is a database index scan?","completion":"An index scan reads an index to retrieve rows matching a query, faster than a full table scan."}
{"prompt":"Write a Neo4j query to find nodes with a property.","completion":"MATCH (n:Person {city: 'London'}) RETURN n;"}
{"prompt":"Explain write-ahead logging in SQL.","completion":"Write-ahead logging records changes to a log before applying them to the database, ensuring durability."}
{"prompt":"Write a SQL query to find employees with salary between 40000 and 60000.","completion":"SELECT * FROM employees WHERE salary BETWEEN 40000 AND 60000;"}
{"prompt":"How to use $pull in MongoDB?","completion":"db.collection.updateOne({ _id: 1 }, { $pull: { items: 'oldItem' } });"}
{"prompt":"What is a database trigger?","completion":"A trigger is a stored procedure that automatically executes in response to events like INSERT or UPDATE."}
{"prompt":"Write a Redis command to add to a sorted set.","completion":"ZADD mysortedset 10 'value'"}
{"prompt":"Explain data warehousing in databases.","completion":"Data warehousing stores large volumes of historical data for analytics, optimized for complex queries."}
{"prompt":"Write a SQL query to find employees hired before a date.","completion":"SELECT * FROM employees WHERE hire_date < '2023-01-01';"}
{"prompt":"How to use $elemMatch in MongoDB?","completion":"db.collection.find({ arrayField: { $elemMatch: { value: { $gt: 10 } } } });"}
{"prompt":"What is a covering index in SQL?","completion":"A covering index includes all columns needed for a query, avoiding table access for better performance."}
{"prompt":"Write a Neo4j query to find connected nodes.","completion":"MATCH (n:Person)-[:KNOWS*1..2]->(m) RETURN n, m;"}
{"prompt":"How to use COALESCE in SQL?","completion":"SELECT COALESCE(NULL, salary, 0) AS salary FROM employees;"}
{"prompt":"Explain read replicas in databases.","completion":"Read replicas are copies of a primary database used to offload read queries, improving scalability."}
{"prompt":"Write a MongoDB query to group by a field.","completion":"db.collection.aggregate([{ $group: { _id: '$department', count: { $sum: 1 } } }]);"}
{"prompt":"What's the best way to invest in stocks?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees with specific skills.","completion":"SELECT * FROM employees WHERE skills LIKE '%SQL%';"}
{"prompt":"How to use $set in MongoDB?","completion":"db.collection.updateOne({ _id: 1 }, { $set: { status: 'active' } });"}
{"prompt":"What is a database constraint?","completion":"A constraint enforces rules on data, like NOT NULL, UNIQUE, or FOREIGN KEY, to maintain integrity."}
{"prompt":"Write a Redis command to get sorted set range.","completion":"ZRANGE mysortedset 0 -1 WITHSCORES"}
{"prompt":"Explain database scalability.","completion":"Scalability allows a database to handle increased load through techniques like sharding or replication."}
{"prompt":"Write a SQL query to find employees in multiple departments.","completion":"SELECT e.name FROM employees e JOIN dept_emp de ON e.id = de.employee_id GROUP BY e.name HAVING COUNT(de.dept_id) > 1;"}
{"prompt":"How to use $match in MongoDB?","completion":"db.collection.aggregate([{ $match: { age: { $gt: 25 } } }]);"}
{"prompt":"What is a database transaction isolation level?","completion":"Isolation levels (e.g., Read Committed, Serializable) define how transactions interact, balancing consistency and performance."}
{"prompt":"Write a Neo4j query to find nodes by pattern.","completion":"MATCH (n:Person)-[:WORKS_IN]->(c:Company) WHERE c.name = 'TechCorp' RETURN n;"}
{"prompt":"Write a SQL query to calculate total salary by department.","completion":"SELECT department, SUM(salary) FROM employees GROUP BY department;"}
{"prompt":"How to use $sort in MongoDB?","completion":"db.collection.aggregate([{ $sort: { age: -1 } }]);"}
{"prompt":"Explain database snapshots.","completion":"A database snapshot captures a point-in-time view of data, useful for backups or historical analysis."}
{"prompt":"Write a Redis command to check set membership.","completion":"SISMEMBER myset 'value'"}
{"prompt":"What is a database view materialization?","completion":"Materialization stores a view’s query results physically, improving query speed but requiring periodic refreshes."}
{"prompt":"Write a SQL query to find employees with no projects.","completion":"SELECT e.name FROM employees e LEFT JOIN projects p ON e.id = p.employee_id WHERE p.id IS NULL;"}
{"prompt":"How to use $addToSet in MongoDB?","completion":"db.collection.updateOne({ _id: 1 }, { $addToSet: { items: 'uniqueItem' } });"}
{"prompt":"Explain database clustering.","completion":"Clustering groups database servers to act as a single system, improving availability and load balancing."}
{"prompt":"Write a Neo4j query to find all paths.","completion":"MATCH p = (n:Person)-[:KNOWS*]->(m) RETURN p;"}
{"prompt":"How to use NULLIF in SQL?","completion":"SELECT NULLIF(salary, 0) AS salary FROM employees;"}
{"prompt":"Write a SQL query to find employees by manager.","completion":"SELECT e.name FROM employees e WHERE e.manager_id = 1;"}
{"prompt":"How to use $size in MongoDB?","completion":"db.collection.find({ items: { $size: 3 } });"}
{"prompt":"What is a database checkpoint?","completion":"A checkpoint saves the database’s state to disk, ensuring consistency and aiding crash recovery."}
{"prompt":"Write a Redis command to get list length.","completion":"LLEN mylist"}
{"prompt":"Explain database indexing strategies.","completion":"Indexing strategies include choosing columns for indexes based on query patterns, balancing read/write performance."}
{"prompt":"Write a SQL query to find employees with salary above average.","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"}
{"prompt":"How to use $project in MongoDB?","completion":"db.collection.aggregate([{ $project: { name: 1, age: 1, _id: 0 } }]);"}
{"prompt":"What is a database role?","completion":"A database role defines a set of permissions for users, controlling access to data and operations."}
{"prompt":"Write a Neo4j query to delete all nodes.","completion":"MATCH (n) DETACH DELETE n;"}
{"prompt":"Write a SQL query to find employees by hire month.","completion":"SELECT * FROM employees WHERE MONTH(hire_date) = 6;"}
{"prompt":"Explain database connection pooling.","completion":"Connection pooling reuses database connections to improve performance and reduce overhead."}
{"prompt":"Write a Redis command to remove from a sorted set.","completion":"ZREM mysortedset 'value'"}
{"prompt":"What is a database audit?","completion":"A database audit tracks operations and changes to ensure security, compliance, and debugging."}
{"prompt":"Write a SQL query to find employees with specific job title.","completion":"SELECT * FROM employees WHERE job_title = 'Engineer';"}
{"prompt":"Explain database sharding strategies.","completion":"Sharding strategies include range-based, hash-based, or geographic partitioning to distribute data."}
{"prompt":"Write a Neo4j query to find node properties.","completion":"MATCH (n:Person) RETURN properties(n);"}
{"prompt":"How to use IFNULL in SQL?","completion":"SELECT IFNULL(salary, 0) AS salary FROM employees;"}
{"prompt":"Write a SQL query to find employees by city.","completion":"SELECT * FROM employees WHERE city = 'New York';"}
{"prompt":"What is a database sequence?","completion":"A sequence generates unique sequential numbers, often used for primary keys in SQL."}
{"prompt":"Write a Redis command to get key type.","completion":"TYPE mykey"}
{"prompt":"Explain database load balancing.","completion":"Load balancing distributes database queries across servers to optimize performance and reliability."}
{"prompt":"Write a SQL query to find employees with multiple skills.","completion":"SELECT name FROM employees WHERE skills LIKE '%SQL%' AND skills LIKE '%Python%';"}
{"prompt":"What is a database backup?","completion":"A database backup is a copy of data used for recovery in case of data loss or corruption."}
{"prompt":"How to use CONCAT in SQL?","completion":"SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employees;"}
{"prompt":"Write a SQL query to find employees by salary range.","completion":"SELECT * FROM employees WHERE salary >= 50000 AND salary <= 75000;"}
{"prompt":"How to use $or in MongoDB?","completion":"db.collection.find({ $or: [{ age: { $gt: 30 } }, { status: 'active' }] });"}
{"prompt":"Write a Redis command to decrement a value.","completion":"DECR mycounter"}
{"prompt":"Explain database performance tuning.","completion":"Performance tuning optimizes queries, indexes, and configurations to reduce latency and resource usage."}
{"prompt":"Write a SQL query to find employees by department ID.","completion":"SELECT * FROM employees WHERE dept_id = 3;"}
{"prompt":"How to use $and in MongoDB?","completion":"db.collection.find({ $and: [{ age: { $gt: 25 } }, { city: 'London' }] });"}
{"prompt":"What is a database cluster index?","completion":"A cluster index determines the physical order of data in a table, improving query performance."}
{"prompt":"Write a Neo4j query to find node degrees.","completion":"MATCH (n:Person) RETURN n.name, size((n)--()) AS degree;"}
{"prompt":"How to use DATEADD in SQL?","completion":"SELECT DATEADD(day, 7, hire_date) AS new_date FROM employees;"}
{"prompt":"What's the best way to learn history?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by email domain.","completion":"SELECT * FROM employees WHERE email LIKE '%@company.com';"}
{"prompt":"How to use $count in MongoDB?","completion":"db.collection.aggregate([{ $count: 'total' }]);"}
{"prompt":"Explain database high availability.","completion":"High availability ensures a database remains operational through redundancy and failover mechanisms."}
{"prompt":"Write a Redis command to get all keys.","completion":"KEYS *"}
{"prompt":"What is a database trigger event?","completion":"A trigger event is an action (e.g., INSERT, UPDATE) that causes a database trigger to execute."}
{"prompt":"Write a SQL query to find employees by tenure.","completion":"SELECT * FROM employees WHERE DATEDIFF(YEAR, hire_date, GETDATE()) > 5;"}
{"prompt":"How to use $geoNear in MongoDB?","completion":"db.collection.aggregate([{ $geoNear: { near: { type: 'Point', coordinates: [ -73.99, 40.75 ] }, distanceField: 'dist' } }]);"}
{"prompt":"Explain database denormalization.","completion":"Denormalization intentionally duplicates data to improve read performance, common in analytics or NoSQL."}
{"prompt":"Write a Neo4j query to find common neighbors.","completion":"MATCH (a:Person {name: 'Alice'})-[:KNOWS]->(n)<-[:KNOWS]-(b:Person {name: 'Bob'}) RETURN n;"}
{"prompt":"How to use SUBSTRING in SQL?","completion":"SELECT SUBSTRING(name, 1, 3) AS short_name FROM employees;"}
{"prompt":"Write a SQL query to find employees by last name.","completion":"SELECT * FROM employees WHERE last_name = 'Smith';"}
{"prompt":"How to use $min in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$department', minAge: { $min: '$age' } } }]);"}
{"prompt":"What is a database index fragmentation?","completion":"Index fragmentation occurs when index pages become disordered, slowing queries; resolved by rebuilding indexes."}
{"prompt":"Write a Redis command to get hash field.","completion":"HGET user:1 name"}
{"prompt":"Explain database failover.","completion":"Failover automatically switches to a standby database server if the primary fails, ensuring availability."}
{"prompt":"Write a SQL query to find employees by project.","completion":"SELECT e.name FROM employees e JOIN projects p ON e.id = p.employee_id WHERE p.project_name = 'ProjectX';"}
{"prompt":"How to use $max in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$department', maxAge: { $max: '$age' } } }]);"}
{"prompt":"What is a database archive?","completion":"A database archive stores old or infrequently accessed data separately to optimize performance."}
{"prompt":"Write a Neo4j query to find all relationships of a node.","completion":"MATCH (n:Person {name: 'Alice'})-[r]->() RETURN r;"}
{"prompt":"How to use ROUND in SQL?","completion":"SELECT ROUND(salary, 2) AS rounded_salary FROM employees;"}
{"prompt":"Write a SQL query to find employees by age range.","completion":"SELECT * FROM employees WHERE age BETWEEN 25 AND 35;"}
{"prompt":"How to use $avg in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$department', avgSalary: { $avg: '$salary' } } }]);"}
{"prompt":"Explain database query caching.","completion":"Query caching stores query results to speed up repeated queries, common in systems like Redis."}
{"prompt":"Write a Redis command to set multiple hash fields.","completion":"HMSET user:1 name 'Alice' age 30 city 'London'"}
{"prompt":"What is a database stored function?","completion":"A stored function is a reusable SQL routine that returns a single value, unlike stored procedures."}
{"prompt":"Write a SQL query to find employees by manager name.","completion":"SELECT e.name FROM employees e JOIN employees m ON e.manager_id = m.id WHERE m.name = 'John Doe';"}
{"prompt":"Explain database partitioning types.","completion":"Partitioning types include range (e.g., by date), list (e.g., by category), and hash (e.g., by key)."}
{"prompt":"Write a Neo4j query to find nodes with specific properties.","completion":"MATCH (n:Person {age: 30, city: 'New York'}) RETURN n;"}
{"prompt":"How to use DATEDIFF in SQL?","completion":"SELECT DATEDIFF(day, hire_date, GETDATE()) AS tenure FROM employees;"}
{"prompt":"Write a SQL query to find employees by hire year.","completion":"SELECT * FROM employees WHERE YEAR(hire_date) = 2022;"}
{"prompt":"How to use $sum in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$department', totalSalary: { $sum: '$salary' } } }]);"}
{"prompt":"What is a database full table scan?","completion":"A full table scan reads all rows in a table, used when no suitable index exists, but slower."}
{"prompt":"Write a Redis command to get all hash fields.","completion":"HGETALL user:1"}
{"prompt":"Explain database replication lag.","completion":"Replication lag is the delay between a write on the primary database and its propagation to replicas."}
{"prompt":"Write a SQL query to find employees by department and salary.","completion":"SELECT * FROM employees WHERE dept_id = 2 AND salary > 60000;"}
{"prompt":"What is a database temporary table?","completion":"A temporary table exists only for a session, used for intermediate results in complex queries."}
{"prompt":"Write a Neo4j query to find nodes by relationship type.","completion":"MATCH (n)-[:WORKS_IN]->(m) RETURN n, m;"}
{"prompt":"How to use UPPER in SQL?","completion":"SELECT UPPER(name) AS uppercase_name FROM employees;"}
{"prompt":"Write a SQL query to find employees by performance rating.","completion":"SELECT * FROM employees WHERE performance_rating >= 4;"}
{"prompt":"How to use $regex in MongoDB?","completion":"db.collection.find({ name: { $regex: '^J.*', $options: 'i' } });"}
{"prompt":"What is a database index rebuild?","completion":"An index rebuild reorganizes or recreates an index to reduce fragmentation and improve performance."}
{"prompt":"Write a Redis command to expire a sorted set.","completion":"ZADD mysortedset 10 'value' EX 3600"}
{"prompt":"Explain database consistency models.","completion":"Consistency models define data consistency guarantees, like strong (immediate) or eventual (delayed) consistency."}
{"prompt":"Write a SQL query to find employees by job role.","completion":"SELECT * FROM employees WHERE job_role = 'Analyst';"}
{"prompt":"What is a database event scheduler?","completion":"An event scheduler automates tasks in a database, like running queries at set times."}
{"prompt":"Write a Neo4j query to find nodes with high degree.","completion":"MATCH (n) WHERE size((n)--()) > 5 RETURN n;"}
{"prompt":"How to use LOWER in SQL?","completion":"SELECT LOWER(name) AS lowercase_name FROM employees;"}
{"prompt":"What's the best way to stay healthy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by region.","completion":"SELECT * FROM employees WHERE region = 'West';"}
{"prompt":"How to use $merge in MongoDB?","completion":"db.collection.aggregate([{ $match: { status: 'active' } }, { $merge: { into: 'targetCollection', whenMatched: 'merge', whenNotMatched: 'insert' } }]);"}
{"prompt":"Explain database indexing trade-offs.","completion":"Indexes speed up reads but slow writes, increase storage, and require maintenance."}
{"prompt":"Write a Redis command to get random set member.","completion":"SRANDMEMBER myset"}
{"prompt":"What is a database cursor in MongoDB?","completion":"A cursor in MongoDB allows iterating over query results, fetching documents in batches."}
{"prompt":"Write a SQL query to find employees by team.","completion":"SELECT * FROM employees WHERE team_id = 101;"}
{"prompt":"How to use $first in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$department', firstEmployee: { $first: '$name' } } }]);"}
{"prompt":"Explain database encryption.","completion":"Database encryption protects data at rest or in transit using cryptographic algorithms."}
{"prompt":"Write a Neo4j query to find isolated nodes.","completion":"MATCH (n) WHERE NOT (n)--() RETURN n;"}
{"prompt":"How to use CURRENT_DATE in SQL?","completion":"SELECT CURRENT_DATE AS today FROM employees;"}
{"prompt":"How to learn machine learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by experience level.","completion":"SELECT * FROM employees WHERE experience_years > 5;"}
{"prompt":"How to use $last in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$department', lastEmployee: { $last: '$name' } } }]);"}
{"prompt":"What is a database log file?","completion":"A log file records database operations for recovery, auditing, or replication purposes."}
{"prompt":"Write a Redis command to get list range.","completion":"LRANGE mylist 0 10"}
{"prompt":"Explain database connection timeout.","completion":"A connection timeout limits the time a client waits to establish a database connection."}
{"prompt":"Write a SQL query to find employees by contract type.","completion":"SELECT * FROM employees WHERE contract_type = 'Full-Time';"}
{"prompt":"How to use $arrayElemAt in MongoDB?","completion":"db.collection.aggregate([{ $project: { firstItem: { $arrayElemAt: ['$items', 0] } } }]);"}
{"prompt":"What is a database role-based access control?","completion":"Role-based access control assigns permissions to roles, which users inherit, simplifying access management."}
{"prompt":"Write a Neo4j query to find nodes by label.","completion":"MATCH (n:Employee) RETURN n;"}
{"prompt":"How to use GETDATE in SQL?","completion":"SELECT GETDATE() AS current_time FROM employees;"}
{"prompt":"What's the best way to plan a vacation?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by office location.","completion":"SELECT * FROM employees WHERE office_location = 'Downtown';"}
{"prompt":"How to use $concat in MongoDB?","completion":"db.collection.aggregate([{ $project: { fullName: { $concat: ['$firstName', ' ', '$lastName'] } } }]);"}
{"prompt":"Explain database transaction rollback.","completion":"A rollback undoes changes in a transaction if it fails, ensuring data consistency."}
{"prompt":"Write a Redis command to get all sorted set members.","completion":"ZRANGE mysortedset 0 -1"}
{"prompt":"What is a database index hint?","completion":"An index hint forces a query to use a specific index, overriding the optimizer’s choice."}
{"prompt":"Write a SQL query to find employees by certification.","completion":"SELECT * FROM employees WHERE certifications LIKE '%Oracle%';"}
{"prompt":"How to use $subtract in MongoDB?","completion":"db.collection.aggregate([{ $project: { difference: { $subtract: ['$price', '$discount'] } } }]);"}
{"prompt":"Explain database query plan.","completion":"A query plan outlines how a database executes a query, including index usage and join order."}
{"prompt":"Write a Neo4j query to find nodes by property range.","completion":"MATCH (n:Person) WHERE n.age BETWEEN 25 AND 35 RETURN n;"}
{"prompt":"How to use LEN in SQL?","completion":"SELECT name, LEN(name) AS name_length FROM employees;"}
{"prompt":"Write a SQL query to find employees by shift.","completion":"SELECT * FROM employees WHERE shift = 'Night';"}
{"prompt":"How to use $multiply in MongoDB?","completion":"db.collection.aggregate([{ $project: { total: { $multiply: ['$quantity', '$price'] } } }]);"}
{"prompt":"What is a database lock escalation?","completion":"Lock escalation converts fine-grained locks to coarser ones to reduce overhead, potentially causing contention."}
{"prompt":"Write a Redis command to get set cardinality.","completion":"SCARD myset"}
{"prompt":"Explain database warm standby.","completion":"A warm standby is a partially active replica that can take over quickly if the primary fails."}
{"prompt":"Write a SQL query to find employees by supervisor.","completion":"SELECT * FROM employees WHERE supervisor_id = 5;"}
{"prompt":"How to use $divide in MongoDB?","completion":"db.collection.aggregate([{ $project: { ratio: { $divide: ['$total', '$count'] } } }]);"}
{"prompt":"What is a database hot backup?","completion":"A hot backup copies a database while it’s running, ensuring availability during the process."}
{"prompt":"Write a Neo4j query to find nodes by relationship count.","completion":"MATCH (n:Person) WHERE size((n)-[:KNOWS]->()) > 3 RETURN n;"}
{"prompt":"How to use CAST in SQL?","completion":"SELECT CAST(salary AS VARCHAR) AS salary_string FROM employees;"}
{"prompt":"Write a SQL query to find employees by status.","completion":"SELECT * FROM employees WHERE status = 'Active';"}
{"prompt":"How to use $mod in MongoDB?","completion":"db.collection.find({ value: { $mod: [5, 0] } });"}
{"prompt":"Explain database index selectivity.","completion":"Index selectivity measures how unique index values are, with higher selectivity improving query performance."}
{"prompt":"Write a Redis command to get hash field count.","completion":"HLEN user:1"}
{"prompt":"Write a SQL query to find employees by bonus eligibility.","completion":"SELECT * FROM employees WHERE bonus_eligible = 1;"}
{"prompt":"How to use $add in MongoDB?","completion":"db.collection.aggregate([{ $project: { total: { $add: ['$price', '$tax'] } } }]);"}
{"prompt":"Explain database query optimization techniques.","completion":"Techniques include adding indexes, rewriting queries, analyzing plans with EXPLAIN, and caching results."}
{"prompt":"Write a Neo4j query to find nodes by property existence.","completion":"MATCH (n:Person) WHERE exists(n.email) RETURN n;"}
{"prompt":"How to use REPLACE in SQL?","completion":"SELECT REPLACE(name, 'Jr', 'Junior') AS updated_name FROM employees;"}
{"prompt":"What's the best way to learn art?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by termination date.","completion":"SELECT * FROM employees WHERE termination_date IS NOT NULL;"}
{"prompt":"How to use $gte in MongoDB?","completion":"db.collection.find({ age: { $gte: 25 } });"}
{"prompt":"What is a database transaction log backup?","completion":"A transaction log backup copies the log to restore transactions since the last full backup."}
{"prompt":"Write a Redis command to get list elements by index.","completion":"LINDEX mylist 0"}
{"prompt":"Explain database index maintenance.","completion":"Index maintenance involves rebuilding or reorganizing indexes to reduce fragmentation and optimize performance."}
{"prompt":"Write a SQL query to find employees by training completion.","completion":"SELECT * FROM employees WHERE training_completed = 1;"}
{"prompt":"How to use $lte in MongoDB?","completion":"db.collection.find({ age: { $lte: 35 } });"}
{"prompt":"What is a database recovery point objective?","completion":"Recovery Point Objective (RPO) measures acceptable data loss time between backups."}
{"prompt":"Write a Neo4j query to find nodes by label and property.","completion":"MATCH (n:Employee {department: 'IT'}) RETURN n;"}
{"prompt":"How to use CHARINDEX in SQL?","completion":"SELECT CHARINDEX('a', name) AS position FROM employees;"}
{"prompt":"Write a SQL query to find employees by gender.","completion":"SELECT * FROM employees WHERE gender = 'Female';"}
{"prompt":"How to use $ne in MongoDB?","completion":"db.collection.find({ status: { $ne: 'inactive' } });"}
{"prompt":"Explain database recovery time objective.","completion":"Recovery Time Objective (RTO) measures acceptable downtime for restoring a database after a failure."}
{"prompt":"Write a Redis command to get sorted set score.","completion":"ZSCORE mysortedset 'value'"}
{"prompt":"What is a database baseline?","completion":"A database baseline is a performance snapshot used to compare and optimize system performance."}
{"prompt":"Write a SQL query to find employees by nationality.","completion":"SELECT * FROM employees WHERE nationality = 'Canadian';"}
{"prompt":"How to use $in in MongoDB?","completion":"db.collection.find({ category: { $in: ['A', 'B'] } });"}
{"prompt":"Explain database data integrity.","completion":"Data integrity ensures accuracy, consistency, and reliability of data through constraints and validation."}
{"prompt":"Write a Neo4j query to find nodes by multiple properties.","completion":"MATCH (n:Person {city: 'London', age: 30}) RETURN n;"}
{"prompt":"How to use FORMAT in SQL?","completion":"SELECT FORMAT(salary, 'C') AS formatted_salary FROM employees;"}
{"prompt":"What's the best way to learn music?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by hire quarter.","completion":"SELECT * FROM employees WHERE DATEPART(QUARTER, hire_date) = 1;"}
{"prompt":"How to use $not in MongoDB?","completion":"db.collection.find({ age: { $not: { $gt: 30 } } });"}
{"prompt":"What is a database audit trail?","completion":"An audit trail records database activities for security, compliance, and troubleshooting."}
{"prompt":"Write a Redis command to get all list elements.","completion":"LRANGE mylist 0 -1"}
{"prompt":"Explain database connection retry.","completion":"Connection retry attempts to reconnect to a database after a failed attempt, improving reliability."}
{"prompt":"Write a SQL query to find employees by performance score.","completion":"SELECT * FROM employees WHERE performance_score >= 90;"}
{"prompt":"How to use $slice in MongoDB?","completion":"db.collection.find({}, { items: { $slice: [1, 3] } });"}
{"prompt":"What is a database logical backup?","completion":"A logical backup exports data as SQL statements or documents, useful for migration or restoration."}
{"prompt":"Write a Neo4j query to find nodes by relationship depth.","completion":"MATCH (n:Person)-[:KNOWS*1..3]->(m) RETURN n, m;"}
{"prompt":"How to use LEFT in SQL?","completion":"SELECT LEFT(name, 5) AS short_name FROM employees;"}
{"prompt":"How to improve public speaking?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by work location.","completion":"SELECT * FROM employees WHERE work_location = 'Remote';"}
{"prompt":"How to use $arrayToObject in MongoDB?","completion":"db.collection.aggregate([{ $project: { obj: { $arrayToObject: [['k', 'v']] } } }]);"}
{"prompt":"Explain database snapshot isolation.","completion":"Snapshot isolation provides a transaction with a consistent data view, preventing dirty reads."}
{"prompt":"Write a Redis command to get sorted set range by score.","completion":"ZRANGEBYSCORE mysortedset 0 100"}
{"prompt":"What is a database physical backup?","completion":"A physical backup copies raw database files, ensuring an exact replica for recovery."}
{"prompt":"Write a SQL query to find employees by salary percentile.","completion":"SELECT * FROM employees WHERE salary > (SELECT PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY salary) FROM employees);"}
{"prompt":"How to use $objectToArray in MongoDB?","completion":"db.collection.aggregate([{ $project: { arr: { $objectToArray: '$obj' } } }]);"}
{"prompt":"Explain database index bloat.","completion":"Index bloat occurs when indexes grow excessively due to updates or deletes, reducing efficiency."}
{"prompt":"Write a Neo4j query to find nodes by property pattern.","completion":"MATCH (n:Person) WHERE n.name =~ 'A.*' RETURN n;"}
{"prompt":"How to use RIGHT in SQL?","completion":"SELECT RIGHT(name, 5) AS last_chars FROM employees;"}
{"prompt":"What's the best way to learn physics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by employment type.","completion":"SELECT * FROM employees WHERE employment_type = 'Contract';"}
{"prompt":"What is a database materialized path?","completion":"A materialized path stores hierarchical data as a path string, simplifying tree queries."}
{"prompt":"Write a Redis command to get sorted set rank.","completion":"ZRANK mysortedset 'value'"}
{"prompt":"Explain database query timeout.","completion":"A query timeout limits the execution time of a query, preventing long-running operations."}
{"prompt":"Write a SQL query to find employees by onboarding status.","completion":"SELECT * FROM employees WHERE onboarding_status = 'Completed';"}
{"prompt":"How to use $ifNull in MongoDB?","completion":"db.collection.aggregate([{ $project: { name: { $ifNull: ['$name', 'Unknown'] } } }]);"}
{"prompt":"What is a database index skip scan?","completion":"An index skip scan uses a composite index’s leading column selectively, skipping non-relevant values."}
{"prompt":"Write a Neo4j query to find nodes by property null.","completion":"MATCH (n:Person) WHERE n.email IS NULL RETURN n;"}
{"prompt":"How to use TRIM in SQL?","completion":"SELECT TRIM(name) AS trimmed_name FROM employees;"}
{"prompt":"How to train for a marathon?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department size.","completion":"SELECT e.* FROM employees e JOIN (SELECT dept_id, COUNT(*) AS size FROM employees GROUP BY dept_id HAVING COUNT(*) > 10) d ON e.dept_id = d.dept_id;"}
{"prompt":"How to use $filter in MongoDB?","completion":"db.collection.aggregate([{ $project: { items: { $filter: { input: '$items', as: 'item', cond: { $gt: ['$$item', 10] } } } } }]);"}
{"prompt":"Explain database index cardinality.","completion":"Index cardinality is the number of unique values in an index, affecting its selectivity and efficiency."}
{"prompt":"Write a Redis command to get hash fields by pattern.","completion":"HKEYS user:1"}
{"prompt":"What is a database incremental backup?","completion":"An incremental backup copies only data changed since the last backup, reducing time and storage."}
{"prompt":"Write a SQL query to find employees by project count.","completion":"SELECT e.name, COUNT(p.id) AS project_count FROM employees e LEFT JOIN projects p ON e.id = p.employee_id GROUP BY e.name HAVING COUNT(p.id) > 2;"}
{"prompt":"Explain database read-only mode.","completion":"Read-only mode restricts a database to read operations, useful for maintenance or standby replicas."}
{"prompt":"Write a Neo4j query to find nodes by relationship direction.","completion":"MATCH (n)-[:KNOWS]->(m) RETURN n, m;"}
{"prompt":"How to use PATINDEX in SQL?","completion":"SELECT PATINDEX('%[0-9]%', name) AS number_position FROM employees;"}
{"prompt":"What's the best way to learn cooking?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by salary increment.","completion":"SELECT * FROM employees WHERE salary_increment > 0.1;"}
{"prompt":"What is a database index merge?","completion":"An index merge combines multiple indexes to satisfy a query, potentially less efficient than a single index."}
{"prompt":"Write a Redis command to get sorted set reverse range.","completion":"ZREVRANGE mysortedset 0 -1"}
{"prompt":"Explain database connection throttling.","completion":"Connection throttling limits the number of active database connections to prevent overload."}
{"prompt":"Write a SQL query to find employees by leave balance.","completion":"SELECT * FROM employees WHERE leave_balance > 20;"}
{"prompt":"How to use $reduce in MongoDB?","completion":"db.collection.aggregate([{ $project: { total: { $reduce: { input: '$numbers', initialValue: 0, in: { $add: ['$$value', '$$this'] } } } } }]);"}
{"prompt":"What is a database consistency check?","completion":"A consistency check verifies data integrity, ensuring no corruption or constraint violations."}
{"prompt":"Write a Neo4j query to find nodes by property type.","completion":"MATCH (n:Person) WHERE n.age IS NOT NULL RETURN n;"}
{"prompt":"How to use STUFF in SQL?","completion":"SELECT STUFF(name, 2, 3, 'X') AS modified_name FROM employees;"}
{"prompt":"Write a SQL query to find employees by attendance.","completion":"SELECT * FROM employees WHERE attendance_percentage > 95;"}
{"prompt":"How to use $switch in MongoDB?","completion":"db.collection.aggregate([{ $project: { status: { $switch: { branches: [{ case: { $gte: ['$score', 90] }, then: 'A' }], default: 'B' } } } }]);"}
{"prompt":"Explain database index rebuild frequency.","completion":"Index rebuild frequency depends on update frequency and fragmentation, typically monthly or as needed."}
{"prompt":"Write a Redis command to get sorted set count.","completion":"ZCOUNT mysortedset -inf +inf"}
{"prompt":"What is a database differential backup?","completion":"A differential backup copies data changed since the last full backup, balancing speed and size."}
{"prompt":"Write a SQL query to find employees by promotion date.","completion":"SELECT * FROM employees WHERE promotion_date >= '2023-01-01';"}
{"prompt":"How to use $strLenCP in MongoDB?","completion":"db.collection.aggregate([{ $project: { nameLength: { $strLenCP: '$name' } } }]);"}
{"prompt":"Explain database connection pooling benefits.","completion":"Connection pooling reduces overhead by reusing connections, improving performance and scalability."}
{"prompt":"Write a Neo4j query to find nodes by property regex.","completion":"MATCH (n:Person) WHERE n.name =~ '.*son$' RETURN n;"}
{"prompt":"How to use CONVERT in SQL?","completion":"SELECT CONVERT(VARCHAR, hire_date, 101) AS formatted_date FROM employees;"}
{"prompt":"What's the best way to learn astronomy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by role level.","completion":"SELECT * FROM employees WHERE role_level = 'Senior';"}
{"prompt":"How to use $toUpper in MongoDB?","completion":"db.collection.aggregate([{ $project: { upperName: { $toUpper: '$name' } } }]);"}
{"prompt":"What is a database index rebuild cost?","completion":"Rebuilding indexes consumes CPU, memory, and I/O, potentially slowing other operations."}
{"prompt":"Write a Redis command to get list left pop.","completion":"LPOP mylist"}
{"prompt":"Explain database transaction durability.","completion":"Durability ensures committed transactions are permanently saved, even after a system failure."}
{"prompt":"Write a SQL query to find employees by training hours.","completion":"SELECT * FROM employees WHERE training_hours >= 40;"}
{"prompt":"How to use $toLower in MongoDB?","completion":"db.collection.aggregate([{ $project: { lowerName: { $toLower: '$name' } } }]);"}
{"prompt":"What is a database index scan cost?","completion":"An index scan cost depends on index size, selectivity, and disk I/O, generally lower than a table scan."}
{"prompt":"Write a Neo4j query to find nodes by relationship property.","completion":"MATCH (n)-[r:KNOWS {since: 2020}]->(m) RETURN n, m;"}
{"prompt":"How to use DATEPART in SQL?","completion":"SELECT DATEPART(year, hire_date) AS hire_year FROM employees;"}
{"prompt":"Write a SQL query to find employees by overtime hours.","completion":"SELECT * FROM employees WHERE overtime_hours > 10;"}
{"prompt":"How to use $trim in MongoDB?","completion":"db.collection.aggregate([{ $project: { trimmedName: { $trim: { input: '$name' } } } }]);"}
{"prompt":"Explain database index fragmentation impact.","completion":"Index fragmentation slows queries by increasing I/O and reducing cache efficiency."}
{"prompt":"Write a Redis command to get sorted set reverse rank.","completion":"ZREVRANK mysortedset 'value'"}
{"prompt":"What is a database transaction isolation?","completion":"Transaction isolation controls how transactions see each other’s changes, preventing issues like dirty reads."}
{"prompt":"Write a SQL query to find employees by evaluation score.","completion":"SELECT * FROM employees WHERE evaluation_score >= 85;"}
{"prompt":"How to use $ltrim in MongoDB?","completion":"db.collection.aggregate([{ $project: { trimmedName: { $ltrim: { input: '$name' } } } }]);"}
{"prompt":"Explain database backup retention policy.","completion":"A backup retention policy defines how long backups are kept, balancing storage and recovery needs."}
{"prompt":"Write a Neo4j query to find nodes by label count.","completion":"MATCH (n) WHERE size(labels(n)) > 1 RETURN n;"}
{"prompt":"How to use DATEFROMPARTS in SQL?","completion":"SELECT DATEFROMPARTS(2023, 10, 15) AS custom_date FROM employees;"}
{"prompt":"What's the best way to learn dancing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by work hours.","completion":"SELECT * FROM employees WHERE weekly_hours >= 40;"}
{"prompt":"How to use $rtrim in MongoDB?","completion":"db.collection.aggregate([{ $project: { trimmedName: { $rtrim: { input: '$name' } } } }]);"}
{"prompt":"What is a database index usage statistic?","completion":"Index usage statistics track how often an index is used, helping optimize or drop unused indexes."}
{"prompt":"Write a Redis command to get sorted set by lexicographical range.","completion":"ZRANGEBYLEX mysortedset [a [z"}
{"prompt":"Explain database transaction atomicity.","completion":"Atomicity ensures a transaction is treated as a single, indivisible unit, fully completing or failing."}
{"prompt":"Write a SQL query to find employees by project deadline.","completion":"SELECT e.name FROM employees e JOIN projects p ON e.id = p.employee_id WHERE p.deadline < '2024-01-01';"}
{"prompt":"What is a database connection leak?","completion":"A connection leak occurs when connections aren’t closed, exhausting database resources."}
{"prompt":"Write a Neo4j query to find nodes by relationship absence.","completion":"MATCH (n:Person) WHERE NOT (n)-[:KNOWS]->() RETURN n;"}
{"prompt":"How to use EOMONTH in SQL?","completion":"SELECT EOMONTH(hire_date) AS month_end FROM employees;"}
{"prompt":"Write a SQL query to find employees by vacation days.","completion":"SELECT * FROM employees WHERE vacation_days >= 15;"}
{"prompt":"Explain database index cost-benefit analysis.","completion":"Index cost-benefit analysis weighs faster reads against slower writes, storage, and maintenance overhead."}
{"prompt":"Write a Redis command to get list right pop.","completion":"RPOP mylist"}
{"prompt":"What is a database transaction consistency?","completion":"Consistency ensures transactions bring the database to a valid state, adhering to constraints."}
{"prompt":"Write a SQL query to find employees by team lead.","completion":"SELECT * FROM employees WHERE team_lead_id = 7;"}
{"prompt":"How to use $indexOfCP in MongoDB?","completion":"db.collection.aggregate([{ $project: { index: { $indexOfCP: ['$name', 'a'] } } }]);"}
{"prompt":"Explain database index selectivity ratio.","completion":"Selectivity ratio measures unique index values relative to total rows, with higher ratios improving performance."}
{"prompt":"Write a Neo4j query to find nodes by relationship property range.","completion":"MATCH (n)-[r:KNOWS]->(m) WHERE r.since >= 2020 RETURN n, m;"}
{"prompt":"How to use GETUTCDATE in SQL?","completion":"SELECT GETUTCDATE() AS utc_time FROM employees;"}
{"prompt":"What's the best way to learn writing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by contract end date.","completion":"SELECT * FROM employees WHERE contract_end_date <= '2023-12-31';"}
{"prompt":"What is a database index rebuild trigger?","completion":"An index rebuild trigger is a condition, like fragmentation level, prompting an index rebuild."}
{"prompt":"Write a Redis command to get sorted set range with scores.","completion":"ZRANGE mysortedset 0 -1 WITHSCORES"}
{"prompt":"Explain database transaction log truncation.","completion":"Log truncation removes old transaction log entries to free space, typically after backups."}
{"prompt":"Write a SQL query to find employees by salary change date.","completion":"SELECT * FROM employees WHERE salary_change_date >= '2023-06-01';"}
{"prompt":"What is a database index drop impact?","completion":"Dropping an index speeds up writes but may slow queries that relied on it."}
{"prompt":"Write a Neo4j query to find nodes by property comparison.","completion":"MATCH (n:Person) WHERE n.age > n.years_of_service RETURN n;"}
{"prompt":"How to use ISDATE in SQL?","completion":"SELECT ISDATE(hire_date) AS is_valid_date FROM employees;"}
{"prompt":"Write a SQL query to find employees by award received.","completion":"SELECT * FROM employees WHERE awards_received > 0;"}
{"prompt":"How to use $toInt in MongoDB?","completion":"db.collection.aggregate([{ $project: { intValue: { $toInt: '$stringValue' } } }]);"}
{"prompt":"Explain database connection retry delay.","completion":"Retry delay is the wait time between connection attempts, balancing responsiveness and server load."}
{"prompt":"Write a Redis command to get set intersection.","completion":"SINTER set1 set2"}
{"prompt":"What is a database index statistics update?","completion":"An index statistics update refreshes metadata about data distribution, aiding query optimization."}
{"prompt":"Write a SQL query to find employees by remote status.","completion":"SELECT * FROM employees WHERE is_remote = 1;"}
{"prompt":"How to use $toDouble in MongoDB?","completion":"db.collection.aggregate([{ $project: { doubleValue: { $toDouble: '$stringValue' } } }]);"}
{"prompt":"Explain database transaction log replay.","completion":"Log replay applies transaction log entries to restore a database to a specific state."}
{"prompt":"Write a Neo4j query to find nodes by property uniqueness.","completion":"MATCH (n:Person) WHERE size([(m:Person) WHERE m.email = n.email | m]) = 1 RETURN n;"}
{"prompt":"How to use SYSDATETIME in SQL?","completion":"SELECT SYSDATETIME() AS system_time FROM employees;"}
{"prompt":"What's the best way to learn psychology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by relocation status.","completion":"SELECT * FROM employees WHERE relocation_status = 'Eligible';"}
{"prompt":"How to use $toString in MongoDB?","completion":"db.collection.aggregate([{ $project: { stringValue: { $toString: '$number' } } }]);"}
{"prompt":"What is a database index creation time?","completion":"Index creation time depends on table size, data complexity, and server resources."}
{"prompt":"Write a Redis command to get set union.","completion":"SUNION set1 set2"}
{"prompt":"Explain database connection keep-alive.","completion":"Keep-alive maintains open database connections to reduce reconnection overhead."}
{"prompt":"Write a SQL query to find employees by mentorship role.","completion":"SELECT * FROM employees WHERE is_mentor = 1;"}
{"prompt":"How to use $toBool in MongoDB?","completion":"db.collection.aggregate([{ $project: { boolValue: { $toBool: '$value' } } }]);"}
{"prompt":"What is a database index rebuild downtime?","completion":"Index rebuild downtime is the period when queries may slow due to resource-intensive rebuilds."}
{"prompt":"Write a Neo4j query to find nodes by property sort.","completion":"MATCH (n:Person) RETURN n ORDER BY n.age DESC;"}
{"prompt":"How to use DATEADD in SQL?","completion":"SELECT DATEADD(month, 1, hire_date) AS next_month FROM employees;"}
{"prompt":"How to learn architecture?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by feedback score.","completion":"SELECT * FROM employees WHERE feedback_score >= 4.5;"}
{"prompt":"How to use $toDate in MongoDB?","completion":"db.collection.aggregate([{ $project: { dateValue: { $toDate: '$stringDate' } } }]);"}
{"prompt":"Explain database index selectivity impact.","completion":"High selectivity improves query performance by narrowing down rows efficiently."}
{"prompt":"Write a Redis command to get set difference.","completion":"SDIFF set1 set2"}
{"prompt":"What is a database transaction log size?","completion":"Transaction log size depends on activity volume and retention, impacting storage needs."}
{"prompt":"Write a SQL query to find employees by department change.","completion":"SELECT * FROM employees WHERE dept_change_date IS NOT NULL;"}
{"prompt":"How to use $toObjectId in MongoDB?","completion":"db.collection.aggregate([{ $project: { objId: { $toObjectId: '$stringId' } } }]);"}
{"prompt":"Explain database connection pooling size.","completion":"Pooling size determines the number of reusable connections, balancing performance and resources."}
{"prompt":"Write a Neo4j query to find nodes by label pattern.","completion":"MATCH (n) WHERE 'Person' IN labels(n) RETURN n;"}
{"prompt":"How to use DATENAME in SQL?","completion":"SELECT DATENAME(weekday, hire_date) AS day_name FROM employees;"}
{"prompt":"What's the best way to learn biology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by bonus amount.","completion":"SELECT * FROM employees WHERE bonus_amount > 1000;"}
{"prompt":"How to select distinct values in SQL?","completion":"SELECT DISTINCT column_name FROM table_name;"}
{"prompt":"Explain the difference between SQL and NoSQL databases","completion":"SQL databases are relational, using structured schemas and SQL for queries, while NoSQL databases are non-relational, supporting flexible schemas for unstructured data like documents or graphs."}
{"prompt":"How to create a table in SQL?","completion":"CREATE TABLE table_name (id INT PRIMARY KEY, name VARCHAR(50), salary DECIMAL(10,2));"}
{"prompt":"What's a primary key in SQL?","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicate or null values."}
{"prompt":"Write a Redis command to set a key-value pair","completion":"SET user:100 name 'John Doe';"}
{"prompt":"How to perform an inner join in SQL?","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Write a MongoDB query to update a document","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { name: 'New Name' } });"}
{"prompt":"Explain indexing in databases","completion":"Indexing creates a data structure to speed up data retrieval, like a book index, but may slow writes due to maintenance."}
{"prompt":"Write a SQL query to group employees by department","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"How to insert a document in MongoDB?","completion":"db.collection.insertOne({ name: 'Alice', age: 25 });"}
{"prompt":"What are transactions in SQL?","completion":"Transactions ensure ACID properties (Atomicity, Consistency, Isolation, Durability) using BEGIN, COMMIT, and ROLLBACK."}
{"prompt":"Write a Neo4j query to find all nodes with a specific property","completion":"MATCH (n:Person {name: 'John'}) RETURN n;"}
{"prompt":"How to delete a record in SQL?","completion":"DELETE FROM table_name WHERE id = 123;"}
{"prompt":"Explain CAP theorem for NoSQL databases","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance at once."}
{"prompt":"Write a Cassandra query to insert data","completion":"INSERT INTO keyspace.table (id, name) VALUES (1, 'Alice');"}
{"prompt":"What's a foreign key in SQL?","completion":"A foreign key links a column in one table to a primary key in another, enforcing referential integrity."}
{"prompt":"Write a SQL query to find the top 5 highest-paid employees","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"}
{"prompt":"Explain normalization in SQL","completion":"Normalization reduces data redundancy through stages (1NF, 2NF, 3NF), ensuring data integrity."}
{"prompt":"Write a Redis command to add to a list","completion":"LPUSH mylist 'value';"}
{"prompt":"How to perform a left join in SQL?","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What's sharding in NoSQL?","completion":"Sharding distributes data across multiple servers to improve scalability and performance."}
{"prompt":"Write a Neo4j query to find relationships","completion":"MATCH (n)-[r:KNOWS]->(m) RETURN n, r, m;"}
{"prompt":"How to update multiple rows in SQL?","completion":"UPDATE table_name SET column = value WHERE condition;"}
{"prompt":"What's a document store in NoSQL?","completion":"A document store, like MongoDB, stores data as JSON-like documents with flexible schemas."}
{"prompt":"Write a SQL query with a subquery","completion":"SELECT * FROM employees WHERE id IN (SELECT id FROM departments WHERE location = 'NY');"}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.collection.aggregate([{ $lookup: { from: 'other', localField: 'id', foreignField: 'id', as: 'joined' } }]);"}
{"prompt":"Explain ACID properties","completion":"ACID ensures reliable database transactions: Atomicity (all or nothing), Consistency (valid state), Isolation (independent transactions), Durability (committed changes persist)."}
{"prompt":"Write a Redis command for a sorted set","completion":"ZADD ranking 100 'player1';"}
{"prompt":"How to create a view in SQL?","completion":"CREATE VIEW view_name AS SELECT column FROM table WHERE condition;"}
{"prompt":"What's a graph database?","completion":"A graph database, like Neo4j, stores data as nodes and relationships for complex, interconnected data."}
{"prompt":"Write a Cassandra query to select data","completion":"SELECT * FROM keyspace.table WHERE id = 1;"}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze execution plans, and limit result sets."}
{"prompt":"What's MongoDB aggregation?","completion":"Aggregation processes data through stages like $match, $group, $sort to transform and analyze documents."}
{"prompt":"Write a SQL query for a full outer join","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to set expiration in Redis?","completion":"SET key value EX 3600; // Expires in 1 hour"}
{"prompt":"Explain denormalization in NoSQL","completion":"Denormalization embeds related data in a single document to optimize read performance, unlike SQL's normalized tables."}
{"prompt":"Write a Neo4j query for shortest path","completion":"MATCH p=shortestPath((start:Node)-[*]-(end:Node)) RETURN p;"}
{"prompt":"How to use HAVING in SQL?","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"Write a MongoDB query for text search","completion":"db.collection.find({ $text: { $search: 'keyword' } });"}
{"prompt":"What's a Redis transaction?","completion":"Use MULTI, followed by commands, then EXEC to execute atomically."}
{"prompt":"Explain NoSQL consistency models","completion":"NoSQL databases offer eventual consistency (data syncs over time) or strong consistency (immediate sync), balancing CAP theorem trade-offs."}
{"prompt":"What's blockchain?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with CASE statement","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"How to bulk insert in MongoDB?","completion":"db.collection.insertMany([{ doc1 }, { doc2 }]);"}
{"prompt":"What are SQL constraints?","completion":"Constraints enforce rules: PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL, CHECK."}
{"prompt":"Write a Redis pub/sub command","completion":"PUBLISH channel 'message'; SUBSCRIBE channel;"}
{"prompt":"How to create a secondary index in Cassandra?","completion":"CREATE INDEX ON keyspace.table (column);"}
{"prompt":"What's a SQL window function?","completion":"Window functions perform calculations across rows, e.g., ROW_NUMBER() OVER (PARTITION BY column ORDER BY other_column);"}
{"prompt":"Write a MongoDB query with $group","completion":"db.collection.aggregate([{ $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"Write a SQL query to find duplicate records","completion":"SELECT column, COUNT(*) FROM table GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"How to use Redis hashes?","completion":"HMSET user:100 name 'John' age 30;"}
{"prompt":"Explain joins in SQL","completion":"Joins combine tables: INNER (matching rows), LEFT (all from left table), RIGHT, FULL OUTER."}
{"prompt":"Write a Neo4j query to create a node","completion":"CREATE (n:Person {name: 'Alice', age: 25});"}
{"prompt":"What's a MongoDB replica set?","completion":"A replica set is a group of mongod instances maintaining the same data for redundancy and failover."}
{"prompt":"How to alter a table in SQL?","completion":"ALTER TABLE table_name ADD column_name TYPE;"}
{"prompt":"Write a Cassandra batch statement","completion":"BEGIN BATCH INSERT INTO table (id, name) VALUES (1, 'Alice'); UPDATE table SET name = 'Bob' WHERE id = 2; APPLY BATCH;"}
{"prompt":"What's eventual consistency?","completion":"Eventual consistency means data updates propagate across nodes over time, prioritizing availability in NoSQL systems."}
{"prompt":"How to perform geospatial queries in MongoDB?","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"Explain triggers in PostgreSQL","completion":"Triggers execute functions automatically on events like INSERT. Example: CREATE TRIGGER name BEFORE INSERT ON table FOR EACH ROW EXECUTE FUNCTION func();"}
{"prompt":"Write a Redis command for sorted set range","completion":"ZRANGE ranking 0 -1 WITHSCORES;"}
{"prompt":"How to pivot data in SQL?","completion":"Use CASE or PIVOT: SELECT * FROM (SELECT column FROM table) PIVOT (SUM(value) FOR category IN ('cat1', 'cat2'));"}
{"prompt":"What's a column-family database?","completion":"A column-family database, like Cassandra, stores data in columns instead of rows, optimized for wide rows and analytics."}
{"prompt":"Write a SQL query with date functions","completion":"SELECT CURRENT_DATE, DATE_ADD(date_column, INTERVAL 1 DAY) FROM table;"}
{"prompt":"How to use MongoDB change streams?","completion":"const changeStream = db.collection.watch(); for await (const change of changeStream) { console.log(change); }"}
{"prompt":"What's a SQL view used for?","completion":"A view is a virtual table based on a query, simplifying complex queries or restricting data access."}
{"prompt":"Write a Neo4j query to delete a relationship","completion":"MATCH (n)-[r:REL]->(m) DELETE r;"}
{"prompt":"How to use JSONB in PostgreSQL?","completion":"SELECT * FROM table WHERE jsonb_column @> '{\"key\": \"value\"}';"}
{"prompt":"Explain Redis persistence","completion":"Redis supports RDB snapshots and AOF logs to save data to disk for durability."}
{"prompt":"Write a SQL query for self-join","completion":"SELECT a.name, b.name FROM employees a JOIN employees b ON a.manager_id = b.id;"}
{"prompt":"How to scale MongoDB?","completion":"Use sharding to distribute data and replica sets for high availability."}
{"prompt":"What's a composite key in SQL?","completion":"A composite key uses multiple columns to uniquely identify records, e.g., PRIMARY KEY (col1, col2)."}
{"prompt":"Write a Cassandra query for time-series data","completion":"CREATE TABLE events (sensor_id UUID, time TIMESTAMP, value DOUBLE, PRIMARY KEY (sensor_id, time));"}
{"prompt":"How to use full-text search in PostgreSQL?","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('term');"}
{"prompt":"What's a Redis pipeline?","completion":"Pipelines batch multiple commands to reduce round-trip time, e.g., client.pipeline().set('key', 'value').get('key').execute();"}
{"prompt":"Write a SQL query with multiple conditions","completion":"SELECT * FROM employees WHERE salary > 50000 AND department = 'IT';"}
{"prompt":"Explain SQL injection","completion":"SQL injection is a security vulnerability where malicious SQL code is inserted into queries, mitigated by prepared statements."}
{"prompt":"Write a Neo4j query to find connected nodes","completion":"MATCH (n:Node)-[:REL*1..3]->(m) RETURN n, m;"}
{"prompt":"How to use IN operator in SQL?","completion":"SELECT * FROM table WHERE column IN ('value1', 'value2');"}
{"prompt":"What's a MongoDB capped collection?","completion":"A capped collection has a fixed size, automatically overwriting old data when full, ideal for logs."}
{"prompt":"Write a Redis command to increment a counter","completion":"INCR counter;"}
{"prompt":"How to create a materialized view in PostgreSQL?","completion":"CREATE MATERIALIZED VIEW view_name AS SELECT * FROM table WITH DATA;"}
{"prompt":"Explain eventual vs strong consistency","completion":"Eventual consistency allows temporary data mismatches for availability; strong consistency ensures immediate data agreement."}
{"prompt":"What's digital marketing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to calculate average salary","completion":"SELECT AVG(salary) FROM employees;"}
{"prompt":"What are SQL sequences?","completion":"Sequences generate unique numbers, e.g., CREATE SEQUENCE seq_name; SELECT nextval('seq_name');"}
{"prompt":"Write a Redis command to get list length","completion":"LLEN mylist;"}
{"prompt":"What's a keyspace in Cassandra?","completion":"A keyspace is a namespace for tables, similar to a database in SQL, defining replication settings."}
{"prompt":"Write a SQL query with ORDER BY","completion":"SELECT * FROM employees ORDER BY salary DESC;"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ _id: '123' }, { $push: { array_field: 'value' } });"}
{"prompt":"Explain database partitioning","completion":"Partitioning divides a table into smaller pieces based on a key, improving performance and manageability."}
{"prompt":"What's game development?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to update a node","completion":"MATCH (n:Person {id: '123'}) SET n.name = 'Bob';"}
{"prompt":"Write a MongoDB query to count documents","completion":"db.collection.countDocuments({ condition });"}
{"prompt":"What's Redis pub/sub used for?","completion":"Pub/sub enables real-time messaging; clients subscribe to channels, and publishers send messages."}
{"prompt":"How to create a unique constraint in SQL?","completion":"ALTER TABLE table_name ADD CONSTRAINT unique_name UNIQUE (column);"}
{"prompt":"Explain NoSQL wide-column stores","completion":"Wide-column stores, like Cassandra, store data in flexible columns, optimized for large-scale analytics."}
{"prompt":"Write a SQL query for rolling window","completion":"SELECT name, AVG(salary) OVER (PARTITION BY department ORDER BY hire_date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) FROM employees;"}
{"prompt":"What's a check constraint in SQL?","completion":"A check constraint enforces a condition, e.g., CHECK (salary > 0)."}
{"prompt":"Write a Cassandra query to update data","completion":"UPDATE keyspace.table SET column = value WHERE id = 1;"}
{"prompt":"Write a Redis command to remove from a set","completion":"SREM myset 'value';"}
{"prompt":"Explain MongoDB sharding","completion":"Sharding splits data across servers using a shard key to distribute load and scale horizontally."}
{"prompt":"Write a SQL query with EXISTS","completion":"SELECT * FROM employees e WHERE EXISTS (SELECT 1 FROM departments d WHERE d.id = e.dept_id);"}
{"prompt":"How to use $unset in MongoDB?","completion":"db.collection.updateOne({ _id: '123' }, { $unset: { field: '' } });"}
{"prompt":"What's a SQL stored procedure?","completion":"A stored procedure is a precompiled set of SQL statements, e.g., CREATE PROCEDURE name AS BEGIN ... END;"}
{"prompt":"Write a Neo4j query to count relationships","completion":"MATCH ()-[r:REL]->() RETURN COUNT(r);"}
{"prompt":"How to use BETWEEN in SQL?","completion":"SELECT * FROM table WHERE column BETWEEN 10 AND 20;"}
{"prompt":"What's climate change?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to create a trigger in PostgreSQL?","completion":"CREATE TRIGGER name BEFORE INSERT ON table FOR EACH ROW EXECUTE FUNCTION func();"}
{"prompt":"Explain Redis sorted sets","completion":"Sorted sets store unique members with scores, enabling ranking, e.g., ZADD key score member."}
{"prompt":"Write a SQL query to join three tables","completion":"SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t2.id JOIN table3 t3 ON t2.id = t3.id;"}
{"prompt":"What's a partition key in Cassandra?","completion":"A partition key determines how data is distributed across nodes in a Cassandra cluster."}
{"prompt":"Write a SQL query with NULL handling","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"How to use Redis streams?","completion":"XADD mystream * field1 value1; XREAD STREAMS mystream 0;"}
{"prompt":"Explain SQL cursors","completion":"Cursors allow row-by-row processing of query results, e.g., DECLARE cursor_name CURSOR FOR SELECT ...;"}
{"prompt":"What's photography?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to merge nodes","completion":"MERGE (n:Person {id: '123'}) ON CREATE SET n.name = 'Alice';"}
{"prompt":"How to use RANK in SQL?","completion":"SELECT name, RANK() OVER (PARTITION BY department ORDER BY salary DESC) FROM employees;"}
{"prompt":"Write a MongoDB query to limit results","completion":"db.collection.find().limit(10);"}
{"prompt":"What's Redis cluster?","completion":"Redis Cluster distributes data across nodes with sharding and replication for scalability."}
{"prompt":"Write a SQL query with aggregate functions","completion":"SELECT department, SUM(salary), AVG(salary) FROM employees GROUP BY department;"}
{"prompt":"How to use $regex in MongoDB?","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"Explain SQL temporary tables","completion":"Temporary tables exist for a session, e.g., CREATE TEMPORARY TABLE temp_name (column TYPE);"}
{"prompt":"Write a Cassandra query for secondary index","completion":"SELECT * FROM keyspace.table WHERE indexed_column = 'value';"}
{"prompt":"How to use FIRST_VALUE in SQL?","completion":"SELECT name, FIRST_VALUE(salary) OVER (PARTITION BY department ORDER BY hire_date) FROM employees;"}
{"prompt":"What's AI?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find second highest salary","completion":"SELECT MAX(salary) FROM employees WHERE salary < (SELECT MAX(salary) FROM employees);"}
{"prompt":"How to use $inc in MongoDB?","completion":"db.collection.updateOne({ _id: '123' }, { $inc: { counter: 1 } });"}
{"prompt":"Explain database replication","completion":"Replication copies data across servers for redundancy and availability, common in SQL and NoSQL."}
{"prompt":"Write a Redis command to check key existence","completion":"EXISTS key;"}
{"prompt":"How to use CTE in SQL?","completion":"WITH cte AS (SELECT * FROM table WHERE condition) SELECT * FROM cte;"}
{"prompt":"What's a time-series database?","completion":"A time-series database, like InfluxDB, optimizes storage and querying of time-stamped data."}
{"prompt":"Write a Neo4j query to find all paths","completion":"MATCH p=(n:Node)-[*1..3]->(m:Node) RETURN p;"}
{"prompt":"How to use IFNULL in MySQL?","completion":"SELECT IFNULL(column, 'default') FROM table;"}
{"prompt":"Write a MongoDB query with $elemMatch","completion":"db.collection.find({ array_field: { $elemMatch: { key: 'value' } } });"}
{"prompt":"How to travel abroad?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query for cross join","completion":"SELECT * FROM table1 CROSS JOIN table2;"}
{"prompt":"How to use Redis bitmaps?","completion":"SETBIT key offset 1; GETBIT key offset;"}
{"prompt":"Explain SQL roles","completion":"Roles group permissions for easier user management, e.g., CREATE ROLE role_name; GRANT SELECT TO role_name;"}
{"prompt":"Write a Cassandra query with TTL","completion":"INSERT INTO keyspace.table (id, name) VALUES (1, 'Alice') USING TTL 86400;"}
{"prompt":"How to use $slice in MongoDB?","completion":"db.collection.find({}, { array_field: { $slice: [0, 5] } });"}
{"prompt":"What's a clustered index in SQL?","completion":"A clustered index determines the physical order of data in a table, typically on the primary key."}
{"prompt":"Write a SQL query with LAG function","completion":"SELECT name, salary, LAG(salary) OVER (PARTITION BY department ORDER BY hire_date) FROM employees;"}
{"prompt":"How to use Redis HyperLogLog?","completion":"PFADD key element; PFCOUNT key;"}
{"prompt":"Explain NoSQL key-value stores","completion":"Key-value stores, like Redis, store data as simple key-value pairs for fast retrieval."}
{"prompt":"Write a Neo4j query to delete a node","completion":"MATCH (n:Node {id: '123'}) DELETE n;"}
{"prompt":"Explain SQL schemas","completion":"Schemas organize database objects like tables, defining a namespace, e.g., CREATE SCHEMA schema_name;"}
{"prompt":"Write a Redis command to get all keys","completion":"KEYS *;"}
{"prompt":"How to use ANY in PostgreSQL?","completion":"SELECT * FROM table WHERE column = ANY (ARRAY['value1', 'value2']);"}
{"prompt":"What's a NoSQL document database?","completion":"A document database, like MongoDB, stores data as JSON/BSON documents with flexible schemas."}
{"prompt":"Write a SQL query with ROLLUP","completion":"SELECT department, SUM(salary) FROM employees GROUP BY department WITH ROLLUP;"}
{"prompt":"How to use $pull in MongoDB?","completion":"db.collection.updateOne({ _id: '123' }, { $pull: { array_field: 'value' } });"}
{"prompt":"How to garden?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Cassandra query with ALLOW FILTERING","completion":"SELECT * FROM keyspace.table WHERE column = 'value' ALLOW FILTERING;"}
{"prompt":"How to use DENSE_RANK in SQL?","completion":"SELECT name, DENSE_RANK() OVER (PARTITION BY department ORDER BY salary DESC) FROM employees;"}
{"prompt":"Write a Redis command to set multiple keys","completion":"MSET key1 value1 key2 value2;"}
{"prompt":"Explain SQL foreign key constraints","completion":"Foreign keys enforce relationships between tables, e.g., FOREIGN KEY (col) REFERENCES parent_table(col)."}
{"prompt":"Write a MongoDB query with $or","completion":"db.collection.find({ $or: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"What's a Redis module?","completion":"Modules extend Redis functionality, e.g., RediSearch for full-text search."}
{"prompt":"Write a SQL query with INTERVAL","completion":"SELECT * FROM table WHERE date_column >= NOW() - INTERVAL '1 day';"}
{"prompt":"How to use MERGE in SQL Server?","completion":"MERGE INTO target USING source ON condition WHEN MATCHED THEN UPDATE SET col = value WHEN NOT MATCHED THEN INSERT VALUES (val1, val2);"}
{"prompt":"Explain NoSQL scalability","completion":"NoSQL databases scale horizontally by adding nodes, using sharding or replication."}
{"prompt":"What's philosophy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to find node properties","completion":"MATCH (n:Person) RETURN n.name, n.age;"}
{"prompt":"How to use NVL in Oracle SQL?","completion":"SELECT NVL(column, 'default') FROM table;"}
{"prompt":"Write a MongoDB query to find by ID","completion":"db.collection.find({ _id: ObjectId('123') });"}
{"prompt":"Explain Redis data types","completion":"Redis supports strings, lists, sets, sorted sets, hashes, bitmaps, and streams."}
{"prompt":"Write a SQL query with multiple joins","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id JOIN table3 ON table2.id = table3.id;"}
{"prompt":"How to use $size in MongoDB?","completion":"db.collection.find({ array_field: { $size: 3 } });"}
{"prompt":"What's a materialized view?","completion":"A materialized view stores query results physically, updated periodically, unlike regular views."}
{"prompt":"Write a Cassandra query with IN clause","completion":"SELECT * FROM keyspace.table WHERE id IN (1, 2, 3);"}
{"prompt":"How to use LEAD in SQL?","completion":"SELECT name, salary, LEAD(salary) OVER (PARTITION BY department ORDER BY hire_date) FROM employees;"}
{"prompt":"What's cybersecurity?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Redis command to get set members","completion":"SMEMBERS myset;"}
{"prompt":"How to use SQL CASE with ORDER BY?","completion":"SELECT * FROM table ORDER BY CASE column WHEN 'value1' THEN 1 ELSE 2 END;"}
{"prompt":"Write a MongoDB query with $in","completion":"db.collection.find({ field: { $in: ['value1', 'value2'] } });"}
{"prompt":"Explain SQL transaction isolation levels","completion":"Isolation levels (Read Uncommitted, Read Committed, Repeatable Read, Serializable) control concurrent transaction behavior."}
{"prompt":"Write a Neo4j query to create a relationship","completion":"MATCH (a:Person {id: '1'}), (b:Person {id: '2'}) CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"How to use TRUNCATE in SQL?","completion":"TRUNCATE TABLE table_name;"}
{"prompt":"What's MongoDB GridFS?","completion":"GridFS stores large files by splitting them into chunks in MongoDB."}
{"prompt":"Write a SQL query with PARTITION BY","completion":"SELECT name, ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary) FROM employees;"}
{"prompt":"How to use Redis expire at?","completion":"EXPIREAT key timestamp;"}
{"prompt":"Write a Cassandra query to drop a table","completion":"DROP TABLE keyspace.table;"}
{"prompt":"How to use SQL ANY operator?","completion":"SELECT * FROM table WHERE column > ANY (SELECT value FROM other_table);"}
{"prompt":"Write a MongoDB query with $gte","completion":"db.collection.find({ age: { $gte: 18 } });"}
{"prompt":"Explain SQL table partitioning","completion":"Table partitioning splits large tables into smaller pieces based on ranges or lists for better performance."}
{"prompt":"Write a Redis command to get hash fields","completion":"HGETALL key;"}
{"prompt":"How to use DISTINCT ON in PostgreSQL?","completion":"SELECT DISTINCT ON (column) * FROM table ORDER BY column, other_column;"}
{"prompt":"What's a NoSQL graph database used for?","completion":"Graph databases, like Neo4j, are used for relationships, e.g., social networks or fraud detection."}
{"prompt":"Write a SQL query with GROUPING SETS","completion":"SELECT department, region, SUM(salary) FROM employees GROUP BY GROUPING SETS (department, region);"}
{"prompt":"How to use $addToSet in MongoDB?","completion":"db.collection.updateOne({ _id: '123' }, { $addToSet: { array_field: 'value' } });"}
{"prompt":"What's evolution?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to find common neighbors","completion":"MATCH (a:Person)-[:KNOWS]->(c)<-[:KNOWS]-(b:Person) RETURN a, b, c;"}
{"prompt":"How to use SQL ALL operator?","completion":"SELECT * FROM table WHERE column > ALL (SELECT value FROM other_table);"}
{"prompt":"Write a MongoDB query with $nin","completion":"db.collection.find({ field: { $nin: ['value1', 'value2'] } });"}
{"prompt":"Explain Redis replication","completion":"Redis replication copies data from a master to replicas for fault tolerance and read scaling."}
{"prompt":"Write a SQL query to find missing IDs","completion":"SELECT id + 1 FROM table WHERE NOT EXISTS (SELECT 1 FROM table t2 WHERE t2.id = table.id + 1);"}
{"prompt":"How to use $rename in MongoDB?","completion":"db.collection.updateMany({}, { $rename: { oldField: 'newField' } });"}
{"prompt":"What's a SQL index scan?","completion":"An index scan uses an index to retrieve rows, faster than a full table scan."}
{"prompt":"Write a Cassandra query with ORDER BY","completion":"SELECT * FROM keyspace.table WHERE id = 1 ORDER BY time DESC;"}
{"prompt":"How to use NTILE in SQL?","completion":"SELECT name, NTILE(4) OVER (PARTITION BY department ORDER BY salary) FROM employees;"}
{"prompt":"Write a Redis command to pop from a list","completion":"LPOP mylist;"}
{"prompt":"How to use SQL REPLACE function?","completion":"SELECT REPLACE(column, 'old', 'new') FROM table;"}
{"prompt":"Write a MongoDB query with $gt","completion":"db.collection.find({ price: { $gt: 100 } });"}
{"prompt":"Explain SQL query execution plan","completion":"An execution plan shows how a database executes a query, including scans, joins, and index usage."}
{"prompt":"Write a Neo4j query to find node degree","completion":"MATCH (n:Node)-[r]-() RETURN n, COUNT(r) AS degree;"}
{"prompt":"How to use SQL CURRENT_TIMESTAMP?","completion":"SELECT CURRENT_TIMESTAMP;"}
{"prompt":"What's MongoDB TTL index?","completion":"A TTL index automatically removes documents after a specified time, e.g., db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"Write a SQL query with subquery in FROM","completion":"SELECT * FROM (SELECT id, name FROM table1 WHERE condition) AS subquery;"}
{"prompt":"How to use Redis scan?","completion":"SCAN 0 MATCH pattern COUNT 100;"}
{"prompt":"What's a SQL correlated subquery?","completion":"A correlated subquery references the outer query, e.g., SELECT * FROM table t WHERE EXISTS (SELECT 1 FROM table2 t2 WHERE t2.id = t.id);"}
{"prompt":"What's a good workout routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Cassandra query with counter","completion":"UPDATE keyspace.table SET counter = counter + 1 WHERE id = 1;"}
{"prompt":"How to use SQL EXTRACT function?","completion":"SELECT EXTRACT(YEAR FROM date_column) FROM table;"}
{"prompt":"Write a MongoDB query with $lte","completion":"db.collection.find({ age: { $lte: 30 } });"}
{"prompt":"Explain SQL database roles","completion":"Roles group permissions, simplifying user management, e.g., GRANT SELECT ON table TO role_name;"}
{"prompt":"Write a Redis command to get range from sorted set","completion":"ZRANGEBYSCORE key min max;"}
{"prompt":"How to use SQL OVERLAPS operator?","completion":"SELECT * FROM table WHERE (start_date, end_date) OVERLAPS (DATE '2023-01-01', DATE '2023-12-31');"}
{"prompt":"What's a NoSQL key-value database?","completion":"A key-value database, like Redis, stores data as key-value pairs for fast, simple access."}
{"prompt":"Write a SQL query with CUBE","completion":"SELECT department, region, SUM(salary) FROM employees GROUP BY CUBE (department, region);"}
{"prompt":"How to use $pop in MongoDB?","completion":"db.collection.updateOne({ _id: '123' }, { $pop: { array_field: 1 } });"}
{"prompt":"Write a Neo4j query to find cycles","completion":"MATCH p=(n)-[*1..3]->(n) RETURN p;"}
{"prompt":"How to use SQL CAST function?","completion":"SELECT CAST(column AS INTEGER) FROM table;"}
{"prompt":"Write a MongoDB query with $ne","completion":"db.collection.find({ field: { $ne: 'value' } });"}
{"prompt":"Explain SQL query optimization","completion":"Query optimization involves using indexes, rewriting queries, and analyzing plans to improve performance."}
{"prompt":"Write a Redis command to get TTL","completion":"TTL key;"}
{"prompt":"How to use SQL LATERAL join?","completion":"SELECT * FROM table1, LATERAL (SELECT * FROM table2 WHERE table2.id = table1.id) AS sub;"}
{"prompt":"What's MongoDB write concern?","completion":"Write concern specifies acknowledgment level for writes, e.g., { w: 'majority' } for majority confirmation."}
{"prompt":"Write a SQL query with COALESCE","completion":"SELECT COALESCE(column1, column2, 'default') FROM table;"}
{"prompt":"How to use Redis geospatial commands?","completion":"GEOADD key longitude latitude member; GEORADIUS key lon lat radius km;"}
{"prompt":"Explain SQL unique constraints","completion":"Unique constraints ensure no duplicate values in a column, e.g., ALTER TABLE table ADD UNIQUE (column);"}
{"prompt":"What's ancient Rome?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Cassandra query with lightweight transactions","completion":"INSERT INTO keyspace.table (id, value) VALUES (1, 'value') IF NOT EXISTS;"}
{"prompt":"How to use SQL CURRENT_DATE?","completion":"SELECT CURRENT_DATE;"}
{"prompt":"Write a MongoDB query with $mod","completion":"db.collection.find({ field: { $mod: [5, 0] } });"}
{"prompt":"Explain Redis eviction policies","completion":"Eviction policies (e.g., LRU, LFU) control how Redis removes keys when memory is full."}
{"prompt":"Write a SQL query with subquery in SELECT","completion":"SELECT name, (SELECT COUNT(*) FROM orders WHERE orders.emp_id = employees.id) AS order_count FROM employees;"}
{"prompt":"What's a SQL full table scan?","completion":"A full table scan reads all rows without using an index, often slower for large tables."}
{"prompt":"Write a Neo4j query to find top nodes","completion":"MATCH (n:Node) RETURN n, SIZE((n)--()) AS connections ORDER BY connections DESC LIMIT 5;"}
{"prompt":"How to use SQL ROUND function?","completion":"SELECT ROUND(column, 2) FROM table;"}
{"prompt":"What's web development?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Redis command to get all hash fields","completion":"HKEYS key;"}
{"prompt":"How to use SQL JSON functions?","completion":"SELECT JSON_EXTRACT(column, '$.key') FROM table;"}
{"prompt":"Write a MongoDB query with $and","completion":"db.collection.find({ $and: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"Explain SQL check constraints","completion":"Check constraints enforce conditions, e.g., CHECK (salary > 0)."}
{"prompt":"Write a Cassandra query with clustering key","completion":"CREATE TABLE keyspace.table (id UUID, time TIMESTAMP, value TEXT, PRIMARY KEY (id, time)) WITH CLUSTERING ORDER BY (time DESC);"}
{"prompt":"How to use SQL NOW function?","completion":"SELECT NOW();"}
{"prompt":"What's MongoDB transactions?","completion":"MongoDB supports multi-document ACID transactions, e.g., db.getMongo().startSession().startTransaction();"}
{"prompt":"Write a SQL query with subquery in WHERE","completion":"SELECT * FROM table WHERE column > (SELECT AVG(column) FROM table);"}
{"prompt":"How to use Redis set intersection?","completion":"SINTER set1 set2;"}
{"prompt":"Explain SQL materialized views","completion":"Materialized views store query results physically, refreshed periodically, e.g., REFRESH MATERIALIZED VIEW view_name;"}
{"prompt":"What's a good book on history?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to find node by regex","completion":"MATCH (n:Person) WHERE n.name =~ '.*Alice.*' RETURN n;"}
{"prompt":"How to use SQL TRIM function?","completion":"SELECT TRIM(BOTH ' ' FROM column) FROM table;"}
{"prompt":"Write a MongoDB query with $not","completion":"db.collection.find({ field: { $not: { $eq: 'value' } } });"}
{"prompt":"Explain Redis Lua scripting","completion":"Lua scripts run atomically in Redis, e.g., EVAL 'return redis.call(\"SET\", KEYS[1], ARGV[1])' 1 key value;"}
{"prompt":"Write a SQL query with MIN and MAX","completion":"SELECT MIN(salary), MAX(salary) FROM employees;"}
{"prompt":"How to use $geoWithin in MongoDB?","completion":"db.collection.find({ location: { $geoWithin: { $box: [[x1, y1], [x2, y2]] } } });"}
{"prompt":"What's a SQL sequence used for?","completion":"Sequences generate unique numbers, often for IDs, e.g., CREATE SEQUENCE seq_name;"}
{"prompt":"Write a Cassandra query with batch update","completion":"BEGIN BATCH UPDATE keyspace.table SET value = 'new' WHERE id = 1; UPDATE keyspace.table SET value = 'new' WHERE id = 2; APPLY BATCH;"}
{"prompt":"How to use SQL GREATEST function?","completion":"SELECT GREATEST(column1, column2) FROM table;"}
{"prompt":"What's machine learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Redis command to get list range","completion":"LRANGE mylist 0 -1;"}
{"prompt":"How to use SQL LEAST function?","completion":"SELECT LEAST(column1, column2) FROM table;"}
{"prompt":"Write a MongoDB query with $nearSphere","completion":"db.collection.find({ location: { $nearSphere: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"Explain SQL database triggers","completion":"Triggers execute code automatically on events, e.g., AFTER INSERT ON table FOR EACH ROW ...;"}
{"prompt":"Write a Neo4j query to find all relationships","completion":"MATCH ()-[r]->() RETURN type(r), COUNT(r);"}
{"prompt":"How to use SQL DATE_FORMAT?","completion":"SELECT DATE_FORMAT(date_column, '%Y-%m-%d') FROM table;"}
{"prompt":"What's MongoDB read preference?","completion":"Read preference controls which replica set members handle reads, e.g., primary, secondary, or nearest."}
{"prompt":"Write a SQL query with correlated subquery","completion":"SELECT * FROM table t WHERE EXISTS (SELECT 1 FROM table2 t2 WHERE t2.id = t.id);"}
{"prompt":"How to use Redis set union?","completion":"SUNION set1 set2;"}
{"prompt":"Explain SQL indexing strategies","completion":"Use B-tree for general queries, bitmap for low-cardinality columns, and clustered indexes for primary keys."}
{"prompt":"Write a Cassandra query with collections","completion":"INSERT INTO keyspace.table (id, list_col) VALUES (1, ['item1', 'item2']);"}
{"prompt":"How to use SQL STR_TO_DATE?","completion":"SELECT STR_TO_DATE(column, '%Y-%m-%d') FROM table;"}
{"prompt":"Write a MongoDB query with $expr","completion":"db.collection.find({ $expr: { $gt: ['$field1', '$field2'] } });"}
{"prompt":"Explain Redis cluster slots","completion":"Redis Cluster uses 16,384 slots to distribute data across nodes based on key hashes."}
{"prompt":"Write a SQL query with window function sum","completion":"SELECT name, SUM(salary) OVER (PARTITION BY department) FROM employees;"}
{"prompt":"How to use $currentDate in MongoDB?","completion":"db.collection.updateOne({ _id: '123' }, { $currentDate: { updatedAt: true } });"}
{"prompt":"What's a SQL foreign key cascade?","completion":"CASCADE automatically updates or deletes related rows, e.g., ON DELETE CASCADE."}
{"prompt":"Write a Neo4j query to find node by ID","completion":"MATCH (n {id: '123'}) RETURN n;"}
{"prompt":"How to use SQL DATEDIFF?","completion":"SELECT DATEDIFF(end_date, start_date) FROM table;"}
{"prompt":"What's relativity theory?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Redis command to get set cardinality","completion":"SCARD myset;"}
{"prompt":"How to use SQL SUBSTRING?","completion":"SELECT SUBSTRING(column, 1, 5) FROM table;"}
{"prompt":"Write a MongoDB query with $max","completion":"db.collection.aggregate([{ $group: { _id: null, max_value: { $max: '$field' } } }]);"}
{"prompt":"Explain SQL database users","completion":"Users are accounts with permissions to access databases, e.g., CREATE USER 'user' WITH PASSWORD 'pass';"}
{"prompt":"Write a Cassandra query with frozen collections","completion":"CREATE TABLE keyspace.table (id UUID, data frozen<list<text>>, PRIMARY KEY (id));"}
{"prompt":"How to use SQL TIMESTAMPDIFF?","completion":"SELECT TIMESTAMPDIFF(DAY, start_date, end_date) FROM table;"}
{"prompt":"What's MongoDB Atlas?","completion":"MongoDB Atlas is a managed cloud database service for hosting MongoDB instances."}
{"prompt":"Write a SQL query with table alias","completion":"SELECT e.name, d.name FROM employees e JOIN departments d ON e.dept_id = d.id;"}
{"prompt":"How to use Redis set difference?","completion":"SDIFF set1 set2;"}
{"prompt":"Explain SQL query caching","completion":"Query caching stores results to speed up repeated queries, common in MySQL with query cache settings."}
{"prompt":"What's a good travel destination?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to select distinct values from a column in SQL?","completion":"SELECT DISTINCT column_name FROM table_name;"}
{"prompt":"Write a MongoDB query to find documents with status 'active'","completion":"db.collection.find({ status: 'active' });"}
{"prompt":"Explain the difference between SQL and NoSQL databases","completion":"SQL databases are relational with structured schemas and use SQL for queries, while NoSQL databases are non-relational, supporting flexible schemas for unstructured data."}
{"prompt":"Write a Redis command to set a key-value pair","completion":"SET key value;"}
{"prompt":"How to join two tables in SQL?","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Write a MongoDB query to update a document","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $set: { field: 'new_value' } });"}
{"prompt":"What is a primary key in SQL?","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicates."}
{"prompt":"Write a Neo4j query to find all nodes with a specific property","completion":"MATCH (n:Label {property: 'value'}) RETURN n;"}
{"prompt":"Explain indexing in databases","completion":"Indexing creates a data structure to speed up data retrieval, like a book index, but increases storage and write time."}
{"prompt":"Write a SQL query to group by department and count employees","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"How to insert a document in MongoDB?","completion":"db.collection.insertOne({ field1: 'value1', field2: 'value2' });"}
{"prompt":"Write a Redis command to add to a list","completion":"LPUSH list_key value;"}
{"prompt":"How to sort results in MongoDB?","completion":"db.collection.find().sort({ field: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"Tell me about Python programming","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain transactions in SQL","completion":"Transactions ensure ACID properties (Atomicity, Consistency, Isolation, Durability) using BEGIN, COMMIT, ROLLBACK."}
{"prompt":"Write a Cassandra query to insert data","completion":"INSERT INTO keyspace.table (id, name) VALUES (1, 'John');"}
{"prompt":"What's a graph database used for?","completion":"Graph databases like Neo4j model complex relationships, e.g., social networks or recommendation systems."}
{"prompt":"How to use a subquery in SQL?","completion":"SELECT * FROM table WHERE id IN (SELECT id FROM another_table WHERE condition);"}
{"prompt":"Write a MongoDB query to find documents with age between 20 and 30","completion":"db.collection.find({ age: { $gte: 20, $lte: 30 } });"}
{"prompt":"Explain sharding in NoSQL","completion":"Sharding distributes data across multiple servers to improve scalability and performance."}
{"prompt":"Write a Redis command to get a value","completion":"GET key;"}
{"prompt":"How to use a left join in SQL?","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What is normalization in SQL?","completion":"Normalization reduces data redundancy by organizing tables into normal forms (1NF, 2NF, 3NF)."}
{"prompt":"Write a Neo4j query to create a relationship","completion":"MATCH (a:Label), (b:Label) WHERE a.id = '1' AND b.id = '2' CREATE (a)-[:RELATION]->(b);"}
{"prompt":"Write a SQL query to find average salary by department","completion":"SELECT department, AVG(salary) FROM employees GROUP BY department;"}
{"prompt":"How to perform a bulk insert in MongoDB?","completion":"db.collection.insertMany([{ doc1 }, { doc2 }]);"}
{"prompt":"Explain CAP theorem for databases","completion":"CAP theorem states a distributed system can't simultaneously guarantee Consistency, Availability, and Partition tolerance."}
{"prompt":"Write a Redis command to increment a value","completion":"INCR key;"}
{"prompt":"How to use a SQL view?","completion":"CREATE VIEW view_name AS SELECT * FROM table WHERE condition;"}
{"prompt":"Write a MongoDB query for text search","completion":"db.collection.find({ $text: { $search: 'term' } });"}
{"prompt":"What are NoSQL database types?","completion":"NoSQL types include document (MongoDB), key-value (Redis), column-family (Cassandra), and graph (Neo4j)."}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze execution plans, limit rows."}
{"prompt":"Write a Neo4j query to find shortest path","completion":"MATCH p = shortestPath((start:Label)-[*]-(end:Label)) RETURN p;"}
{"prompt":"What's the capital of Japan?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with a having clause","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.collection.aggregate([{ $lookup: { from: 'other', localField: 'field', foreignField: 'field', as: 'joined' } }]);"}
{"prompt":"Explain ACID properties","completion":"ACID ensures Atomicity (all or nothing), Consistency (valid state), Isolation (independent transactions), Durability (persisted changes)."}
{"prompt":"Write a Redis command for a sorted set","completion":"ZADD key score member;"}
{"prompt":"How to use a SQL case statement?","completion":"SELECT CASE WHEN condition THEN result ELSE other END FROM table;"}
{"prompt":"What's blockchain technology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to delete documents","completion":"db.collection.deleteMany({ condition });"}
{"prompt":"Explain SQL window functions","completion":"Window functions perform calculations across rows related to the current row, e.g., ROW_NUMBER() OVER (ORDER BY column)."}
{"prompt":"Write a Redis pub/sub command","completion":"PUBLISH channel message;"}
{"prompt":"How to use full outer join in SQL?","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What's a database transaction?","completion":"A transaction is a sequence of operations performed as a single unit, ensuring ACID properties."}
{"prompt":"Write a Neo4j query to delete a node","completion":"MATCH (n:Label {id: 'value'}) DELETE n;"}
{"prompt":"Write a SQL query to find duplicates","completion":"SELECT column, COUNT(*) FROM table GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"How to use MongoDB change streams?","completion":"const changeStream = db.collection.watch(); for await (const change of changeStream) { ... }"}
{"prompt":"Explain denormalization in NoSQL","completion":"Denormalization embeds related data in a single document to optimize read performance."}
{"prompt":"Write a Redis command to expire a key","completion":"SET key value EX 60;"}
{"prompt":"How to use SQL union?","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"Write a PostgreSQL query for JSONB","completion":"SELECT * FROM table WHERE jsonb_column @> '{\"key\": \"value\"}';"}
{"prompt":"How to create a trigger in SQL?","completion":"CREATE TRIGGER name BEFORE INSERT ON table FOR EACH ROW EXECUTE PROCEDURE function();"}
{"prompt":"Explain NoSQL scalability","completion":"NoSQL databases often scale horizontally by adding servers, using sharding or replication."}
{"prompt":"Write a Cassandra batch statement","completion":"BEGIN BATCH INSERT... UPDATE... APPLY BATCH;"}
{"prompt":"How to use SQL like operator?","completion":"SELECT * FROM table WHERE column LIKE '%pattern%';"}
{"prompt":"Write a MongoDB query for geospatial data","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"How to create a view in PostgreSQL?","completion":"CREATE VIEW view_name AS SELECT * FROM table WHERE condition;"}
{"prompt":"Explain BASE model in NoSQL","completion":"BASE prioritizes Basic Availability, Soft state, and Eventual consistency for high availability."}
{"prompt":"Write a Redis command for hash set","completion":"HMSET key field1 value1 field2 value2;"}
{"prompt":"How to use SQL pivot?","completion":"SELECT * FROM table PIVOT (AGGREGATE_FUNCTION(column) FOR pivot_column IN (values));"}
{"prompt":"Write a Neo4j query to merge nodes","completion":"MERGE (n:Label {id: 'value'}) ON CREATE SET n.property = 'value';"}
{"prompt":"How to use SQL date functions?","completion":"SELECT CURRENT_DATE; SELECT DATE_ADD(date, INTERVAL 1 DAY);"}
{"prompt":"Explain MongoDB replica sets","completion":"Replica sets are multiple mongod instances that maintain the same data for redundancy and failover."}
{"prompt":"Write a SQL query for full-text search","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('term');"}
{"prompt":"How to recommend a workout?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use SQL constraints?","completion":"Use PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL, CHECK to enforce data integrity."}
{"prompt":"Explain Redis persistence","completion":"Redis supports RDB snapshots and AOF logs for data persistence."}
{"prompt":"How to use SQL order by?","completion":"SELECT * FROM table ORDER BY column ASC;"}
{"prompt":"Write a Neo4j query to find all relationships","completion":"MATCH ()-[r:RELATION]->() RETURN r;"}
{"prompt":"How to create an index in SQL?","completion":"CREATE INDEX index_name ON table_name (column);"}
{"prompt":"Explain NoSQL document stores","completion":"Document stores like MongoDB store data as JSON-like documents with flexible schemas."}
{"prompt":"Write a Redis command to get list length","completion":"LLEN list_key;"}
{"prompt":"How to use SQL between operator?","completion":"SELECT * FROM table WHERE column BETWEEN value1 AND value2;"}
{"prompt":"How to use SQL exists?","completion":"SELECT * FROM table WHERE EXISTS (SELECT 1 FROM another_table WHERE condition);"}
{"prompt":"Explain SQL joins","completion":"Joins combine rows from multiple tables: INNER JOIN (matching), LEFT JOIN (all left), RIGHT JOIN (all right), FULL JOIN (all)."}
{"prompt":"Write a Cassandra query to delete data","completion":"DELETE FROM keyspace.table WHERE id = 1;"}
{"prompt":"How to use Redis transactions?","completion":"MULTI; commands; EXEC;"}
{"prompt":"Write a SQL query for rolling up data","completion":"SELECT department, SUM(salary) FROM employees GROUP BY ROLLUP(department);"}
{"prompt":"How to use MongoDB projection?","completion":"db.collection.find({}, { field: 1 }); // 1 to include, 0 to exclude"}
{"prompt":"Explain eventual consistency in NoSQL","completion":"Eventual consistency means updates propagate gradually, prioritizing availability over immediate consistency."}
{"prompt":"Write a Neo4j query to find neighbors","completion":"MATCH (n:Label {id: 'value'})-[:RELATION]-(neighbor) RETURN neighbor;"}
{"prompt":"How to use SQL in clause?","completion":"SELECT * FROM table WHERE column IN (value1, value2);"}
{"prompt":"Write a Redis command to pop from a list","completion":"RPOP list_key;"}
{"prompt":"How to use SQL coalesce?","completion":"SELECT COALESCE(column, 'default') FROM table;"}
{"prompt":"Explain MongoDB sharding","completion":"Sharding splits data across servers using a shard key to distribute queries efficiently."}
{"prompt":"Write a SQL query to find null values","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"How to use Cassandra materialized views?","completion":"CREATE MATERIALIZED VIEW view AS SELECT * FROM table WHERE column IS NOT NULL PRIMARY KEY (column);"}
{"prompt":"Write a Neo4j query to count nodes","completion":"MATCH (n) RETURN COUNT(n);"}
{"prompt":"How to use SQL truncate?","completion":"TRUNCATE TABLE table_name;"}
{"prompt":"Explain Redis sorted sets","completion":"Sorted sets store members with scores, allowing ranking and range queries."}
{"prompt":"How to use SQL group_concat?","completion":"SELECT department, GROUP_CONCAT(name) FROM employees GROUP BY department;"}
{"prompt":"What's human anatomy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use MongoDB aggregation?","completion":"db.collection.aggregate([{ $match: { condition } }, { $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"Explain SQL triggers","completion":"Triggers are database procedures that execute automatically on events like INSERT or UPDATE."}
{"prompt":"Write a Redis command to scan keys","completion":"SCAN 0 MATCH pattern;"}
{"prompt":"How to use SQL rank function?","completion":"SELECT column, RANK() OVER (ORDER BY column) FROM table;"}
{"prompt":"Write a Cassandra query for time-series data","completion":"INSERT INTO keyspace.timeseries (id, time, value) VALUES (1, NOW(), 100);"}
{"prompt":"How to use SQL self join?","completion":"SELECT a.name, b.name FROM table a INNER JOIN table b ON a.id = b.parent_id;"}
{"prompt":"Explain NoSQL key-value stores","completion":"Key-value stores like Redis store data as simple key-value pairs for fast retrieval."}
{"prompt":"Write a Neo4j query to update properties","completion":"MATCH (n:Label {id: 'value'}) SET n.property = 'new_value';"}
{"prompt":"How to use SQL current_timestamp?","completion":"SELECT CURRENT_TIMESTAMP;"}
{"prompt":"How to use SQL check constraint?","completion":"CREATE TABLE table (column INT CHECK (column > 0));"}
{"prompt":"Explain Redis streams","completion":"Streams store log-like data for real-time processing, using XADD and XREAD."}
{"prompt":"Write a SQL query for cumulative sum","completion":"SELECT column, SUM(value) OVER (PARTITION BY group ORDER BY column) FROM table;"}
{"prompt":"How to use Cassandra TTL?","completion":"INSERT INTO keyspace.table (id, value) VALUES (1, 'data') USING TTL 3600;"}
{"prompt":"What's meditation?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a Neo4j query to find all paths","completion":"MATCH p = (start:Label)-[*1..3]-(end:Label) RETURN p;"}
{"prompt":"How to use SQL unique constraint?","completion":"CREATE TABLE table (column VARCHAR(50) UNIQUE);"}
{"prompt":"Explain MongoDB transactions","completion":"MongoDB supports multi-document transactions for ACID compliance in replica sets."}
{"prompt":"How to use SQL intersect?","completion":"SELECT column FROM table1 INTERSECT SELECT column FROM table2;"}
{"prompt":"What's travel advice?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find max salary","completion":"SELECT MAX(salary) FROM employees;"}
{"prompt":"How to use MongoDB $exists operator?","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"Explain SQL stored procedures","completion":"Stored procedures are precompiled SQL code stored in the database for reuse."}
{"prompt":"Write a Cassandra query for range selection","completion":"SELECT * FROM keyspace.table WHERE time >= '2023-01-01' AND time <= '2023-12-31';"}
{"prompt":"What's gardening tips?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain the difference between INNER JOIN and LEFT JOIN in SQL","completion":"INNER JOIN returns rows with matching values in both tables, while LEFT JOIN returns all rows from the left table and matching rows from the right table, with NULLs for non-matches."}
{"prompt":"How to set a key-value pair in Redis?","completion":"SET key value;"}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key is a column that creates a relationship between two tables, referencing the primary key of another table."}
{"prompt":"Write a MongoDB query to update a single document","completion":"db.collection.updateOne({ filter }, { $set: { field: new_value } });"}
{"prompt":"How to create a table in SQL?","completion":"CREATE TABLE table_name (id INT PRIMARY KEY, name VARCHAR(50));"}
{"prompt":"Explain sharding in NoSQL databases","completion":"Sharding distributes data across multiple servers to improve scalability and performance in NoSQL databases."}
{"prompt":"Write a Neo4j query to find all nodes with a specific label","completion":"MATCH (n:Label) RETURN n;"}
{"prompt":"Write a Cassandra query to insert data","completion":"INSERT INTO keyspace.table (column1, column2) VALUES (value1, value2);"}
{"prompt":"What are indexes in databases?","completion":"Indexes are database structures that improve query performance by allowing faster data retrieval."}
{"prompt":"Write a SQL query to join two tables","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to sort documents in MongoDB?","completion":"db.collection.find().sort({ field: 1 });"}
{"prompt":"Explain ACID properties in SQL","completion":"ACID stands for Atomicity, Consistency, Isolation, Durability, ensuring reliable transactions."}
{"prompt":"How to group data in SQL?","completion":"SELECT column, COUNT(*) FROM table_name GROUP BY column;"}
{"prompt":"Write a MongoDB query for text search","completion":"db.collection.find({ $text: { $search: \"term\" } });"}
{"prompt":"What is a graph database used for?","completion":"Graph databases like Neo4j are used for managing complex relationships, such as in social networks or recommendation systems."}
{"prompt":"Write a SQL query to update a column","completion":"UPDATE table_name SET column = new_value WHERE condition;"}
{"prompt":"Explain normalization in SQL","completion":"Normalization reduces data redundancy by organizing tables into normal forms (1NF, 2NF, 3NF)."}
{"prompt":"Write a Neo4j query to create a relationship","completion":"MATCH (a:Node), (b:Node) CREATE (a)-[:RELATION]->(b);"}
{"prompt":"Write a Redis command to get a hash field","completion":"HGET key field;"}
{"prompt":"What is eventual consistency in NoSQL?","completion":"Eventual consistency means that updates propagate to all nodes over time, prioritizing availability."}
{"prompt":"Write a SQL query with a HAVING clause","completion":"SELECT column, COUNT(*) FROM table GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"How to perform a bulk insert in MongoDB?","completion":"db.collection.insertMany([{doc1}, {doc2}]);"}
{"prompt":"Write a Cassandra query to create a table","completion":"CREATE TABLE keyspace.table (id UUID PRIMARY KEY, name TEXT);"}
{"prompt":"Explain SQL views","completion":"A view is a virtual table created by a query, used to simplify complex queries or restrict data access."}
{"prompt":"Write a Redis command to set expiration","completion":"SET key value EX seconds;"}
{"prompt":"How to use a window function in PostgreSQL?","completion":"SELECT column, ROW_NUMBER() OVER (ORDER BY column) FROM table;"}
{"prompt":"Write a MongoDB query with $lookup","completion":"db.collection.aggregate([{ $lookup: { from: \"other\", localField: \"field\", foreignField: \"field\", as: \"joined\" } }]);"}
{"prompt":"What are SQL constraints?","completion":"Constraints enforce rules: PRIMARY KEY, FOREIGNEverybody, UNIQUE, NOT NULL, CHECK."}
{"prompt":"Write a Neo4j query to find shortest path","completion":"MATCH p = shortestPath((start)-[*]-(end)) RETURN p;"}
{"prompt":"Write a Redis command for sorted sets","completion":"ZADD key score member;"}
{"prompt":"Explain CAP theorem for databases","completion":"CAP theorem states you can't have Consistency, Availability, and Partition tolerance simultaneously in distributed systems."}
{"prompt":"Write a SQL query for full outer join","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to query JSONB in PostgreSQL?","completion":"SELECT * FROM table WHERE jsonb_column @> '{\"key\": \"value\"}';"}
{"prompt":"Write a MongoDB query to remove a field","completion":"db.collection.updateMany({}, { $unset: { field: \"\" } });"}
{"prompt":"What is denormalization in NoSQL?","completion":"Denormalization duplicates data to optimize read performance, common in NoSQL databases."}
{"prompt":"How to use Redis pub/sub?","completion":"PUBLISH channel message; SUBSCRIBE channel;"}
{"prompt":"Write a Cassandra query to update data","completion":"UPDATE keyspace.table SET column = value WHERE condition;"}
{"prompt":"Explain SQL triggers","completion":"Triggers are procedures that execute automatically in response to table events like INSERT or UPDATE."}
{"prompt":"Write a MongoDB query for geospatial data","completion":"db.collection.find({ location: { $near: { $geometry: { type: \"Point\", coordinates: [lng, lat] } } } });"}
{"prompt":"Write a SQL query with CASE statement","completion":"SELECT CASE WHEN condition THEN result ELSE other END FROM table;"}
{"prompt":"What is a MongoDB replica set?","completion":"A replica set is a group of mongod instances maintaining the same data for redundancy and high availability."}
{"prompt":"Write a Redis command for transactions","completion":"MULTI; commands; EXEC;"}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze execution plans, and limit results."}
{"prompt":"Write a Neo4j query to merge nodes","completion":"MERGE (n:Node {id: value}) ON CREATE SET n.property = value;"}
{"prompt":"What is a NoSQL document store?","completion":"A document store like MongoDB stores data as JSON-like documents with flexible schemas."}
{"prompt":"Write a SQL query to drop a table","completion":"DROP TABLE table_name;"}
{"prompt":"Write a MongoDB query to count documents","completion":"db.collection.countDocuments({ filter });"}
{"prompt":"Explain SQL pivot queries","completion":"Pivot queries transpose rows to columns using CASE or database-specific PIVOT functions."}
{"prompt":"How to handle transactions in MongoDB?","completion":"Use db.getMongo().startSession() and session.withTransaction() for multi-document transactions."}
{"prompt":"Write a SQL query for date functions","completion":"SELECT CURRENT_DATE; SELECT DATE_ADD(date, INTERVAL 1 DAY);"}
{"prompt":"What is a Redis pipeline?","completion":"Pipelining batches multiple commands to reduce round-trip time, using client.pipeline()."}
{"prompt":"Write a Neo4j query to delete a node","completion":"MATCH (n:Node {id: value}) DELETE n;"}
{"prompt":"How to use EXISTS in SQL?","completion":"SELECT * FROM table WHERE EXISTS (SELECT 1 FROM another_table WHERE condition);"}
{"prompt":"What are NoSQL wide-column stores?","completion":"Wide-column stores like Cassandra store data in columns instead of rows, optimized for large-scale analytics."}
{"prompt":"Write a SQL query with ORDER BY","completion":"SELECT * FROM table ORDER BY column DESC;"}
{"prompt":"How to create a view in MongoDB?","completion":"db.createView('viewName', 'collection', [{ $match: { filter } }]);"}
{"prompt":"Explain database clustering","completion":"Clustering groups database servers to improve availability and fault tolerance, often used in NoSQL."}
{"prompt":"Write a SQL query with multiple joins","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id INNER JOIN table3 ON table2.id = table3.id;"}
{"prompt":"How to use $inc in MongoDB?","completion":"db.collection.updateOne({ filter }, { $inc: { field: 1 } });"}
{"prompt":"Write a Cassandra query to delete data","completion":"DELETE FROM keyspace.table WHERE condition;"}
{"prompt":"What is a SQL stored procedure?","completion":"A stored procedure is a precompiled set of SQL statements stored in the database for reuse."}
{"prompt":"Write a Neo4j query to find neighbors","completion":"MATCH (n:Node)-[:RELATION]->(m) RETURN m;"}
{"prompt":"Write a MongoDB query to project specific fields","completion":"db.collection.find({}, { field1: 1, field2: 1, _id: 0 });"}
{"prompt":"What is a Redis sorted set used for?","completion":"Sorted sets store unique elements with scores, ideal for rankings or leaderboards."}
{"prompt":"Write a SQL query for self-join","completion":"SELECT a.* FROM table a INNER JOIN table b ON a.id = b.parent_id;"}
{"prompt":"How to handle nulls in SQL?","completion":"Use IS NULL or IS NOT NULL in WHERE clauses to filter null values."}
{"prompt":"Write a MongoDB query for aggregation","completion":"db.collection.aggregate([{ $group: { _id: \"$field\", total: { $sum: 1 } } }]);"}
{"prompt":"What is a time-series database in NoSQL?","completion":"Time-series databases like InfluxDB are optimized for storing and querying timestamped data."}
{"prompt":"Write a SQL query with BETWEEN","completion":"SELECT * FROM table WHERE column BETWEEN value1 AND value2;"}
{"prompt":"How to use Redis for caching?","completion":"Store frequently accessed data with SET and retrieve with GET, optionally with expiration."}
{"prompt":"Write a Neo4j query to count relationships","completion":"MATCH ()-[r:RELATION]->() RETURN COUNT(r);"}
{"prompt":"What are SQL cursors?","completion":"Cursors allow row-by-row processing of query results in SQL."}
{"prompt":"Write a MongoDB query to delete documents","completion":"db.collection.deleteMany({ filter });"}
{"prompt":"What is a Redis stream?","completion":"Streams store log-like data with timestamps, accessed via XADD and XREAD."}
{"prompt":"Write a SQL query with GROUP_CONCAT","completion":"SELECT column, GROUP_CONCAT(value) FROM table GROUP BY column;"}
{"prompt":"How to create a MongoDB change stream?","completion":"const changeStream = db.collection.watch(); for await (const change of changeStream) { ... }"}
{"prompt":"What are SQL sequences?","completion":"Sequences generate unique numeric values, often used for auto-incrementing IDs."}
{"prompt":"Write a Cassandra query for batch operations","completion":"BEGIN BATCH INSERT... UPDATE... APPLY BATCH;"}
{"prompt":"How to use DISTINCT ON in PostgreSQL?","completion":"SELECT DISTINCT ON (column) * FROM table ORDER BY column, another_column;"}
{"prompt":"What is a NoSQL key-value store?","completion":"Key-value stores like Redis store data as simple key-value pairs for fast retrieval."}
{"prompt":"Write a SQL query with LIMIT","completion":"SELECT * FROM table LIMIT 10;"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ filter }, { $push: { array_field: value } });"}
{"prompt":"Write a Neo4j query to update a node","completion":"MATCH (n:Node {id: value}) SET n.property = new_value;"}
{"prompt":"What is a SQL temporary table?","completion":"Temporary tables exist only for a session and are created with CREATE TEMPORARY TABLE."}
{"prompt":"Write a MongoDB query to find one document","completion":"db.collection.findOne({ filter });"}
{"prompt":"How to use Redis bitmaps?","completion":"SETBIT key offset value; GETBIT key offset;"}
{"prompt":"Write a SQL query with IN clause","completion":"SELECT * FROM table WHERE column IN (value1, value2);"}
{"prompt":"What is a MongoDB capped collection?","completion":"Capped collections have a fixed size, automatically overwriting old data when full."}
{"prompt":"Write a Cassandra query to select data","completion":"SELECT * FROM keyspace.table WHERE condition;"}
{"prompt":"How to use RANK in SQL?","completion":"SELECT column, RANK() OVER (ORDER BY column) FROM table;"}
{"prompt":"Write a Neo4j query to delete a relationship","completion":"MATCH ()-[r:RELATION]->() WHERE condition DELETE r;"}
{"prompt":"What is a SQL materialized view?","completion":"A materialized view stores query results physically, unlike regular views, for faster access."}
{"prompt":"How to use Redis for rate limiting?","completion":"Use INCR and EXPIRE to track requests within a time window."}
{"prompt":"Write a SQL query with NULLIF","completion":"SELECT NULLIF(column, 'value') FROM table;"}
{"prompt":"What is a NoSQL column-family store?","completion":"Column-family stores like Cassandra store data in column families for flexible, scalable access."}
{"prompt":"Write a Neo4j query to find all paths","completion":"MATCH p = (start)-[*1..3]->(end) RETURN p;"}
{"prompt":"How to use ALTER TABLE in SQL?","completion":"ALTER TABLE table_name ADD column TYPE;"}
{"prompt":"Write a MongoDB query to rename a field","completion":"db.collection.updateMany({}, { $rename: { old_field: 'new_field' } });"}
{"prompt":"What is Redis persistence?","completion":"Redis persistence saves data to disk using RDB snapshots or AOF logs."}
{"prompt":"Write a SQL query with CTE","completion":"WITH cte AS (SELECT * FROM table WHERE condition) SELECT * FROM cte;"}
{"prompt":"What is a SQL check constraint?","completion":"A CHECK constraint ensures column values meet a condition, e.g., CHECK (age > 18)."}
{"prompt":"Write a Neo4j query to find connected nodes","completion":"MATCH (n:Node)-[:RELATION*1..2]->(m) RETURN m;"}
{"prompt":"How to use LAG in SQL?","completion":"SELECT column, LAG(column) OVER (ORDER BY column) FROM table;"}
{"prompt":"What is a Redis hyperloglog?","completion":"HyperLogLog estimates unique elements in a set with minimal memory, using PFADD and PFCOUNT."}
{"prompt":"Write a SQL query with RIGHT JOIN","completion":"SELECT * FROM table1 RIGHT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to use $all in MongoDB?","completion":"db.collection.find({ field: { $all: [value1, value2] } });"}
{"prompt":"Write a Cassandra query to create a keyspace","completion":"CREATE KEYSPACE keyspace WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};"}
{"prompt":"What is a SQL unique constraint?","completion":"A UNIQUE constraint ensures no duplicate values in a column or set of columns."}
{"prompt":"How to use NOW() in SQL?","completion":"SELECT NOW();"}
{"prompt":"Write a MongoDB query to unset multiple fields","completion":"db.collection.updateMany({}, { $unset: { field1: '', field2: '' } });"}
{"prompt":"What is a Redis cluster?","completion":"A Redis cluster distributes data across multiple nodes for scalability and fault tolerance."}
{"prompt":"Write a Cassandra query to alter a table","completion":"ALTER TABLE keyspace.table ADD new_column TYPE;"}
{"prompt":"What is a SQL aggregate function?","completion":"Aggregate functions like COUNT, SUM, AVG compute a single result from multiple rows."}
{"prompt":"Write a Neo4j query to find nodes by property","completion":"MATCH (n:Node {property: value}) RETURN n;"}
{"prompt":"How to use LEAD in SQL?","completion":"SELECT column, LEAD(column) OVER (ORDER BY column) FROM table;"}
{"prompt":"Write a MongoDB query to update nested fields","completion":"db.collection.updateOne({ filter }, { $set: { 'nested.field': value } });"}
{"prompt":"What is a Redis Lua script?","completion":"Lua scripts in Redis execute complex logic atomically using EVAL."}
{"prompt":"What's Python used for?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Recommend a book on history","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How does machine learning work?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain quantum computing","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe the solar system","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's AI ethics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Recommend a workout routine","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe ancient Rome","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain relativity theory","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe climate change","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain evolution","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's photography tips?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How does the internet work?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Recommend travel destinations","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe human anatomy","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to get all documents in MongoDB where age is less than 30?","completion":"db.collection.find({ age: { $lt: 30 } });"}
{"prompt":"Explain the difference between SQL and NoSQL databases","completion":"SQL databases are relational, using structured schemas and tables, while NoSQL databases are non-relational, supporting flexible schemas like document, key-value, or graph structures."}
{"prompt":"Write a SQL query to join two tables, orders and customers, on customer_id","completion":"SELECT * FROM orders INNER JOIN customers ON orders.customer_id = customers.customer_id;"}
{"prompt":"How to set a key-value pair in Redis?","completion":"SET mykey 'value';"}
{"prompt":"How to make a cake?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Create a SQL table for products with id, name, and price","completion":"CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(100), price DECIMAL(10,2));"}
{"prompt":"Find documents in MongoDB where status is 'active'","completion":"db.collection.find({ status: 'active' });"}
{"prompt":"Explain primary key in SQL","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicate values and enabling efficient data retrieval."}
{"prompt":"Write a SQL query to count employees by department","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { field: 'new_value' } });"}
{"prompt":"Create a Redis sorted set with scores","completion":"ZADD myset 1 'item1' 2 'item2';"}
{"prompt":"SQL query to delete records older than a year","completion":"DELETE FROM table WHERE date < DATE_SUB(CURDATE(), INTERVAL 1 YEAR);"}
{"prompt":"How does indexing improve MongoDB performance?","completion":"Indexing in MongoDB creates data structures to allow faster query execution by reducing the number of documents scanned."}
{"prompt":"Explain SQL LEFT JOIN","completion":"A LEFT JOIN returns all records from the left table and matching records from the right table; non-matching rows from the right table return NULL. Example: SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to query a graph in Neo4j?","completion":"MATCH (n:Person)-[r:KNOWS]->(m:Person) RETURN n, r, m;"}
{"prompt":"Tell me about machine learning","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to find top 5 highest-paid employees","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"}
{"prompt":"MongoDB query to sort by date descending","completion":"db.collection.find().sort({ date: -1 });"}
{"prompt":"How to insert data in Cassandra?","completion":"INSERT INTO keyspace.table (id, name) VALUES (1, 'value');"}
{"prompt":"SQL query to find duplicate emails","completion":"SELECT email, COUNT(*) FROM users GROUP BY email HAVING COUNT(*) > 1;"}
{"prompt":"Explain ACID properties in SQL","completion":"ACID stands for Atomicity (transactions are all-or-nothing), Consistency (data remains valid), Isolation (transactions don’t interfere), Durability (committed changes are permanent)."}
{"prompt":"Write a SQL query to update employee salary by 10%","completion":"UPDATE employees SET salary = salary * 1.1;"}
{"prompt":"MongoDB query to find documents with multiple conditions","completion":"db.collection.find({ age: { $gt: 25 }, status: 'active' });"}
{"prompt":"Redis command to get all keys","completion":"KEYS *;"}
{"prompt":"SQL query to find average salary by department","completion":"SELECT department, AVG(salary) FROM employees GROUP BY department;"}
{"prompt":"Neo4j query to find shortest path","completion":"MATCH p=shortestPath((start:Node)-[*]-(end:Node)) RETURN p;"}
{"prompt":"MongoDB query to remove a field","completion":"db.collection.updateMany({}, { $unset: { field: '' } });"}
{"prompt":"SQL query for full outer join","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Redis pub/sub example","completion":"PUBLISH channel 'message'; SUBSCRIBE channel;"}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze execution plans, and limit rows returned."}
{"prompt":"MongoDB query for text search","completion":"db.collection.find({ $text: { $search: 'keyword' } });"}
{"prompt":"SQL query to create a view","completion":"CREATE VIEW view_name AS SELECT * FROM table WHERE condition;"}
{"prompt":"Explain CAP theorem","completion":"CAP theorem states that distributed systems can only guarantee two of Consistency, Availability, and Partition Tolerance at once."}
{"prompt":"Cassandra query to create a table","completion":"CREATE TABLE keyspace.table (id UUID PRIMARY KEY, name TEXT);"}
{"prompt":"SQL query with CASE statement","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"MongoDB bulk insert example","completion":"db.collection.insertMany([{ name: 'item1' }, { name: 'item2' }]);"}
{"prompt":"Redis hash set command","completion":"HMSET myhash field1 'value1' field2 'value2';"}
{"prompt":"SQL query to find second highest salary","completion":"SELECT MAX(salary) FROM employees WHERE salary < (SELECT MAX(salary) FROM employees);"}
{"prompt":"Explain normalization in SQL","completion":"Normalization organizes data to reduce redundancy and improve integrity, using forms like 1NF, 2NF, 3NF."}
{"prompt":"Neo4j query to create a relationship","completion":"MATCH (a:Node), (b:Node) WHERE a.id = '1' AND b.id = '2' CREATE (a)-[r:REL]->(b);"}
{"prompt":"SQL query to select distinct values","completion":"SELECT DISTINCT column FROM table;"}
{"prompt":"MongoDB query to count documents","completion":"db.collection.countDocuments({});"}
{"prompt":"SQL query to add a column","completion":"ALTER TABLE table ADD column_name TYPE;"}
{"prompt":"Redis command to set expiration","completion":"SET key value EX 3600;"}
{"prompt":"Explain NoSQL document stores","completion":"Document stores like MongoDB store data as JSON-like documents, offering flexible schemas and scalability."}
{"prompt":"PostgreSQL query for JSONB data","completion":"SELECT * FROM table WHERE jsonb_column @> '{\"key\": \"value\"}';"}
{"prompt":"SQL query with LIKE operator","completion":"SELECT * FROM table WHERE column LIKE '%pattern%';"}
{"prompt":"Cassandra secondary index creation","completion":"CREATE INDEX ON keyspace.table (column);"}
{"prompt":"SQL query for window function","completion":"SELECT name, ROW_NUMBER() OVER (ORDER BY salary) AS rank FROM employees;"}
{"prompt":"Redis transaction example","completion":"MULTI; SET key1 value1; SET key2 value2; EXEC;"}
{"prompt":"How to garden effectively?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to delete a node","completion":"MATCH (n:Node {id: 'value'}) DELETE n;"}
{"prompt":"SQL query to find null values","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"MongoDB geospatial query","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"SQL query to group by and having","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"Redis list push command","completion":"LPUSH mylist 'item';"}
{"prompt":"Explain denormalization in NoSQL","completion":"Denormalization in NoSQL embeds related data in a single document to optimize read performance, reducing joins."}
{"prompt":"How to bake bread?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL full-text search query","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('term');"}
{"prompt":"SQL query to union two tables","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"MongoDB query to remove documents","completion":"db.collection.deleteMany({ condition });"}
{"prompt":"Cassandra batch statement example","completion":"BEGIN BATCH INSERT INTO table (id, value) VALUES (1, 'val1'); UPDATE table SET value = 'val2' WHERE id = 2; APPLY BATCH;"}
{"prompt":"SQL query for date functions","completion":"SELECT CURRENT_DATE, DATE_ADD(date, INTERVAL 1 DAY) FROM table;"}
{"prompt":"Redis sorted set range","completion":"ZRANGE myset 0 -1;"}
{"prompt":"Neo4j query to find all nodes of a type","completion":"MATCH (n:NodeType) RETURN n;"}
{"prompt":"SQL query to pivot data","completion":"SELECT * FROM (SELECT column1, column2 FROM table) PIVOT (SUM(column2) FOR column1 IN ('value1', 'value2'));"}
{"prompt":"MongoDB change stream example","completion":"const changeStream = db.collection.watch(); for await (const change of changeStream) { console.log(change); }"}
{"prompt":"SQL query to create a trigger","completion":"CREATE TRIGGER my_trigger BEFORE INSERT ON table FOR EACH ROW EXECUTE PROCEDURE my_function();"}
{"prompt":"Redis command to get hash values","completion":"HGETALL myhash;"}
{"prompt":"Explain SQL views","completion":"Views are virtual tables created from a query, simplifying complex queries or restricting data access."}
{"prompt":"MongoDB query to project specific fields","completion":"db.collection.find({}, { field1: 1, field2: 1, _id: 0 });"}
{"prompt":"SQL query to find max value","completion":"SELECT MAX(column) FROM table;"}
{"prompt":"Cassandra query to update data","completion":"UPDATE keyspace.table SET column = value WHERE id = key;"}
{"prompt":"Neo4j query to merge nodes","completion":"MERGE (n:Node {id: 'value'}) ON CREATE SET n.property = 'new_value';"}
{"prompt":"SQL query with subquery","completion":"SELECT * FROM table WHERE id IN (SELECT id FROM another_table WHERE condition);"}
{"prompt":"MongoDB query to aggregate data","completion":"db.collection.aggregate([{ $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"How to build a website?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Redis command to increment a value","completion":"INCR mykey;"}
{"prompt":"SQL query to rename a table","completion":"ALTER TABLE old_name RENAME TO new_name;"}
{"prompt":"Explain MongoDB replica sets","completion":"Replica sets are groups of mongod instances that maintain the same data for redundancy and high availability."}
{"prompt":"PostgreSQL query to handle arrays","completion":"SELECT * FROM table WHERE array_column @> ARRAY['value']::varchar[];"}
{"prompt":"SQL query to check constraints","completion":"SELECT * FROM information_schema.table_constraints WHERE table_name = 'table';"}
{"prompt":"MongoDB query to find distinct values","completion":"db.collection.distinct('field');"}
{"prompt":"How to practice yoga?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to drop a table","completion":"DROP TABLE keyspace.table;"}
{"prompt":"SQL query to select top 10 rows","completion":"SELECT * FROM table LIMIT 10;"}
{"prompt":"Redis command to check key existence","completion":"EXISTS mykey;"}
{"prompt":"Neo4j query to find connected nodes","completion":"MATCH (n:Node)-[:REL]->(m) RETURN n, m;"}
{"prompt":"SQL query to calculate sum","completion":"SELECT SUM(column) FROM table;"}
{"prompt":"MongoDB query to update multiple documents","completion":"db.collection.updateMany({ condition }, { $set: { field: 'value' } });"}
{"prompt":"How does evolution work?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to create an index","completion":"CREATE INDEX idx_name ON table(column);"}
{"prompt":"Redis list pop command","completion":"RPOP mylist;"}
{"prompt":"Explain NoSQL key-value stores","completion":"Key-value stores like Redis map unique keys to values, offering fast retrieval for simple data structures."}
{"prompt":"PostgreSQL query for date range","completion":"SELECT * FROM table WHERE date_column BETWEEN '2023-01-01' AND '2023-12-31';"}
{"prompt":"SQL query to check foreign keys","completion":"SELECT * FROM information_schema.referential_constraints WHERE table_name = 'table';"}
{"prompt":"MongoDB query to skip results","completion":"db.collection.find().skip(10);"}
{"prompt":"How to learn chess?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to select data","completion":"SELECT * FROM keyspace.table WHERE id = key;"}
{"prompt":"SQL query to handle nulls in sorting","completion":"SELECT * FROM table ORDER BY column NULLS LAST;"}
{"prompt":"Redis command to set multiple keys","completion":"MSET key1 value1 key2 value2;"}
{"prompt":"What's cloud computing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to update node properties","completion":"MATCH (n:Node {id: 'value'}) SET n.property = 'new_value';"}
{"prompt":"SQL query to join three tables","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id JOIN table3 ON table2.id = table3.id;"}
{"prompt":"MongoDB query to group by multiple fields","completion":"db.collection.aggregate([{ $group: { _id: { field1: '$field1', field2: '$field2' }, count: { $sum: 1 } } }]);"}
{"prompt":"SQL query to find min value","completion":"SELECT MIN(column) FROM table;"}
{"prompt":"Redis command to get list length","completion":"LLEN mylist;"}
{"prompt":"Explain SQL transactions","completion":"Transactions group operations to ensure ACID properties; use BEGIN, COMMIT, or ROLLBACK."}
{"prompt":"What's graphic design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to drop an index","completion":"DROP INDEX idx_name;"}
{"prompt":"Cassandra query to create a keyspace","completion":"CREATE KEYSPACE mykeyspace WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};"}
{"prompt":"How to learn dancing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to count relationships","completion":"MATCH ()-[r:REL]->() RETURN COUNT(r);"}
{"prompt":"SQL query to select random rows","completion":"SELECT * FROM table ORDER BY RANDOM() LIMIT 5;"}
{"prompt":"MongoDB query to find by array field","completion":"db.collection.find({ array_field: 'value' });"}
{"prompt":"SQL query to calculate median","completion":"SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY column) FROM table;"}
{"prompt":"Redis command to delete a key","completion":"DEL mykey;"}
{"prompt":"Explain MongoDB sharding","completion":"Sharding in MongoDB distributes data across multiple servers using a shard key to balance load and scale horizontally."}
{"prompt":"PostgreSQL query to use CTE","completion":"WITH cte AS (SELECT * FROM table WHERE condition) SELECT * FROM cte;"}
{"prompt":"SQL query to check table size","completion":"SELECT pg_size_pretty(pg_total_relation_size('table'));"}
{"prompt":"MongoDB query to increment a field","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $inc: { field: 1 } });"}
{"prompt":"What's data science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to alter a table","completion":"ALTER TABLE keyspace.table ADD new_column TEXT;"}
{"prompt":"SQL query to find unique values","completion":"SELECT DISTINCT column FROM table;"}
{"prompt":"Redis command to get set members","completion":"SMEMBERS myset;"}
{"prompt":"How to learn cooking?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find nodes by property","completion":"MATCH (n:Node {property: 'value'}) RETURN n;"}
{"prompt":"SQL query to handle JSON data","completion":"SELECT column->>'key' FROM table;"}
{"prompt":"MongoDB query to join collections","completion":"db.collection.aggregate([{ $lookup: { from: 'other', localField: 'field', foreignField: 'field', as: 'joined' } }]);"}
{"prompt":"What's artificial neural networks?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Redis command to add to set","completion":"SADD myset 'item';"}
{"prompt":"Explain NoSQL column-family stores","completion":"Column-family stores like Cassandra store data in columns instead of rows, optimized for large-scale analytics."}
{"prompt":"How to write poetry?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL query to handle time zones","completion":"SELECT column AT TIME ZONE 'UTC' FROM table;"}
{"prompt":"SQL query to find duplicate rows","completion":"SELECT column, COUNT(*) FROM table GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"MongoDB query to find by date range","completion":"db.collection.find({ date: { $gte: ISODate('2023-01-01'), $lte: ISODate('2023-12-31') } });"}
{"prompt":"What's augmented reality?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to select with limit","completion":"SELECT * FROM keyspace.table LIMIT 10;"}
{"prompt":"SQL query to create a foreign key","completion":"ALTER TABLE table ADD CONSTRAINT fk_name FOREIGN KEY (column) REFERENCES other_table(id);"}
{"prompt":"Redis command to check TTL","completion":"TTL mykey;"}
{"prompt":"How to learn astronomy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to delete relationships","completion":"MATCH ()-[r:REL]->() DELETE r;"}
{"prompt":"SQL query to select by multiple conditions","completion":"SELECT * FROM table WHERE column1 = 'value1' AND column2 > 10;"}
{"prompt":"MongoDB query to sort and limit","completion":"db.collection.find().sort({ field: 1 }).limit(5);"}
{"prompt":"What's bioinformatics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to create a sequence","completion":"CREATE SEQUENCE seq_name START 1;"}
{"prompt":"Redis command to get range from sorted set","completion":"ZRANGEBYSCORE myset 0 100;"}
{"prompt":"Explain MongoDB transactions","completion":"MongoDB supports multi-document transactions in replica sets, ensuring ACID compliance for grouped operations."}
{"prompt":"PostgreSQL query to analyze query plan","completion":"EXPLAIN ANALYZE SELECT * FROM table WHERE condition;"}
{"prompt":"SQL query to find rows with max per group","completion":"SELECT t1.* FROM table t1 WHERE t1.value = (SELECT MAX(t2.value) FROM table t2 WHERE t2.group = t1.group);"}
{"prompt":"MongoDB query to unset multiple fields","completion":"db.collection.updateMany({}, { $unset: { field1: '', field2: '' } });"}
{"prompt":"What's robotics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to create a materialized view","completion":"CREATE MATERIALIZED VIEW keyspace.view AS SELECT * FROM table WHERE column IS NOT NULL PRIMARY KEY (column, id);"}
{"prompt":"SQL query to use COALESCE","completion":"SELECT COALESCE(column, 'default') FROM table;"}
{"prompt":"Redis command to scan keys","completion":"SCAN 0 MATCH pattern;"}
{"prompt":"How to learn knitting?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find nodes with multiple relationships","completion":"MATCH (n:Node)-[r:REL]->() RETURN n, COUNT(r);"}
{"prompt":"SQL query to partition data","completion":"SELECT column, ROW_NUMBER() OVER (PARTITION BY group_column ORDER BY value) FROM table;"}
{"prompt":"MongoDB query to find by nested field","completion":"db.collection.find({ 'nested.field': 'value' });"}
{"prompt":"What's quantum mechanics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to create a unique constraint","completion":"ALTER TABLE table ADD CONSTRAINT unique_name UNIQUE (column);"}
{"prompt":"Redis command to pop from list","completion":"LPOP mylist;"}
{"prompt":"Explain Cassandra replication","completion":"Cassandra replication duplicates data across nodes based on a replication factor, ensuring availability and fault tolerance."}
{"prompt":"How to learn calligraphy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL query to use regex","completion":"SELECT * FROM table WHERE column ~ 'pattern';"}
{"prompt":"SQL query to find rows with min per group","completion":"SELECT t1.* FROM table t1 WHERE t1.value = (SELECT MIN(t2.value) FROM table t2 WHERE t2.group = t1.group);"}
{"prompt":"MongoDB query to update nested field","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { 'nested.field': 'value' } });"}
{"prompt":"What's neuroscience?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to select with order","completion":"SELECT * FROM keyspace.table WHERE id = key ORDER BY column ASC;"}
{"prompt":"SQL query to use EXISTS","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table2.id = table1.id);"}
{"prompt":"Redis command to get random set member","completion":"SRANDMEMBER myset;"}
{"prompt":"How to learn pottery?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find paths of specific length","completion":"MATCH p=(n:Node)-[:REL*2]->(m) RETURN p;"}
{"prompt":"SQL query to use IN operator","completion":"SELECT * FROM table WHERE column IN ('value1', 'value2');"}
{"prompt":"MongoDB query to find by array size","completion":"db.collection.find({ array_field: { $size: 3 } });"}
{"prompt":"What's genetic engineering?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to create a partitioned table","completion":"CREATE TABLE table (id INT, date DATE) PARTITION BY RANGE (date);"}
{"prompt":"Redis command to set hash field","completion":"HSET myhash field value;"}
{"prompt":"Explain Neo4j indexes","completion":"Neo4j indexes improve query performance by indexing node or relationship properties, e.g., CREATE INDEX ON :Label(property);"}
{"prompt":"How to learn surfing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL query to use ILIKE","completion":"SELECT * FROM table WHERE column ILIKE '%pattern%';"}
{"prompt":"SQL query to use LAG function","completion":"SELECT column, LAG(value) OVER (ORDER BY date) FROM table;"}
{"prompt":"MongoDB query to find by ObjectId","completion":"db.collection.find({ _id: ObjectId('123') });"}
{"prompt":"What's cryptocurrency?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to use TTL","completion":"INSERT INTO keyspace.table (id, value) VALUES (1, 'val') USING TTL 3600;"}
{"prompt":"SQL query to use LEAD function","completion":"SELECT column, LEAD(value) OVER (ORDER BY date) FROM table;"}
{"prompt":"Redis command to get list range","completion":"LRANGE mylist 0 -1;"}
{"prompt":"How to learn sculpting?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find all relationships of a node","completion":"MATCH (n:Node {id: 'value'})-[r]-() RETURN r;"}
{"prompt":"SQL query to use BETWEEN operator","completion":"SELECT * FROM table WHERE column BETWEEN 10 AND 20;"}
{"prompt":"MongoDB query to find by multiple array values","completion":"db.collection.find({ array_field: { $all: ['value1', 'value2'] } });"}
{"prompt":"What's space exploration?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to create a temporary table","completion":"CREATE TEMPORARY TABLE temp_table (id INT, name VARCHAR(50));"}
{"prompt":"Redis command to add to sorted set with score","completion":"ZADD myset 10 'item';"}
{"prompt":"Explain SQL injection","completion":"SQL injection is a security vulnerability where malicious SQL code is inserted into queries, potentially exposing or altering data."}
{"prompt":"How to learn hiking?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL query to use DISTINCT ON","completion":"SELECT DISTINCT ON (column1) column1, column2 FROM table;"}
{"prompt":"SQL query to use GROUP_CONCAT","completion":"SELECt group_column, GROUP_CONCAT(value) FROM table GROUP BY group_column;"}
{"prompt":"MongoDB query to find documents with missing field","completion":"db.collection.find({ field: { $exists: false } });"}
{"prompt":"What's psychology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to select with clustering key","completion":"SELECT * FROM keyspace.table WHERE partition_key = value AND clustering_key > value;"}
{"prompt":"SQL query to use RANK function","completion":"SELECT column, Rank() OVER (PARTITION BY group_column ORDER BY value) FROM table;"}
{"prompt":"Redis command to remove from set","completion":"SREM myset 'item';"}
{"prompt":"How to learn birdwatching?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find nodes with no relationships","completion":"MATCH (n:Node) WHERE NOT (n)--() RETURN n;"}
{"prompt":"SQL query to use CURRENT_TIMESTAMP","completion":"SELECT CURRENT_TIMESTAMP;"}
{"prompt":"MongoDB query to find by date before","completion":"db.collection.find({ date: { $lt: ISODate('2023-01-01') } });"}
{"prompt":"What's sociology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to use STRING_AGG","completion":"SELECT group_column, STRING_AGG(value, ',') FROM table GROUP BY group_column;"}
{"prompt":"Redis command to get hash field","completion":"HGET myhash field;"}
{"prompt":"Explain Cassandra consistency levels","completion":"Cassandra consistency levels (e.g., ONE, QUORUM, ALL) control how many nodes must agree for a read or write to succeed."}
{"prompt":"How to learn kayaking?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL query to use generated columns","completion":"CREATE TABLE table (id INT, value INT, double_value INT GENERATED ALWAYS AS (value * 2) STORED);"}
{"prompt":"SQL query to use DENSE_RANK","completion":"SELECT column, DENSE_RANK() OVER (PARTITION BY group_column ORDER BY value) FROM table;"}
{"prompt":"MongoDB query to find by partial match","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"What's anthropology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to use counter","completion":"UPDATE keyspace.table SET counter_value = counter_value + 1 WHERE id = key;"}
{"prompt":"SQL query to use NTILE","completion":"SELECT column, NTILE(4) OVER (ORDER BY value) FROM table;"}
{"prompt":"Redis command to get all hash fields","completion":"HKEYS myhash;"}
{"prompt":"How to learn rock climbing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find nodes by label","completion":"MATCH (n:Label) RETURN n;"}
{"prompt":"SQL query to use WITH clause","completion":"WITH subquery AS (SELECT * FROM table WHERE condition) SELECT * FROM subquery;"}
{"prompt":"MongoDB query to find by array not empty","completion":"db.collection.find({ array_field: { $ne: [] } });"}
{"prompt":"What's linguistics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to use FIRST_VALUE","completion":"SELECT column, FIRST_VALUE(value) OVER (PARTITION BY group_column ORDER BY value) FROM table;"}
{"prompt":"Redis command to add multiple sorted set members","completion":"ZADD myset 1 'item1' 2 'item2' 3 'item3';"}
{"prompt":"Explain PostgreSQL materialized views","completion":"Materialized views in PostgreSQL store query results as physical tables, refreshed periodically for performance."}
{"prompt":"How to learn skateboarding?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to select with IN clause","completion":"SELECT * FROM keyspace.table WHERE id IN (value1, value2);"}
{"prompt":"SQL query to use LAST_VALUE","completion":"SELECT column, LAST_VALUE(value) OVER (PARTITION BY group_column ORDER BY value) FROM table;"}
{"prompt":"MongoDB query to find by exact array match","completion":"db.collection.find({ array_field: ['value1', 'value2'] });"}
{"prompt":"What's marine biology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Redis command to get sorted set score","completion":"ZSCORE myset 'item';"}
{"prompt":"SQL query to use ROW_NUMBER with partition","completion":"SELECT column, ROW_NUMBER() OVER (PARTITION BY group_column ORDER BY value) FROM table;"}
{"prompt":"Explain MongoDB aggregation pipeline","completion":"The aggregation pipeline processes documents through stages like $match, $group, $sort to transform and analyze data."}
{"prompt":"How to learn snowboarding?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find nodes with specific relationship type","completion":"MATCH (n)-[r:REL_TYPE]->(m) RETURN n, m;"}
{"prompt":"SQL query to use CURRENT_TIME","completion":"SELECT CURRENT_TIME;"}
{"prompt":"MongoDB query to find by null field","completion":"db.collection.find({ field: null });"}
{"prompt":"What's paleontology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to use ALLOW FILTERING","completion":"SELECT * FROM keyspace.table WHERE non_key_column = value ALLOW FILTERING;"}
{"prompt":"SQL query to use CUME_DIST","completion":"SELECT column, CUME_DIST() OVER (ORDER BY value) FROM table;"}
{"prompt":"Redis command to remove sorted set member","completion":"ZREM myset 'item';"}
{"prompt":"How to learn archery?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL query to use hstore","completion":"SELECT hstore_column->'key' FROM table;"}
{"prompt":"SQL query to use PERCENT_RANK","completion":"SELECT column, PERCENT_RANK() OVER (ORDER BY value) FROM table;"}
{"prompt":"MongoDB query to find by greater than equal","completion":"db.collection.find({ field: { $gte: 10 } });"}
{"prompt":"What's astrophysics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find nodes with multiple labels","completion":"MATCH (n:Label1:Label2) RETURN n;"}
{"prompt":"SQL query to use EXTRACT","completion":"SELECT EXTRACT(YEAR FROM date_column) FROM table;"}
{"prompt":"Redis command to get sorted set rank","completion":"ZRANK myset 'item';"}
{"prompt":"How to learn fencing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to use WRITETIME","completion":"SELECT WRITETIME(column) FROM keyspace.table WHERE id = key;"}
{"prompt":"SQL query to use DATE_TRUNC","completion":"SELECT DATE_TRUNC('month', date_column) FROM table;"}
{"prompt":"MongoDB query to find by less than equal","completion":"db.collection.find({ field: { $lte: 10 } });"}
{"prompt":"What's ecology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to use INTERVAL","completion":"SELECT date_column + INTERVAL '1 day' FROM table;"}
{"prompt":"Redis command to get sorted set range by rank","completion":"ZRANGE myset 0 9;"}
{"prompt":"Explain Cassandra data modeling","completion":"Cassandra data modeling designs tables based on query patterns, using denormalization and partition keys for efficiency."}
{"prompt":"How to learn gymnastics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find all paths between nodes","completion":"MATCH p=(start:Node)-[*]-(end:Node) RETURN p;"}
{"prompt":"SQL query to use NULLIF","completion":"SELECT NULLIF(column, 'value') FROM table;"}
{"prompt":"MongoDB query to find by not equal","completion":"db.collection.find({ field: { $ne: 'value' } });"}
{"prompt":"What's geology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to use IF NOT EXISTS","completion":"INSERT INTO keyspace.table (id, value) VALUES (1, 'val') IF NOT EXISTS;"}
{"prompt":"SQL query to use GREATEST","completion":"SELECT GREATEST(column1, column2) FROM table;"}
{"prompt":"Redis command to get sorted set count","completion":"ZCARD myset;"}
{"prompt":"How to learn martial arts?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL query to use tsvector","completion":"SELECT to_tsvector('english', column) FROM table;"}
{"prompt":"SQL query to use LEAST","completion":"SELECT LEAST(column1, column2) FROM table;"}
{"prompt":"MongoDB query to find by array contains any","completion":"db.collection.find({ array_field: { $in: ['value1', 'value2'] } });"}
{"prompt":"What's meteorology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find nodes with specific property value","completion":"MATCH (n:Node {property: 'value'}) RETURN n;"}
{"prompt":"SQL query to use AGE function","completion":"SELECT AGE(date_column) FROM table;"}
{"prompt":"Redis command to increment hash field","completion":"HINCRBY myhash field 1;"}
{"prompt":"How to learn diving?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to use SELECT DISTINCT","completion":"SELECT DISTINCT partition_key FROM keyspace.table;"}
{"prompt":"SQL query to use TO_CHAR","completion":"SELECT TO_CHAR(date_column, 'YYYY-MM-DD') FROM table;"}
{"prompt":"MongoDB query to find by array contains all","completion":"db.collection.find({ array_field: { $all: ['value1', 'value2'] } });"}
{"prompt":"What's oceanography?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to use MAKE_DATE","completion":"SELECT MAKE_DATE(year, month, day) FROM table;"}
{"prompt":"Redis command to get hash length","completion":"HLEN myhash;"}
{"prompt":"Explain PostgreSQL foreign data wrappers","completion":"Foreign Data Wrappers (FDW) in PostgreSQL allow querying external data sources as if they were local tables."}
{"prompt":"How to learn embroidery?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j query to find nodes created after a date","completion":"MATCH (n:Node) WHERE n.created_at > date('2023-01-01') RETURN n;"}
{"prompt":"SQL query to use TO_TIMESTAMP","completion":"SELECT TO_TIMESTAMP('2023-01-01 12:00:00', 'YYYY-MM-DD HH24:MI:SS');"}
{"prompt":"MongoDB query to find by array size greater than","completion":"db.collection.find({ array_field: { $size: { $gt: 3 } } });"}
{"prompt":"What's volcanology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra query to use SELECT COUNT","completion":"SELECT COUNT(*) FROM keyspace.table WHERE condition;"}
{"prompt":"SQL query to use TO_DATE","completion":"SELECT TO_DATE('2023-01-01', 'YYYY-MM-DD') FROM table;"}
{"prompt":"Redis command to get all keys matching pattern","completion":"KEYS pattern*;"}
{"prompt":"How to learn origami?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL query to use ARRAY_AGG","completion":"SELECT ARRAY_AGG(column) FROM table GROUP BY group_column;"}
{"prompt":"How to select all records from a table called 'products' in SQL?","completion":"SELECT * FROM products;"}
{"prompt":"Explain the difference between INNER JOIN and LEFT JOIN in SQL.","completion":"INNER JOIN returns rows with matching values in both tables, while LEFT JOIN includes all rows from the left table, with NULLs for non-matching rows from the right table. Example: SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id; vs SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to set a key-value pair in Redis?","completion":"SET mykey value;"}
{"prompt":"Write a SQL query to count employees by department.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"What's a primary key in SQL?","completion":"A primary key uniquely identifies each record in a table and cannot contain NULL values."}
{"prompt":"Write a MongoDB query to update a document's field.","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { field: 'new_value' } });"}
{"prompt":"How to create a table in SQL for storing customer data?","completion":"CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));"}
{"prompt":"Write a Neo4j query to find all nodes with a specific property.","completion":"MATCH (n { property: 'value' }) RETURN n;"}
{"prompt":"How to delete records in SQL where age < 18?","completion":"DELETE FROM table WHERE age < 18;"}
{"prompt":"Explain indexing in MongoDB.","completion":"Indexing in MongoDB creates data structures to improve query performance. Example: db.collection.createIndex({ field: 1 });"}
{"prompt":"Write a SQL query to find the highest salary in each department.","completion":"SELECT department, MAX(salary) FROM employees GROUP BY department;"}
{"prompt":"How to use Redis to store a list?","completion":"LPUSH mylist value1; LPUSH mylist value2;"}
{"prompt":"What's a foreign key in SQL?","completion":"A foreign key links data in one table to the primary key of another, enforcing referential integrity."}
{"prompt":"Write a MongoDB query to sort documents by date descending.","completion":"db.collection.find().sort({ date: -1 });"}
{"prompt":"Write a SQL query for a LEFT JOIN between orders and customers.","completion":"SELECT * FROM orders LEFT JOIN customers ON orders.customer_id = customers.id;"}
{"prompt":"Explain sharding in NoSQL databases.","completion":"Sharding distributes data across multiple servers to improve scalability and performance."}
{"prompt":"Write a Cassandra query to insert a record.","completion":"INSERT INTO keyspace.table (id, name) VALUES (1, 'John');"}
{"prompt":"How to use SQL GROUP BY with HAVING?","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"Write a Neo4j query to create a relationship.","completion":"MATCH (a:Node {id: 1}), (b:Node {id: 2}) CREATE (a)-[:RELATION]->(b);"}
{"prompt":"How to update multiple records in SQL?","completion":"UPDATE table SET column = 'value' WHERE condition;"}
{"prompt":"Explain ACID properties in databases.","completion":"ACID stands for Atomicity, Consistency, Isolation, Durability, ensuring reliable transactions."}
{"prompt":"Write a SQL query to find duplicate emails.","completion":"SELECT email, COUNT(*) FROM users GROUP BY email HAVING COUNT(*) > 1;"}
{"prompt":"Explain normalization in SQL.","completion":"Normalization reduces data redundancy by organizing tables into normal forms (1NF, 2NF, 3NF)."}
{"prompt":"Write a MongoDB query for text search.","completion":"db.collection.find({ $text: { $search: 'keyword' } });"}
{"prompt":"What's a graph database used for?","completion":"Graph databases like Neo4j model complex relationships, e.g., social networks or fraud detection."}
{"prompt":"Write a SQL query to join three tables.","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id JOIN table3 ON table2.id = table3.id;"}
{"prompt":"Write a Cassandra query to select by partition key.","completion":"SELECT * FROM keyspace.table WHERE partition_key = 'value';"}
{"prompt":"How to create an index in SQL?","completion":"CREATE INDEX idx_name ON table (column);"}
{"prompt":"Explain CAP theorem.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, Partition Tolerance."}
{"prompt":"Write a Redis command to get all keys.","completion":"KEYS *;"}
{"prompt":"Write a SQL query to find second-highest salary.","completion":"SELECT MAX(salary) FROM employees WHERE salary < (SELECT MAX(salary) FROM employees);"}
{"prompt":"How to use MongoDB $lookup?","completion":"db.collection.aggregate([{ $lookup: { from: 'other', localField: 'field', foreignField: 'field', as: 'joined' } }]);"}
{"prompt":"Explain SQL views.","completion":"A view is a virtual table based on a query: CREATE VIEW view_name AS SELECT * FROM table;"}
{"prompt":"Write a Neo4j query to find shortest path.","completion":"MATCH p = shortestPath((start:Node)-[*]-(end:Node)) RETURN p;"}
{"prompt":"How to expire a key in Redis?","completion":"SET key value EX 3600;"}
{"prompt":"Explain NoSQL document stores.","completion":"Document stores like MongoDB store data as JSON-like documents with flexible schemas."}
{"prompt":"Write a SQL query to drop a table.","completion":"DROP TABLE table_name;"}
{"prompt":"Write a Cassandra query to create a table.","completion":"CREATE TABLE keyspace.table (id UUID PRIMARY KEY, name TEXT);"}
{"prompt":"Explain SQL subqueries.","completion":"A subquery is a query nested inside another: SELECT * FROM table WHERE id IN (SELECT id FROM other_table);"}
{"prompt":"Write a Neo4j query to delete a node.","completion":"MATCH (n:Node {id: 'value'}) DELETE n;"}
{"prompt":"How to use SQL CASE statement?","completion":"SELECT CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"Write a MongoDB query to limit results.","completion":"db.collection.find().limit(10);"}
{"prompt":"Explain Redis sorted sets.","completion":"Sorted sets store values with scores for ranking: ZADD key score member;"}
{"prompt":"Write a SQL query for full outer join.","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to create a MongoDB replica set?","completion":"Configure multiple mongod instances with --replSet and initiate with rs.initiate();"}
{"prompt":"Explain SQL constraints.","completion":"Constraints enforce rules: PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL, CHECK."}
{"prompt":"Write a Redis command to increment a value.","completion":"INCR key;"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization embeds related data in a single document to optimize read performance."}
{"prompt":"Write a Neo4j query to merge nodes.","completion":"MERGE (n:Node {id: 'value'}) ON CREATE SET n.name = 'name';"}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT column FROM table) AS source PIVOT (COUNT(column) FOR column IN ('value1', 'value2'));"}
{"prompt":"How to create a secondary index in Cassandra?","completion":"CREATE INDEX idx_name ON keyspace.table (column);"}
{"prompt":"Explain SQL window functions.","completion":"Window functions perform calculations across rows: SELECT ROW_NUMBER() OVER (ORDER BY salary) FROM employees;"}
{"prompt":"Write a MongoDB query for geospatial data.","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"How to use Redis transactions?","completion":"MULTI; SET key value; EXEC;"}
{"prompt":"Explain BASE in NoSQL.","completion":"BASE prioritizes Basic Availability, Soft state, Eventual consistency over strict ACID properties."}
{"prompt":"Write a Neo4j query to find connected nodes.","completion":"MATCH (n:Node)-[:REL]->(m) RETURN n, m;"}
{"prompt":"Write a SQL query to rename a column.","completion":"ALTER TABLE table_name RENAME COLUMN old_name TO new_name;"}
{"prompt":"How to perform bulk insert in MongoDB?","completion":"db.collection.insertMany([{doc1}, {doc2}]);"}
{"prompt":"Explain SQL triggers.","completion":"Triggers execute automatically on events: CREATE TRIGGER name BEFORE INSERT ON table FOR EACH ROW EXECUTE PROCEDURE func();"}
{"prompt":"Write a Redis command to get hash fields.","completion":"HGETALL key;"}
{"prompt":"How to use MongoDB $in operator?","completion":"db.collection.find({ field: { $in: ['value1', 'value2'] } });"}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores like Redis map keys to values for fast retrieval, ideal for caching."}
{"prompt":"Write a Cassandra batch query.","completion":"BEGIN BATCH INSERT INTO table (id, name) VALUES (1, 'John'); UPDATE table SET name = 'Jane' WHERE id = 2; APPLY BATCH;"}
{"prompt":"Write a SQL query to join with a condition.","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id AND table2.value > 100;"}
{"prompt":"How to use PostgreSQL JSONB?","completion":"SELECT * FROM table WHERE jsonb_column @> '{\"key\": \"value\"}';"}
{"prompt":"Explain MongoDB sharding.","completion":"Sharding splits data across servers using a shard key to balance load."}
{"prompt":"Write a SQL query to find records between dates.","completion":"SELECT * FROM table WHERE date BETWEEN '2023-01-01' AND '2023-12-31';"}
{"prompt":"How to use Redis sorted set range?","completion":"ZRANGE key 0 -1 WITHSCORES;"}
{"prompt":"Explain SQL UNION vs UNION ALL.","completion":"UNION combines distinct rows from queries; UNION ALL includes duplicates."}
{"prompt":"Write a MongoDB query to skip results.","completion":"db.collection.find().skip(10);"}
{"prompt":"Write a SQL query to alter table add column.","completion":"ALTER TABLE table ADD column_name TYPE;"}
{"prompt":"How to create a MongoDB text index?","completion":"db.collection.createIndex({ field: 'text' });"}
{"prompt":"Explain SQL self-join.","completion":"A self-join joins a table to itself: SELECT a.name, b.name FROM table a JOIN table b ON a.id = b.parent_id;"}
{"prompt":"Write a Redis command to check key existence.","completion":"EXISTS key;"}
{"prompt":"Write a SQL query to group by multiple columns.","completion":"SELECT col1, col2, COUNT(*) FROM table GROUP BY col1, col2;"}
{"prompt":"Explain Cassandra partition keys.","completion":"Partition keys determine data distribution across nodes in Cassandra for efficient querying."}
{"prompt":"Write a Neo4j query to update a property.","completion":"MATCH (n:Node {id: 'value'}) SET n.property = 'new_value';"}
{"prompt":"Write a SQL query to find records with LIKE.","completion":"SELECT * FROM table WHERE column LIKE '%pattern%';"}
{"prompt":"How to use Redis pipelines?","completion":"client.pipeline().set('key', 'value').get('key').execute();"}
{"prompt":"Explain SQL stored procedures.","completion":"Stored procedures are precompiled SQL code: CREATE PROCEDURE name AS BEGIN ... END;"}
{"prompt":"Write a MongoDB query to find by regex.","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"How to travel?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find max value per group.","completion":"SELECT department, MAX(salary) FROM employees GROUP BY department;"}
{"prompt":"How to create a Redis hash?","completion":"HMSET key field1 value1 field2 value2;"}
{"prompt":"Explain NoSQL column-family stores.","completion":"Column-family stores like Cassandra store data in columns for high write throughput."}
{"prompt":"Write a Neo4j query to find all paths.","completion":"MATCH p = (start:Node)-[*]->(end:Node) RETURN p;"}
{"prompt":"Write a SQL query to truncate a table.","completion":"TRUNCATE TABLE table_name;"}
{"prompt":"How to use MongoDB $all operator?","completion":"db.collection.find({ field: { $all: ['value1', 'value2'] } });"}
{"prompt":"Explain SQL indexes.","completion":"Indexes speed up queries by creating data structures for faster lookups: CREATE INDEX idx ON table(column);"}
{"prompt":"Write a Redis command to get list length.","completion":"LLEN mylist;"}
{"prompt":"Write a SQL query to find records with IN.","completion":"SELECT * FROM table WHERE id IN (1, 2, 3);"}
{"prompt":"How to use MongoDB aggregation $match?","completion":"db.collection.aggregate([{ $match: { field: 'value' } }]);"}
{"prompt":"Explain Neo4j Cypher.","completion":"Cypher is Neo4j's query language for graph operations, using patterns like MATCH and CREATE."}
{"prompt":"Write a Cassandra query to update a record.","completion":"UPDATE keyspace.table SET column = 'value' WHERE id = 1;"}
{"prompt":"Write a SQL query to calculate sum.","completion":"SELECT SUM(column) FROM table;"}
{"prompt":"How to use Redis bit operations?","completion":"SETBIT key offset value; GETBIT key offset;"}
{"prompt":"Explain SQL cross join.","completion":"Cross join returns all combinations: SELECT * FROM table1 CROSS JOIN table2;"}
{"prompt":"Write a MongoDB query to delete documents.","completion":"db.collection.deleteMany({ field: 'value' });"}
{"prompt":"What's a workout routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find distinct values.","completion":"SELECT DISTINCT column FROM table;"}
{"prompt":"How to use MongoDB $elemMatch?","completion":"db.collection.find({ array: { $elemMatch: { field: 'value' } } });"}
{"prompt":"Explain SQL transactions.","completion":"Transactions ensure ACID: BEGIN TRANSACTION; INSERT ...; COMMIT;"}
{"prompt":"Write a Neo4j query to count nodes.","completion":"MATCH (n) RETURN COUNT(n);"}
{"prompt":"Write a SQL query to find records by year.","completion":"SELECT * FROM table WHERE YEAR(date_column) = 2023;"}
{"prompt":"How to use Redis geospatial commands?","completion":"GEOADD key longitude latitude member; GEORADIUS key lon lat radius m;"}
{"prompt":"Explain MongoDB capped collections.","completion":"Capped collections have fixed size, automatically overwriting old data when full."}
{"prompt":"Write a Cassandra query to drop a table.","completion":"DROP TABLE keyspace.table;"}
{"prompt":"Write a SQL query to order by multiple columns.","completion":"SELECT * FROM table ORDER BY column1 ASC, column2 DESC;"}
{"prompt":"How to use MongoDB $push?","completion":"db.collection.updateOne({ _id: 'id' }, { $push: { array: 'value' } });"}
{"prompt":"Explain SQL materialized views.","completion":"Materialized views store query results physically: CREATE MATERIALIZED VIEW view AS SELECT ...;"}
{"prompt":"Write a Redis command to pop from list.","completion":"LPOP mylist;"}
{"prompt":"Write a SQL query to find min value.","completion":"SELECT MIN(column) FROM table;"}
{"prompt":"How to use MongoDB $group?","completion":"db.collection.aggregate([{ $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"Explain NoSQL eventual consistency.","completion":"Eventual consistency means updates propagate over time, prioritizing availability."}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH ()-[r:REL]->() WHERE r.id = 'value' DELETE r;"}
{"prompt":"Describe the solar system.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to create a view.","completion":"CREATE VIEW view_name AS SELECT * FROM table WHERE condition;"}
{"prompt":"How to use Redis streams?","completion":"XADD stream * field value; XREAD STREAMS stream 0;"}
{"prompt":"Explain SQL partitioning.","completion":"Partitioning splits large tables into smaller pieces for better performance."}
{"prompt":"Write a MongoDB query to find by ObjectId.","completion":"db.collection.find({ _id: ObjectId('123') });"}
{"prompt":"Write a SQL query to find records with NULL.","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"How to use MongoDB $inc?","completion":"db.collection.updateOne({ _id: 'id' }, { $inc: { counter: 1 } });"}
{"prompt":"Explain Cassandra clustering keys.","completion":"Clustering keys determine the sort order of data within a partition."}
{"prompt":"Write a Neo4j query to find node properties.","completion":"MATCH (n:Node) RETURN n, properties(n);"}
{"prompt":"Write a SQL query to combine two tables.","completion":"SELECT * FROM table1 UNION SELECT * FROM table2;"}
{"prompt":"How to use Redis sets?","completion":"SADD myset value1 value2; SMEMBERS myset;"}
{"prompt":"Explain SQL full-text search.","completion":"Full-text search indexes text for fast searches: SELECT * FROM table WHERE MATCH(column) AGAINST('term');"}
{"prompt":"Write a MongoDB query to project fields.","completion":"db.collection.find({}, { field1: 1, field2: 1, _id: 0 });"}
{"prompt":"How to write a song?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with NOT IN.","completion":"SELECT * FROM table WHERE id NOT IN (1, 2, 3);"}
{"prompt":"How to use MongoDB $size?","completion":"db.collection.find({ array: { $size: 3 } });"}
{"prompt":"Explain SQL temporary tables.","completion":"Temporary tables exist for a session: CREATE TEMPORARY TABLE temp_table (id INT);"}
{"prompt":"Write a Redis command to get set members.","completion":"SMEMBERS myset;"}
{"prompt":"Write a SQL query to find records with EXISTS.","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table2.id = table1.id);"}
{"prompt":"How to use MongoDB $unset?","completion":"db.collection.updateMany({}, { $unset: { field: '' } });"}
{"prompt":"Explain NoSQL wide-column stores.","completion":"Wide-column stores like Cassandra store data in flexible columns for scalability."}
{"prompt":"Write a Neo4j query to create a node.","completion":"CREATE (n:Node {id: 'value', name: 'name'});"}
{"prompt":"Write a SQL query to calculate median.","completion":"SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY column) FROM table;"}
{"prompt":"How to use Redis expire at?","completion":"SET key value; EXPIREAT key timestamp;"}
{"prompt":"Explain MongoDB transactions.","completion":"MongoDB supports transactions on replica sets: db.getMongo().startSession().startTransaction();"}
{"prompt":"Write a Cassandra query to select all.","completion":"SELECT * FROM keyspace.table;"}
{"prompt":"Write a SQL query to find records with BETWEEN.","completion":"SELECT * FROM table WHERE column BETWEEN 10 AND 20;"}
{"prompt":"How to use MongoDB $nin?","completion":"db.collection.find({ field: { $nin: ['value1', 'value2'] } });"}
{"prompt":"Explain SQL correlated subquery.","completion":"A correlated subquery references outer query: SELECT * FROM table1 t1 WHERE EXISTS (SELECT 1 FROM table2 t2 WHERE t2.id = t1.id);"}
{"prompt":"Write a Redis command to get hash value.","completion":"HGET key field;"}
{"prompt":"Write a SQL query to find records with OR.","completion":"SELECT * FROM table WHERE column1 = 'value' OR column2 = 'value';"}
{"prompt":"How to use MongoDB $or?","completion":"db.collection.find({ $or: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"Explain SQL check constraint.","completion":"CHECK ensures column values meet conditions: CREATE TABLE table (col INT CHECK (col > 0));"}
{"prompt":"Write a Neo4j query to find neighbors.","completion":"MATCH (n:Node)-[:REL]->(m) WHERE n.id = 'value' RETURN m;"}
{"prompt":"Write a SQL query to find records with AND.","completion":"SELECT * FROM table WHERE column1 = 'value' AND column2 = 'value';"}
{"prompt":"How to use MongoDB $and?","completion":"db.collection.find({ $and: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"Write a Cassandra query to delete a record.","completion":"DELETE FROM keyspace.table WHERE id = 'value';"}
{"prompt":"What's quantum physics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with LIMIT.","completion":"SELECT * FROM table LIMIT 10;"}
{"prompt":"How to use MongoDB $slice?","completion":"db.collection.find({}, { array: { $slice: [2, 3] } });"}
{"prompt":"Explain SQL unique constraint.","completion":"UNIQUE ensures no duplicate values: CREATE TABLE table (col INT UNIQUE);"}
{"prompt":"Write a Neo4j query to find all relationships.","completion":"MATCH ()-[r]->() RETURN r;"}
{"prompt":"Write a SQL query to find records with ORDER BY.","completion":"SELECT * FROM table ORDER BY column ASC;"}
{"prompt":"How to use MongoDB $pull?","completion":"db.collection.updateOne({ _id: 'id' }, { $pull: { array: 'value' } });"}
{"prompt":"Explain SQL default constraint.","completion":"DEFAULT sets a default value: CREATE TABLE table (col INT DEFAULT 0);"}
{"prompt":"Write a Redis command to get list range.","completion":"LRANGE mylist 0 -1;"}
{"prompt":"Write a SQL query to find records with JOIN.","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to use MongoDB $gt?","completion":"db.collection.find({ field: { $gt: 100 } });"}
{"prompt":"Explain NoSQL time-series databases.","completion":"Time-series databases like InfluxDB optimize for timestamped data."}
{"prompt":"Write a Cassandra query to create keyspace.","completion":"CREATE KEYSPACE keyspace_name WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};"}
{"prompt":"Write a SQL query to find records with NOT LIKE.","completion":"SELECT * FROM table WHERE column NOT LIKE '%pattern%';"}
{"prompt":"Write a SQL query to find the second-highest salary.","completion":"SELECT MAX(salary) FROM employees WHERE salary < (SELECT MAX(salary) FROM employees);"}
{"prompt":"How to use MongoDB $exists?","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"Write a MongoDB query for regex search.","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"How to use MongoDB $all?","completion":"db.collection.find({ field: { $all: ['value1', 'value2'] } });"}
{"prompt":"Write a SQL query to find employees with salary < 30000.","completion":"SELECT * FROM employees WHERE salary < 30000;"}
{"prompt":"How to use MongoDB $gte operator?","completion":"db.collection.find({ field: { $gte: 100 } });"}
{"prompt":"Explain SQL composite keys.","completion":"Composite keys use multiple columns as a primary key: CREATE TABLE table (col1 INT, col2 INT, PRIMARY KEY (col1, col2));"}
{"prompt":"Write a Redis command to delete a key.","completion":"DEL key;"}
{"prompt":"What's a good recipe for dinner?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with multiple conditions.","completion":"SELECT * FROM table WHERE col1 = 'value1' AND col2 > 10 OR col3 IS NULL;"}
{"prompt":"How to use MongoDB $lte operator?","completion":"db.collection.find({ field: { $lte: 100 } });"}
{"prompt":"Explain SQL foreign key constraints.","completion":"Foreign keys enforce referential integrity: CREATE TABLE table (id INT, FOREIGN KEY (id) REFERENCES parent_table(id));"}
{"prompt":"What's the history of jazz music?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with date functions.","completion":"SELECT * FROM table WHERE date_column > CURRENT_DATE - INTERVAL '1 year';"}
{"prompt":"How to use MongoDB $ne operator?","completion":"db.collection.find({ field: { $ne: 'value' } });"}
{"prompt":"Explain SQL check constraints.","completion":"CHECK constraints enforce conditions: CREATE TABLE table (age INT CHECK (age >= 18));"}
{"prompt":"Write a Redis command to get key TTL.","completion":"TTL key;"}
{"prompt":"What's a good exercise routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with subquery in WHERE.","completion":"SELECT * FROM table WHERE col IN (SELECT col FROM another_table WHERE condition);"}
{"prompt":"How to use MongoDB $addToSet?","completion":"db.collection.updateOne({ _id: 'id' }, { $addToSet: { array: 'value' } });"}
{"prompt":"Explain Cassandra materialized views.","completion":"Materialized views in Cassandra are tables populated by queries for specific access patterns."}
{"prompt":"Write a Neo4j query to find paths of specific length.","completion":"MATCH p = (start:Node)-[:REL*2]->(end:Node) RETURN p;"}
{"prompt":"Write a SQL query to find records with aggregate functions.","completion":"SELECT department, AVG(salary), MAX(salary) FROM employees GROUP BY department;"}
{"prompt":"How to use Redis hyperloglog?","completion":"PFADD key value; PFCOUNT key;"}
{"prompt":"Explain SQL table partitioning.","completion":"Table partitioning divides large tables into smaller, more manageable pieces for performance."}
{"prompt":"Write a MongoDB query to find by array field.","completion":"db.collection.find({ array_field: 'value' });"}
{"prompt":"How to learn painting?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with CASE in SELECT.","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS category FROM employees;"}
{"prompt":"How to use MongoDB $geoWithin?","completion":"db.collection.find({ location: { $geoWithin: { $box: [[x1, y1], [x2, y2]] } } });"}
{"prompt":"Explain NoSQL graph databases.","completion":"Graph databases like Neo4j store nodes and relationships for complex network queries."}
{"prompt":"Write a Cassandra query to select by clustering key.","completion":"SELECT * FROM keyspace.table WHERE partition_key = 'value' AND clustering_key = 'value';"}
{"prompt":"Write a SQL query to find records with COALESCE.","completion":"SELECT COALESCE(column, 'default_value') FROM table;"}
{"prompt":"How to use Redis sorted set rank?","completion":"ZRANK key member;"}
{"prompt":"Explain MongoDB write concern.","completion":"Write concern specifies acknowledgment level for write operations, e.g., { w: 'majority' }."}
{"prompt":"Write a SQL query to find records with NULLIF.","completion":"SELECT NULLIF(column, 'value') FROM table;"}
{"prompt":"How to use MongoDB $max?","completion":"db.collection.aggregate([{ $group: { _id: null, maxValue: { $max: '$field' } } }]);"}
{"prompt":"Explain SQL sequence.","completion":"Sequences generate unique numbers: CREATE SEQUENCE seq_name START WITH 1;"}
{"prompt":"Write a Redis command to get set intersection.","completion":"SINTER set1 set2;"}
{"prompt":"Write a SQL query to find records with GREATEST.","completion":"SELECT GREATEST(col1, col2, col3) FROM table;"}
{"prompt":"How to use MongoDB $min?","completion":"db.collection.aggregate([{ $group: { _id: null, minValue: { $min: '$field' } } }]);"}
{"prompt":"Explain Cassandra lightweight transactions.","completion":"Lightweight transactions use Paxos for conditional updates: UPDATE table SET col = 'value' WHERE id = 1 IF EXISTS;"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship.","completion":"MATCH (n)-[:SPECIFIC_REL]->(m) RETURN n, m;"}
{"prompt":"Write a SQL query to find records with LEAST.","completion":"SELECT LEAST(col1, col2, col3) FROM table;"}
{"prompt":"How to use MongoDB $avg?","completion":"db.collection.aggregate([{ $group: { _id: null, avgValue: { $avg: '$field' } } }]);"}
{"prompt":"Explain SQL generated columns.","completion":"Generated columns compute values: CREATE TABLE table (col INT GENERATED ALWAYS AS (other_col * 2));"}
{"prompt":"Write a Redis command to get set union.","completion":"SUNION set1 set2;"}
{"prompt":"What's a good workout plan?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with DATEADD.","completion":"SELECT * FROM table WHERE date_column < DATEADD(day, -30, CURRENT_DATE);"}
{"prompt":"How to use MongoDB $sortByCount?","completion":"db.collection.aggregate([{ $group: { _id: '$field', count: { $sum: 1 } } }, { $sortByCount: '$field' }]);"}
{"prompt":"Explain NoSQL multi-model databases.","completion":"Multi-model databases support multiple data models like key-value, document, and graph."}
{"prompt":"Write a Cassandra query to select with LIMIT.","completion":"SELECT * FROM keyspace.table LIMIT 10;"}
{"prompt":"What's the history of art?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with DATE_SUB.","completion":"SELECT * FROM table WHERE date_column > DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"prompt":"How to use MongoDB $sample?","completion":"db.collection.aggregate([{ $sample: { size: 5 } }]);"}
{"prompt":"Explain SQL indexed views.","completion":"Indexed views materialize and index query results for performance: CREATE VIEW view WITH SCHEMABINDING AS SELECT ...;"}
{"prompt":"Write a Redis command to get set difference.","completion":"SDIFF set1 set2;"}
{"prompt":"What's a good meditation app?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with DATEDIFF.","completion":"SELECT * FROM table WHERE DATEDIFF(day, date_column, CURRENT_DATE) > 30;"}
{"prompt":"How to use MongoDB $bucket?","completion":"db.collection.aggregate([{ $bucket: { groupBy: '$field', boundaries: [0, 50, 100], default: 'Other' } }]);"}
{"prompt":"Explain SQL common table expressions.","completion":"CTEs provide temporary result sets: WITH cte AS (SELECT * FROM table) SELECT * FROM cte;"}
{"prompt":"Write a Neo4j query to find nodes by property range.","completion":"MATCH (n:Node) WHERE n.property > 10 AND n.property < 20 RETURN n;"}
{"prompt":"What's the history of music?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with EXTRACT.","completion":"SELECT * FROM table WHERE EXTRACT(YEAR FROM date_column) = 2023;"}
{"prompt":"How to use MongoDB $merge?","completion":"db.collection.aggregate([{ $merge: { into: 'target_collection', whenMatched: 'merge', whenNotMatched: 'insert' } }]);"}
{"prompt":"Explain Cassandra data consistency.","completion":"Cassandra offers tunable consistency with levels like ONE, QUORUM, or ALL."}
{"prompt":"Write a Redis command to get sorted set by score.","completion":"ZRANGEBYSCORE key 0 100;"}
{"prompt":"Write a SQL query to find records with NOW().","completion":"SELECT * FROM table WHERE date_column <= NOW();"}
{"prompt":"How to use MongoDB $cond?","completion":"db.collection.aggregate([{ $project: { result: { $cond: { if: { $gt: ['$field', 100] }, then: 'High', else: 'Low' } } } }]);"}
{"prompt":"Explain SQL recursive queries.","completion":"Recursive queries handle hierarchical data: WITH RECURSIVE cte AS (SELECT ... UNION ALL SELECT ...) SELECT * FROM cte;"}
{"prompt":"Write a Neo4j query to find nodes with no relationships.","completion":"MATCH (n) WHERE NOT (n)--() RETURN n;"}
{"prompt":"What's the history of science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with INTERVAL.","completion":"SELECT * FROM table WHERE date_column > CURRENT_DATE - INTERVAL '1 year';"}
{"prompt":"How to use MongoDB $arrayElemAt?","completion":"db.collection.aggregate([{ $project: { first: { $arrayElemAt: ['$array', 0] } } }]);"}
{"prompt":"Explain Redis cluster.","completion":"Redis Cluster distributes data across nodes with sharding and replication."}
{"prompt":"Write a Cassandra query to select with ORDER BY.","completion":"SELECT * FROM keyspace.table WHERE partition_key = 'value' ORDER BY clustering_key DESC;"}
{"prompt":"What's a good coding language?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with CAST.","completion":"SELECT * FROM table WHERE CAST(column AS INTEGER) > 100;"}
{"prompt":"How to use MongoDB $concat?","completion":"db.collection.aggregate([{ $project: { fullName: { $concat: ['$firstName', ' ', '$lastName'] } } }]);"}
{"prompt":"Explain SQL role-based access control.","completion":"RBAC assigns permissions via roles: GRANT SELECT ON table TO role_name;"}
{"prompt":"Write a Neo4j query to find nodes with specific degree.","completion":"MATCH (n) WHERE SIZE((n)--()) = 3 RETURN n;"}
{"prompt":"What's the history of literature?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with CONCAT.","completion":"SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employees;"}
{"prompt":"How to use MongoDB $dateToString?","completion":"db.collection.aggregate([{ $project: { dateStr: { $dateToString: { format: '%Y-%m-%d', date: '$date' } } } }]);"}
{"prompt":"Explain Cassandra token range.","completion":"Token ranges distribute data across nodes based on partition key hashes."}
{"prompt":"Write a Redis command to get sorted set top members.","completion":"ZREVRANGE key 0 9 WITHSCORES;"}
{"prompt":"What's a good yoga routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with TRIM.","completion":"SELECT * FROM table WHERE TRIM(column) = 'value';"}
{"prompt":"How to use MongoDB $ifNull?","completion":"db.collection.aggregate([{ $project: { field: { $ifNull: ['$field', 'default'] } } }]);"}
{"prompt":"Explain SQL auditing and its benefits from denormalization.","completion":"Auditing tracks changes for compliance; denormalization improves query performance by reducing joins."}
{"prompt":"How to list all documents in MongoDB where age is less than 30?","completion":"db.collection.find({ age: { $lt: 30 } });"}
{"prompt":"Explain the difference between SQL INNER JOIN and LEFT JOIN.","completion":"INNER JOIN returns rows with matching values in both tables. LEFT JOIN returns all rows from the left table, with NULLs for non-matching rows in the right table. Example: SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id; vs SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $set: { field: 'new_value' } });"}
{"prompt":"Create a table in SQL for storing customer data.","completion":"CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(50), email VARCHAR(100));"}
{"prompt":"How to query nodes in Neo4j?","completion":"MATCH (n:Node) RETURN n;"}
{"prompt":"What is a primary key in SQL?","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicate values and not NULL."}
{"prompt":"How to insert multiple documents in MongoDB?","completion":"db.collection.insertMany([{ field1: value1 }, { field2: value2 }]);"}
{"prompt":"Recommend a movie.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to join two tables: orders and customers.","completion":"SELECT orders.id, customers.name FROM orders INNER JOIN customers ON orders.customer_id = customers.id;"}
{"prompt":"How to delete a key in Redis?","completion":"DEL key;"}
{"prompt":"Explain normalization in SQL databases.","completion":"Normalization organizes data to reduce redundancy and improve integrity, using forms like 1NF (no repeating groups), 2NF (no partial dependencies), 3NF (no transitive dependencies)."}
{"prompt":"Write a SQL query to find the top 5 highest-paid employees.","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"}
{"prompt":"How to create an index in Cassandra?","completion":"CREATE INDEX ON keyspace.table (column);"}
{"prompt":"What are transactions in SQL?","completion":"Transactions ensure data integrity with ACID properties: Atomicity, Consistency, Isolation, Durability. Example: BEGIN TRANSACTION; UPDATE table SET column = value; COMMIT;"}
{"prompt":"How to use $match in MongoDB aggregation?","completion":"db.collection.aggregate([{ $match: { field: value } }]);"}
{"prompt":"Write a SQL query to delete records older than a year.","completion":"DELETE FROM table WHERE date < DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"prompt":"How to use Redis lists?","completion":"LPUSH list value; RPOP list;"}
{"prompt":"Explain the CAP theorem for NoSQL databases.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, Partition tolerance. NoSQL often prioritizes AP (eventual consistency) or CP."}
{"prompt":"How to sort query results in MongoDB?","completion":"db.collection.find().sort({ field: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"Write a SQL query for average salary by department.","completion":"SELECT department, AVG(salary) FROM employees GROUP BY department;"}
{"prompt":"How to query a graph in Neo4j?","completion":"MATCH (n:Node)-[r:RELATION]->(m:Node) RETURN n, r, m;"}
{"prompt":"How to perform a text search in MongoDB?","completion":"db.collection.find({ $text: { $search: 'term' } });"}
{"prompt":"Explain indexing in databases.","completion":"Indexing creates a data structure to speed up queries by allowing faster lookups, like a book index. Example: CREATE INDEX idx_name ON table(column);"}
{"prompt":"How to use Redis sorted sets?","completion":"ZADD key score member; ZRANGE key 0 -1;"}
{"prompt":"Write a SQL query to update employee salary.","completion":"UPDATE employees SET salary = salary + 1000 WHERE id = 123;"}
{"prompt":"How to create a node in Neo4j?","completion":"CREATE (n:Node { property: value });"}
{"prompt":"What is sharding in NoSQL?","completion":"Sharding splits data across multiple servers to improve scalability and performance."}
{"prompt":"How to use SQL CASE statement?","completion":"SELECT column, CASE WHEN condition THEN result ELSE other END FROM table;"}
{"prompt":"How to insert data in Cassandra?","completion":"INSERT INTO keyspace.table (column1, column2) VALUES (value1, value2);"}
{"prompt":"Explain ACID vs BASE.","completion":"ACID (SQL) ensures strong consistency; BASE (NoSQL) prioritizes availability and eventual consistency."}
{"prompt":"How to expire keys in Redis?","completion":"SET key value EX seconds;"}
{"prompt":"Recommend a book.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain SQL window functions.","completion":"Window functions perform calculations across rows related to the current row. Example: SELECT ROW_NUMBER() OVER (ORDER BY salary) FROM employees;"}
{"prompt":"How to use Redis hashes?","completion":"HMSET key field1 value1 field2 value2; HGETALL key;"}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT column FROM table) PIVOT (SUM(value) FOR column IN (val1, val2));"}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key links a column to a primary key in another table to enforce referential integrity."}
{"prompt":"How to batch insert in Cassandra?","completion":"BEGIN BATCH INSERT INTO table (col1, col2) VALUES (val1, val2); APPLY BATCH;"}
{"prompt":"Write a SQL query for subquery.","completion":"SELECT * FROM table WHERE id IN (SELECT id FROM another_table WHERE condition);"}
{"prompt":"How to find shortest path in Neo4j?","completion":"MATCH p = shortestPath((start:Node)-[*]-(end:Node)) RETURN p;"}
{"prompt":"Explain NoSQL document stores.","completion":"Document stores like MongoDB save data as JSON/BSON, offering flexible schemas for unstructured data."}
{"prompt":"Write a SQL query for LIKE operator.","completion":"SELECT * FROM table WHERE column LIKE '%pattern%';"}
{"prompt":"How to perform geospatial query in MongoDB?","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"How to merge nodes in Neo4j?","completion":"MERGE (n:Node { id: value }) ON CREATE SET n.property = value;"}
{"prompt":"Write a SQL query to calculate total sales by month.","completion":"SELECT MONTH(date) AS month, SUM(amount) FROM sales GROUP BY MONTH(date);"}
{"prompt":"How to use Redis pipeline?","completion":"client.pipeline().set('key', 'value').get('key').execute();"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization embeds related data in a single document to optimize read performance, reducing joins."}
{"prompt":"How to use SQL UNION?","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"Write a SQL query to find max salary.","completion":"SELECT MAX(salary) FROM employees;"}
{"prompt":"How to create a replica set in MongoDB?","completion":"Configure multiple mongod instances with --replSet, then use rs.initiate() and rs.add()."}
{"prompt":"What is a SQL trigger?","completion":"A trigger is a procedure that runs automatically on events like INSERT, UPDATE. Example: CREATE TRIGGER name BEFORE INSERT ON table FOR EACH ROW EXECUTE PROCEDURE func();"}
{"prompt":"How to use Redis sets?","completion":"SADD key member; SMEMBERS key;"}
{"prompt":"How to aggregate in Cassandra?","completion":"Cassandra has limited aggregation; use GROUP BY with caution or process in application code."}
{"prompt":"Explain SQL views vs materialized views.","completion":"Views are virtual tables from queries; materialized views store data physically for performance."}
{"prompt":"Write a SQL query to alter a table.","completion":"ALTER TABLE table ADD column_name TYPE;"}
{"prompt":"How to query full-text search in PostgreSQL?","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('term');"}
{"prompt":"What is eventual consistency in NoSQL?","completion":"Eventual consistency means all nodes eventually reflect updates, prioritizing availability over immediate consistency."}
{"prompt":"Explain quantum mechanics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees with no sales.","completion":"SELECT employees.* FROM employees LEFT JOIN sales ON employees.id = sales.employee_id WHERE sales.id IS NULL;"}
{"prompt":"How to query time-series data in Cassandra?","completion":"Use a table with time-based partition keys, e.g., CREATE TABLE ts_data (time_bucket TEXT, timestamp TIMESTAMP, value INT, PRIMARY KEY (time_bucket, timestamp));"}
{"prompt":"Write a SQL query to get distinct values.","completion":"SELECT DISTINCT column FROM table;"}
{"prompt":"How to use Neo4j relationships?","completion":"CREATE (n:Node)-[:RELATION {property: value}]->(m:Node);"}
{"prompt":"Explain MongoDB sharding.","completion":"Sharding distributes data across servers using a shard key to balance load and scale horizontally."}
{"prompt":"Write a SQL query to calculate running total.","completion":"SELECT id, amount, SUM(amount) OVER (ORDER BY id) AS running_total FROM transactions;"}
{"prompt":"How to use MongoDB $push?","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $push: { array_field: value } });"}
{"prompt":"What is a SQL stored procedure?","completion":"A stored procedure is a precompiled set of SQL statements stored in the database. Example: CREATE PROCEDURE proc_name AS SELECT * FROM table;"}
{"prompt":"How to use Redis geospatial data?","completion":"GEOADD key longitude latitude member; GEORADIUS key lon lat radius m;"}
{"prompt":"Explain SQL self-join.","completion":"A self-join joins a table to itself. Example: SELECT e1.name, e2.name FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id;"}
{"prompt":"How to use Redis sorted set range?","completion":"ZRANGEBYSCORE key min max;"}
{"prompt":"Write a SQL query to count rows.","completion":"SELECT COUNT(*) FROM table;"}
{"prompt":"How to query MongoDB with regex?","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"What is a clustered index in SQL?","completion":"A clustered index determines the physical order of data in a table; only one per table."}
{"prompt":"How to use Cassandra materialized views?","completion":"CREATE MATERIALIZED VIEW view AS SELECT * FROM table WHERE column IS NOT NULL PRIMARY KEY (column, other_column);"}
{"prompt":"What's travel destinations?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees with same salary.","completion":"SELECT salary, COUNT(*) FROM employees GROUP BY salary HAVING COUNT(*) > 1;"}
{"prompt":"How to use Neo4j Cypher WHERE clause?","completion":"MATCH (n:Node) WHERE n.property = value RETURN n;"}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores like Redis store data as key-value pairs, optimized for fast retrieval."}
{"prompt":"How to use Redis increment?","completion":"INCR key;"}
{"prompt":"Write a SQL query to rename a column.","completion":"ALTER TABLE table RENAME COLUMN old_name TO new_name;"}
{"prompt":"What is SQL injection?","completion":"SQL injection is a security vulnerability where malicious SQL code is inserted into queries."}
{"prompt":"Write a SQL query to find employees in a specific city.","completion":"SELECT * FROM employees WHERE city = 'New York';"}
{"prompt":"Explain SQL HAVING clause.","completion":"HAVING filters grouped data. Example: SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"How to use Redis sets intersection?","completion":"SINTER key1 key2;"}
{"prompt":"Write a SQL query to find employees not in a department.","completion":"SELECT * FROM employees WHERE department_id IS NULL;"}
{"prompt":"How to use MongoDB $elemMatch?","completion":"db.collection.find({ array_field: { $elemMatch: { field: value } } });"}
{"prompt":"What is a non-clustered index in SQL?","completion":"A non-clustered index stores pointers to data, allowing multiple per table."}
{"prompt":"How to use Cassandra TTL?","completion":"INSERT INTO table (col1, col2) VALUES (val1, val2) USING TTL 86400;"}
{"prompt":"What's digital art?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees hired after another.","completion":"SELECT e1.name FROM employees e1 JOIN employees e2 ON e1.hire_date > e2.hire_date WHERE e2.id = 123;"}
{"prompt":"How to use Neo4j DELETE?","completion":"MATCH (n:Node { id: value }) DELETE n;"}
{"prompt":"How to use Redis list range?","completion":"LRANGE list start end;"}
{"prompt":"What's ancient history?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to calculate median salary.","completion":"SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY salary) FROM employees;"}
{"prompt":"How to use MongoDB $unset?","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $unset: { field: '' } });"}
{"prompt":"What is a SQL cursor?","completion":"A cursor iterates over query results row by row for processing."}
{"prompt":"How to use Redis hyperloglog?","completion":"PFADD key element; PFCOUNT key;"}
{"prompt":"Write a SQL query to find employees with top 10 salaries.","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 10;"}
{"prompt":"How to use MongoDB $inc?","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $inc: { field: 1 } });"}
{"prompt":"Explain SQL temporary tables.","completion":"Temporary tables exist for a session. Example: CREATE TEMPORARY TABLE temp_table (column TYPE);"}
{"prompt":"How to use Cassandra lightweight transactions?","completion":"INSERT INTO table (key, value) VALUES (val1, val2) IF NOT EXISTS;"}
{"prompt":"What's astronomy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find departments with more than 10 employees.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"How to use Neo4j CREATE UNIQUE?","completion":"CREATE (n:Node { id: value }) MERGE (n)-[:RELATION]->(m:Node { id: value2 });"}
{"prompt":"Explain NoSQL column-family stores.","completion":"Column-family stores like Cassandra store data in columns, optimized for write-heavy workloads."}
{"prompt":"Write a SQL query to find employees with null values in a column.","completion":"SELECT * FROM employees WHERE column IS NULL;"}
{"prompt":"How to use MongoDB $all?","completion":"db.collection.find({ array_field: { $all: [value1, value2] } });"}
{"prompt":"What is SQL partitioning?","completion":"Partitioning divides a table into smaller pieces for performance. Example: PARTITION BY RANGE (column);"}
{"prompt":"How to use Redis zrangebylex?","completion":"ZRANGEBYLEX key min max;"}
{"prompt":"What's cooking recipes?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use MongoDB $size?","completion":"db.collection.find({ array_field: { $size: 5 } });"}
{"prompt":"Explain SQL check constraint.","completion":"CHECK enforces a condition. Example: CREATE TABLE table (age INT CHECK (age >= 18));"}
{"prompt":"How to use Cassandra secondary indexes?","completion":"CREATE INDEX ON keyspace.table (column); SELECT * FROM table WHERE column = value;"}
{"prompt":"Write a SQL query to find employees by manager.","completion":"SELECT e1.* FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id WHERE e2.name = 'Manager Name';"}
{"prompt":"How to use Neo4j OPTIONAL MATCH?","completion":"MATCH (n:Node) OPTIONAL MATCH (n)-[r:RELATION]->(m) RETURN n, r, m;"}
{"prompt":"Explain MongoDB write concern.","completion":"Write concern specifies acknowledgment level for writes, e.g., { w: 'majority' } for majority node confirmation."}
{"prompt":"How to use Redis list push?","completion":"LPUSH list value; RPUSH list value;"}
{"prompt":"What's music theory?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is SQL sequence?","completion":"A sequence generates unique numbers. Example: CREATE SEQUENCE seq_name START 1;"}
{"prompt":"How to use Redis set union?","completion":"SUNION key1 key2;"}
{"prompt":"What's biology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to calculate year-over-year growth.","completion":"SELECT year, (current_year - prev_year) / prev_year * 100 AS growth FROM (SELECT YEAR(date) AS year, SUM(value) AS current_year, LAG(SUM(value)) OVER (ORDER BY YEAR(date)) AS prev_year FROM table GROUP BY YEAR(date)) t;"}
{"prompt":"How to use MongoDB $slice?","completion":"db.collection.find({}, { array_field: { $slice: [start, length] } });"}
{"prompt":"Explain SQL unique constraint.","completion":"UNIQUE ensures no duplicate values in a column. Example: CREATE TABLE table (column TYPE UNIQUE);"}
{"prompt":"How to use Cassandra collections?","completion":"CREATE TABLE table (id UUID, items LIST<TEXT>, PRIMARY KEY (id)); INSERT INTO table (id, items) VALUES (uuid(), ['item1', 'item2']);"}
{"prompt":"What's chemistry?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use Neo4j WITH clause?","completion":"MATCH (n:Node) WITH n WHERE n.property = value RETURN n;"}
{"prompt":"How to use Redis list trim?","completion":"LTRIM list start end;"}
{"prompt":"What's economics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by hire date range.","completion":"SELECT * FROM employees WHERE hire_date BETWEEN '2023-01-01' AND '2023-12-31';"}
{"prompt":"How to use MongoDB $in?","completion":"db.collection.find({ field: { $in: [value1, value2] } });"}
{"prompt":"What is SQL default constraint?","completion":"DEFAULT sets a default value for a column. Example: CREATE TABLE table (column TYPE DEFAULT 'value');"}
{"prompt":"How to use Redis set difference?","completion":"SDIFF key1 key2;"}
{"prompt":"How to use MongoDB $nin?","completion":"db.collection.find({ field: { $nin: [value1, value2] } });"}
{"prompt":"Explain SQL correlated subquery.","completion":"A correlated subquery references the outer query. Example: SELECT * FROM employees e WHERE EXISTS (SELECT 1 FROM sales s WHERE s.employee_id = e.id);"}
{"prompt":"How to use Cassandra counter?","completion":"CREATE TABLE table (id UUID, count COUNTER, PRIMARY KEY (id)); UPDATE table SET count = count + 1 WHERE id = uuid;"}
{"prompt":"What's political science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to rank employees by salary.","completion":"SELECT name, salary, RANK() OVER (ORDER BY salary DESC) AS rank FROM employees;"}
{"prompt":"How to use Neo4j LIMIT?","completion":"MATCH (n:Node) RETURN n LIMIT 10;"}
{"prompt":"Explain MongoDB transactions.","completion":"MongoDB supports transactions in replica sets/sharded clusters. Example: session.startTransaction(); db.collection.insertOne({...}); session.commitTransaction();"}
{"prompt":"How to use Redis list length?","completion":"LLEN list;"}
{"prompt":"What's literature?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department and city.","completion":"SELECT * FROM employees WHERE department = 'Sales' AND city = 'London';"}
{"prompt":"How to use MongoDB $pull?","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $pull: { array_field: value } });"}
{"prompt":"What is SQL role-based access?","completion":"Role-based access uses roles to manage permissions. Example: CREATE ROLE role_name; GRANT SELECT ON table TO role_name;"}
{"prompt":"How to use Redis set membership?","completion":"SISMEMBER key member;"}
{"prompt":"Write a SQL query to find employees with specific manager.","completion":"SELECT e1.* FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id WHERE e2.name = 'John Doe';"}
{"prompt":"How to use MongoDB $addToSet?","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $addToSet: { array_field: value } });"}
{"prompt":"Explain SQL table partitioning.","completion":"Table partitioning splits large tables into smaller parts. Example: CREATE TABLE table (column TYPE) PARTITION BY RANGE (column);"}
{"prompt":"How to use Cassandra frozen collections?","completion":"CREATE TABLE table (id UUID, data FROZEN<MAP<TEXT, TEXT>>, PRIMARY KEY (id));"}
{"prompt":"Write a SQL query to find employees with salary increase.","completion":"SELECT e1.* FROM employees e1 JOIN salary_history sh ON e1.id = sh.employee_id WHERE sh.new_salary > sh.old_salary;"}
{"prompt":"How to use Neo4j ORDER BY?","completion":"MATCH (n:Node) RETURN n ORDER BY n.property DESC;"}
{"prompt":"Explain MongoDB gridFS.","completion":"GridFS stores large files by splitting them into chunks in separate collections."}
{"prompt":"How to use Redis set random member?","completion":"SRANDMEMBER key;"}
{"prompt":"What's geography?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by job title.","completion":"SELECT * FROM employees WHERE job_title = 'Engineer';"}
{"prompt":"How to use MongoDB $or?","completion":"db.collection.find({ $or: [{ field1: value1 }, { field2: value2 }] });"}
{"prompt":"What is SQL flashback query?","completion":"Flashback queries retrieve data as it was at a past time (Oracle). Example: SELECT * FROM table AS OF TIMESTAMP TO_TIMESTAMP('2023-01-01');"}
{"prompt":"What's history?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by experience years.","completion":"SELECT * FROM employees WHERE DATEDIFF(CURRENT_DATE, hire_date) / 365 > 5;"}
{"prompt":"How to use MongoDB $and?","completion":"db.collection.find({ $and: [{ field1: value1 }, { field2: value2 }] });"}
{"prompt":"Explain SQL synonyms.","completion":"Synonyms provide alternate names for database objects. Example: CREATE SYNONYM syn FOR table;"}
{"prompt":"How to use Cassandra static columns?","completion":"CREATE TABLE table (id UUID, static_col TEXT STATIC, PRIMARY KEY (id));"}
{"prompt":"What's art history?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees with specific project.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.id = p.employee_id WHERE p.project_name = 'Project X';"}
{"prompt":"How to use Neo4j UNION?","completion":"MATCH (n:Node) RETURN n UNION MATCH (m:Node) RETURN m;"}
{"prompt":"Explain MongoDB indexes.","completion":"Indexes improve query performance by allowing efficient data access. Example: db.collection.createIndex({ field: 1 });"}
{"prompt":"How to use Redis sorted set score?","completion":"ZSCORE key member;"}
{"prompt":"Write a SQL query to find employees with overtime hours.","completion":"SELECT * FROM employees WHERE overtime_hours > 0;"}
{"prompt":"How to use MongoDB $not?","completion":"db.collection.find({ field: { $not: { $eq: value } } });"}
{"prompt":"What is SQL materialized view?","completion":"Materialized views store query results physically. Example: CREATE MATERIALIZED VIEW mv AS SELECT * FROM table;"}
{"prompt":"How to use Redis set pop?","completion":"SPOP key;"}
{"prompt":"What's archaeology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use MongoDB $gte?","completion":"db.collection.find({ field: { $gte: value } });"}
{"prompt":"Explain SQL roles.","completion":"Roles group permissions for easier management. Example: CREATE ROLE role_name; GRANT SELECT ON table TO role_name;"}
{"prompt":"How to use Cassandra UDT?","completion":"CREATE TYPE type_name (field1 TYPE, field2 TYPE); CREATE TABLE table (id UUID, data type_name, PRIMARY KEY (id));"}
{"prompt":"What's botany?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by team.","completion":"SELECT e.* FROM employees e JOIN teams t ON e.team_id = t.id WHERE t.team_name = 'Team A';"}
{"prompt":"How to use Neo4j DETACH DELETE?","completion":"MATCH (n:Node { id: value }) DETACH DELETE n;"}
{"prompt":"Explain MongoDB aggregation pipeline.","completion":"Aggregation pipeline processes data through stages like $match, $group. Example: db.collection.aggregate([{ $match: { field: value } }, { $group: { _id: '$field', count: { $sum: 1 } } }]);"}
{"prompt":"How to use Redis sorted set range by score?","completion":"ZRANGEBYSCORE key min max;"}
{"prompt":"What's zoology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by region.","completion":"SELECT * FROM employees WHERE region = 'Europe';"}
{"prompt":"How to use MongoDB $lte?","completion":"db.collection.find({ field: { $lte: value } });"}
{"prompt":"What is SQL audit trail?","completion":"An audit trail tracks database changes for security. Example: CREATE AUDIT POLICY policy_name ACTIONS SELECT ON table;"}
{"prompt":"How to use Redis list pop?","completion":"LPOP list; RPOP list;"}
{"prompt":"Write a SQL query to find employees by tenure.","completion":"SELECT * FROM employees WHERE DATEDIFF(CURRENT_DATE, hire_date) / 365 >= 10;"}
{"prompt":"How to use MongoDB $ne?","completion":"db.collection.find({ field: { $ne: value } });"}
{"prompt":"Explain SQL database roles.","completion":"Database roles manage permissions. Example: CREATE ROLE analyst; GRANT SELECT, INSERT ON table TO analyst;"}
{"prompt":"How to use Cassandra clustering keys?","completion":"CREATE TABLE table (id UUID, cluster_col TEXT, PRIMARY KEY (id, cluster_col));"}
{"prompt":"What's genetics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use Neo4j SKIP?","completion":"MATCH (n:Node) RETURN n SKIP 10;"}
{"prompt":"Explain MongoDB write operations.","completion":"Write operations include insert, update, delete. Example: db.collection.insertOne({ field: value });"}
{"prompt":"How to use Redis sorted set remove?","completion":"ZREM key member;"}
{"prompt":"Write a SQL query to find employees by department size.","completion":"SELECT d.department, COUNT(*) FROM employees e JOIN departments d ON e.department_id = d.id GROUP BY d.department HAVING COUNT(*) > 20;"}
{"prompt":"How to use MongoDB $gt?","completion":"db.collection.find({ field: { $gt: value } });"}
{"prompt":"What is SQL trigger cascade?","completion":"Cascading triggers propagate changes, e.g., ON DELETE CASCADE in foreign keys deletes related rows."}
{"prompt":"How to use Redis set cardinality?","completion":"SCARD key;"}
{"prompt":"Write a SQL query to find employees by project count.","completion":"SELECT e.id, e.name, COUNT(p.id) FROM employees e LEFT JOIN projects p ON e.id = p.employee_id GROUP BY e.id, e.name HAVING COUNT(p.id) > 2;"}
{"prompt":"How to use MongoDB $lt?","completion":"db.collection.find({ field: { $lt: value } });"}
{"prompt":"Explain SQL database snapshots.","completion":"Snapshots capture database state at a point in time (vendor-specific). Example: CREATE DATABASE SNAPSHOT db_name;"}
{"prompt":"How to use Cassandra batch?","completion":"BEGIN BATCH INSERT INTO table1 ...; UPDATE table2 ...; APPLY BATCH;"}
{"prompt":"Write a SQL query to find employees by attendance.","completion":"SELECT e.* FROM employees e JOIN attendance a ON e.id = a.employee_id WHERE a.absences < 5;"}
{"prompt":"How to use Neo4j PROFILE?","completion":"PROFILE MATCH (n:Node) RETURN n;"}
{"prompt":"Explain MongoDB read concern.","completion":"Read concern defines data consistency level, e.g., { readConcern: { level: 'majority' } }."}
{"prompt":"How to use Redis list insert?","completion":"LINSERT list BEFORE pivot value;"}
{"prompt":"What's cosmology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by certification.","completion":"SELECT * FROM employees WHERE certifications LIKE '%AWS%';"}
{"prompt":"How to use MongoDB $type?","completion":"db.collection.find({ field: { $type: 'string' } });"}
{"prompt":"What is SQL database link?","completion":"A database link connects to another database. Example: CREATE DATABASE LINK link_name CONNECT TO user IDENTIFIED BY password USING 'db';"}
{"prompt":"How to use Redis sorted set increment?","completion":"ZINCRBY key increment member;"}
{"prompt":"Write a SQL query to find employees by promotion date.","completion":"SELECT * FROM employees WHERE promotion_date > '2023-01-01';"}
{"prompt":"How to use Neo4j CALL?","completion":"CALL db.labels() YIELD label RETURN label;"}
{"prompt":"Explain MongoDB TTL indexes.","completion":"TTL indexes automatically delete documents after a time. Example: db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"How to use Redis set move?","completion":"SMOVE source destination member;"}
{"prompt":"Write a SQL query to find employees by training hours.","completion":"SELECT e.* FROM employees e JOIN training t ON e.id = t.employee_id WHERE t.hours > 40;"}
{"prompt":"How to use MongoDB $mod?","completion":"db.collection.find({ field: { $mod: [divisor, remainder] } });"}
{"prompt":"Explain SQL analytic functions.","completion":"Analytic functions compute aggregates over a window. Example: SELECT name, SUM(salary) OVER (PARTITION BY department) FROM employees;"}
{"prompt":"How to use Cassandra timeuuid?","completion":"CREATE TABLE table (id TIMEUUID, data TEXT, PRIMARY KEY (id)); INSERT INTO table (id, data) VALUES (now(), 'value');"}
{"prompt":"What's environmental science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by location and salary.","completion":"SELECT * FROM employees WHERE location = 'Chicago' AND salary > 60000;"}
{"prompt":"How to use Neo4j EXPLAIN?","completion":"EXPLAIN MATCH (n:Node) RETURN n;"}
{"prompt":"Explain MongoDB covered queries.","completion":"Covered queries use only indexed fields, avoiding document scans. Example: db.collection.find({ indexed_field: value }, { indexed_field: 1, _id: 0 });"}
{"prompt":"How to use Redis sorted set range by rank?","completion":"ZRANGE key start end;"}
{"prompt":"What's urban planning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is SQL database encryption?","completion":"Database encryption protects data at rest or in transit. Example: ENABLE ENCRYPTION ON column;"}
{"prompt":"How to use Redis list push multiple?","completion":"LPUSH list value1 value2;"}
{"prompt":"What's criminology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use MongoDB $geoIntersects?","completion":"db.collection.find({ location: { $geoIntersects: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"Explain SQL database tuning.","completion":"Tuning optimizes performance via indexing, query optimization, and resource allocation."}
{"prompt":"How to use Cassandra tuple?","completion":"CREATE TABLE table (id UUID, data TUPLE<INT, TEXT>, PRIMARY KEY (id)); INSERT INTO table (id, data) VALUES (uuid(), (1, 'value'));"}
{"prompt":"What's architecture?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by bonus amount.","completion":"SELECT * FROM employees WHERE bonus > 5000;"}
{"prompt":"How to use Neo4j FOREACH?","completion":"MATCH (n:Node) FOREACH (value IN [1, 2, 3] | SET n.prop = value);"}
{"prompt":"Explain MongoDB schema validation.","completion":"Schema validation enforces document structure. Example: db.createCollection('name', { validator: { $jsonSchema: { required: ['field'] } } });"}
{"prompt":"How to use Redis sorted set remove range?","completion":"ZREMRANGEBYSCORE key min max;"}
{"prompt":"What's theology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by team lead.","completion":"SELECT e.* FROM employees e JOIN employees t ON e.team_lead_id = t.id WHERE t.name = 'Jane Doe';"}
{"prompt":"How to use MongoDB $regex?","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"What is SQL database replication?","completion":"Replication copies data to multiple servers for redundancy. Example: SET GLOBAL replicate_do_table = 'table';"}
{"prompt":"How to use Redis hash increment?","completion":"HINCRBY key field increment;"}
{"prompt":"What's fashion design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department and hire year.","completion":"SELECT * FROM employees WHERE department = 'HR' AND YEAR(hire_date) = 2022;"}
{"prompt":"How to use Neo4j UNWIND?","completion":"UNWIND [1, 2, 3] AS x RETURN x;"}
{"prompt":"Explain MongoDB backup strategies.","completion":"Use mongodump for logical backups or snapshots for physical backups."}
{"prompt":"How to use Redis sorted set count?","completion":"ZCOUNT key min max;"}
{"prompt":"What's journalism?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by education level.","completion":"SELECT * FROM employees WHERE education = 'Masters';"}
{"prompt":"How to use MongoDB $geoNear?","completion":"db.collection.aggregate([{ $geoNear: { near: { type: 'Point', coordinates: [lng, lat] }, distanceField: 'dist' } }]);"}
{"prompt":"Explain SQL database clustering.","completion":"Clustering groups servers for high availability and load balancing."}
{"prompt":"How to use Cassandra materialized view?","completion":"CREATE MATERIALIZED VIEW view AS SELECT * FROM table WHERE column IS NOT NULL PRIMARY KEY (column, other_column);"}
{"prompt":"Write a SQL query to find employees by project deadline.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.id = p.employee_id WHERE p.deadline < '2024-01-01';"}
{"prompt":"How to use Neo4j apoc procedures?","completion":"CALL apoc.create.node(['Label'], { key: value });"}
{"prompt":"Explain MongoDB read preference.","completion":"Read preference directs reads to primary or secondary nodes, e.g., { readPreference: 'secondary' }."}
{"prompt":"How to use Redis hash get?","completion":"HGET key field;"}
{"prompt":"What's social work?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use MongoDB $currentDate?","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $currentDate: { field: true } });"}
{"prompt":"What is SQL database sharding?","completion":"Sharding splits data across servers to scale horizontally."}
{"prompt":"How to use Redis list index?","completion":"LINDEX list index;"}
{"prompt":"What's public health?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by salary and city.","completion":"SELECT * FROM employees WHERE salary > 70000 AND city = 'San Francisco';"}
{"prompt":"How to use Neo4j LOAD CSV?","completion":"LOAD CSV FROM 'file.csv' AS row CREATE (n:Node { prop: row[0] });"}
{"prompt":"Explain MongoDB change streams.","completion":"Change streams monitor real-time changes. Example: const changeStream = db.collection.watch();"}
{"prompt":"How to use Redis hash set multiple?","completion":"HMSET key field1 value1 field2 value2;"}
{"prompt":"What's veterinary science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by role.","completion":"SELECT * FROM employees WHERE role = 'Developer';"}
{"prompt":"How to use MongoDB $max?","completion":"db.collection.aggregate([{ $group: { _id: null, max: { $max: '$field' } } }]);"}
{"prompt":"Explain SQL database auditing.","completion":"Auditing tracks user actions for security. Example: AUDIT SELECT ON table BY user;"}
{"prompt":"How to use Cassandra user-defined functions?","completion":"CREATE FUNCTION func_name (input TYPE) RETURNS TYPE LANGUAGE java AS 'return input * 2;';"}
{"prompt":"What's statistics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by awards.","completion":"SELECT * FROM employees WHERE awards > 0;"}
{"prompt":"How to use Neo4j shortestPath?","completion":"MATCH p = shortestPath((n:Node)-[*]-(m:Node)) WHERE n.id = 'start' AND m.id = 'end' RETURN p;"}
{"prompt":"Explain MongoDB journal.","completion":"Journaling ensures data durability by logging operations before applying them."}
{"prompt":"How to use Redis sorted set pop max?","completion":"ZPOPMAX key;"}
{"prompt":"What's nutrition?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by supervisor.","completion":"SELECT e1.* FROM employees e1 JOIN employees e2 ON e1.supervisor_id = e2.id WHERE e2.name = 'Alice Smith';"}
{"prompt":"How to use MongoDB $min?","completion":"db.collection.aggregate([{ $group: { _id: null, min: { $min: '$field' } } }]);"}
{"prompt":"What is SQL database backup?","completion":"Backups save database state for recovery. Example: BACKUP DATABASE db_name TO DISK = 'path';"}
{"prompt":"How to use Redis hash delete?","completion":"HDEL key field;"}
{"prompt":"Write a SQL query to find employees by office.","completion":"SELECT * FROM employees WHERE office = 'Downtown';"}
{"prompt":"How to use MongoDB $avg?","completion":"db.collection.aggregate([{ $group: { _id: null, avg: { $avg: '$field' } } }]);"}
{"prompt":"Explain SQL database recovery.","completion":"Recovery restores data from backups or logs after failure."}
{"prompt":"How to use Cassandra secondary index query?","completion":"SELECT * FROM table WHERE indexed_column = value;"}
{"prompt":"What's folklore?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by leave balance.","completion":"SELECT * FROM employees WHERE leave_balance > 10;"}
{"prompt":"How to use Neo4j MERGE?","completion":"MERGE (n:Node { id: value }) ON CREATE SET n.property = value;"}
{"prompt":"Explain MongoDB oplog.","completion":"Oplog is a capped collection storing operations for replication in MongoDB."}
{"prompt":"How to use Redis sorted set range by lex?","completion":"ZRANGEBYLEX key min max;"}
{"prompt":"What's microbiology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by remote work status.","completion":"SELECT * FROM employees WHERE is_remote = true;"}
{"prompt":"How to use MongoDB $sum?","completion":"db.collection.aggregate([{ $group: { _id: null, total: { $sum: '$field' } } }]);"}
{"prompt":"What is SQL database migration?","completion":"Migration moves data or schema between databases or versions."}
{"prompt":"How to use Redis hash get all?","completion":"HGETALL key;"}
{"prompt":"What's biochemistry?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by years of service.","completion":"SELECT * FROM employees WHERE DATEDIFF(CURRENT_DATE, hire_date) / 365 >= 7;"}
{"prompt":"How to use Neo4j CREATE INDEX?","completion":"CREATE INDEX ON :Label(property);"}
{"prompt":"Explain MongoDB data modeling.","completion":"Data modeling in MongoDB uses embedded documents for frequent reads or references for complex relations."}
{"prompt":"How to use Redis list set?","completion":"LSET list index value;"}
{"prompt":"What's horticulture?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use MongoDB $count?","completion":"db.collection.aggregate([{ $count: 'total' }]);"}
{"prompt":"Explain SQL database locking.","completion":"Locking prevents concurrent data conflicts. Example: SELECT ... FOR UPDATE;"}
{"prompt":"How to use Cassandra time-based partitioning?","completion":"CREATE TABLE table (bucket TEXT, time TIMESTAMP, data TEXT, PRIMARY KEY (bucket, time)) WITH CLUSTERING ORDER BY (time DESC);"}
{"prompt":"What's epidemiology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use Neo4j DISTINCT?","completion":"MATCH (n:Node) RETURN DISTINCT n.property;"}
{"prompt":"Explain MongoDB shard key.","completion":"Shard key determines data distribution across shards for scalability."}
{"prompt":"How to use Redis sorted set reverse range?","completion":"ZREVRANGE key start end;"}
{"prompt":"What's entomology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by training completion.","completion":"SELECT e.* FROM employees e JOIN training t ON e.id = t.employee_id WHERE t.completed = true;"}
{"prompt":"How to use MongoDB $sortByCount?","completion":"db.collection.aggregate([{ $sortByCount: '$field' }]);"}
{"prompt":"What is SQL database versioning?","completion":"Versioning tracks schema or data changes over time for auditing or rollback."}
{"prompt":"How to use Redis hash exists?","completion":"HEXISTS key field;"}
{"prompt":"Write a SQL query to find employees by job level.","completion":"SELECT * FROM employees WHERE job_level = 'Senior';"}
{"prompt":"How to use MongoDB $unwind?","completion":"db.collection.aggregate([{ $unwind: '$array_field' }]);"}
{"prompt":"Explain SQL database constraints.","completion":"Constraints enforce data rules: PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL, CHECK."}
{"prompt":"What's paleobiology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department budget.","completion":"SELECT e.* FROM employees e JOIN departments d ON e.department_id = d.id WHERE d.budget > 100000;"}
{"prompt":"How to use Neo4j EXISTS?","completion":"MATCH (n:Node) WHERE EXISTS(n.property) RETURN n;"}
{"prompt":"Explain MongoDB bulk write.","completion":"Bulk write executes multiple operations efficiently. Example: db.collection.bulkWrite([{ insertOne: { document: {} } }, { updateOne: {} }]);"}
{"prompt":"How to use Redis sorted set reverse rank?","completion":"ZREVRANK key member;"}
{"prompt":"What's agronomy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by project budget.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.id = p.employee_id WHERE p.budget > 50000;"}
{"prompt":"How to use MongoDB $project?","completion":"db.collection.aggregate([{ $project: { field1: 1, field2: 0 } }]);"}
{"prompt":"What is SQL database indexing strategy?","completion":"Indexing strategy balances query speed and write overhead by indexing frequently queried columns."}
{"prompt":"How to use Redis hash keys?","completion":"HKEYS key;"}
{"prompt":"What's forestry?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by salary increment.","completion":"SELECT e.* FROM employees e JOIN salary_history sh ON e.id = sh.employee_id WHERE sh.new_salary > sh.old_salary;"}
{"prompt":"How to use Neo4j CASE?","completion":"MATCH (n:Node) RETURN CASE WHEN n.property > 0 THEN 'positive' ELSE 'non-positive' END;"}
{"prompt":"Explain MongoDB text indexes.","completion":"Text indexes support text search. Example: db.collection.createIndex({ field: 'text' });"}
{"prompt":"What's hydrology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by performance review date.","completion":"SELECT * FROM employees WHERE last_review_date > '2023-06-01';"}
{"prompt":"Explain SQL database triggers.","completion":"Triggers execute automatically on events. Example: CREATE TRIGGER trig_name BEFORE INSERT ON table FOR EACH ROW EXECUTE PROCEDURE func();"}
{"prompt":"How to use Cassandra tuple type?","completion":"CREATE TABLE table (id UUID, data TUPLE<INT, TEXT>, PRIMARY KEY (id));"}
{"prompt":"What's climatology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by team size.","completion":"SELECT e.* FROM employees e JOIN teams t ON e.team_id = t.id WHERE t.size > 10;"}
{"prompt":"How to use Neo4j COLLECT?","completion":"MATCH (n:Node) RETURN COLLECT(n.property) AS properties;"}
{"prompt":"Explain MongoDB geospatial indexes.","completion":"Geospatial indexes support location-based queries. Example: db.collection.createIndex({ location: '2dsphere' });"}
{"prompt":"How to use Redis hash values?","completion":"HVALS key;"}
{"prompt":"What's seismology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by contract end date.","completion":"SELECT * FROM employees WHERE contract_end_date < '2024-01-01';"}
{"prompt":"How to use MongoDB $redact?","completion":"db.collection.aggregate([{ $redact: { $cond: { if: { $eq: ['$level', 1] }, then: '$$KEEP', else: '$$PRUNE' } } }]);"}
{"prompt":"What is SQL database compression?","completion":"Compression reduces storage size. Example: ALTER TABLE table COMPRESS;"}
{"prompt":"How to use Redis sorted set union?","completion":"ZUNIONSTORE dest numkeys key1 key2;"}
{"prompt":"Write a SQL query to find employees by mentor.","completion":"SELECT e1.* FROM employees e1 JOIN employees e2 ON e1.mentor_id = e2.id WHERE e2.name = 'Bob Jones';"}
{"prompt":"How to use MongoDB $out?","completion":"db.collection.aggregate([{ $match: { field: value } }, { $out: 'new_collection' }]);"}
{"prompt":"Explain SQL database roles vs users.","completion":"Roles group permissions; users are accounts. Roles can be assigned to users."}
{"prompt":"How to use Cassandra frozen type?","completion":"CREATE TABLE table (id UUID, data FROZEN<MAP<TEXT, INT>>, PRIMARY KEY (id));"}
{"prompt":"What's ethology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department and role.","completion":"SELECT * FROM employees WHERE department = 'IT' AND role = 'Analyst';"}
{"prompt":"How to use Neo4j REDUCE?","completion":"MATCH (n:Node) RETURN REDUCE(total = 0, x IN n.values | total + x) AS sum;"}
{"prompt":"Explain MongoDB read isolation.","completion":"Read isolation controls data visibility during transactions, e.g., snapshot isolation."}
{"prompt":"How to use Redis sorted set intersect?","completion":"ZINTERSTORE dest numkeys key1 key2;"}
{"prompt":"What's mycology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by project status.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.id = p.employee_id WHERE p.status = 'Active';"}
{"prompt":"How to use MongoDB $merge?","completion":"db.collection.aggregate([{ $match: { field: value } }, { $merge: { into: 'target_collection' } }]);"}
{"prompt":"What is SQL database performance tuning?","completion":"Performance tuning optimizes queries, indexes, and resources for efficiency."}
{"prompt":"How to use Redis hash scan?","completion":"HSCAN key 0 MATCH pattern;"}
{"prompt":"What's parasitology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by salary and experience.","completion":"SELECT * FROM employees WHERE salary > 60000 AND DATEDIFF(CURRENT_DATE, hire_date) / 365 > 3;"}
{"prompt":"How to use Neo4j ALL?","completion":"MATCH p = (n:Node)-[*]->(m:Node) WHERE ALL(x IN nodes(p) WHERE x.property = value) RETURN p;"}
{"prompt":"Explain MongoDB partial indexes.","completion":"Partial indexes index a subset of documents. Example: db.collection.createIndex({ field: 1 }, { partialFilterExpression: { field: { $gt: 10 } } });"}
{"prompt":"How to use Redis list pushx?","completion":"LPUSHX list value;"}
{"prompt":"What's toxicology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by training type.","completion":"SELECT e.* FROM employees e JOIN training t ON e.id = t.employee_id WHERE t.type = 'Technical';"}
{"prompt":"How to use MongoDB $facet?","completion":"db.collection.aggregate([{ $facet: { category1: [{ $match: { field: value } }], category2: [{ $match: { field: other_value } }] } }]);"}
{"prompt":"Explain SQL database caching.","completion":"Caching stores frequent query results in memory for faster access."}
{"prompt":"How to use Cassandra user-defined aggregate?","completion":"CREATE AGGREGATE agg_name (TYPE) SFUNC state_func STYPE TYPE;"}
{"prompt":"What's virology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by performance bonus.","completion":"SELECT * FROM employees WHERE performance_bonus > 1000;"}
{"prompt":"How to use Neo4j ANY?","completion":"MATCH p = (n:Node)-[*]->(m:Node) WHERE ANY(x IN nodes(p) WHERE x.property = value) RETURN p;"}
{"prompt":"Explain MongoDB collations.","completion":"Collations define string comparison rules, e.g., case-insensitive. Example: db.collection.find().collation({ locale: 'en', strength: 2 });"}
{"prompt":"How to use Redis sorted set pop min?","completion":"ZPOPMIN key;"}
{"prompt":"What's ornithology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department and performance.","completion":"SELECT * FROM employees WHERE department = 'Marketing' AND performance_score > 85;"}
{"prompt":"How to use MongoDB $bucket?","completion":"db.collection.aggregate([{ $bucket: { groupBy: '$field', boundaries: [0, 10, 20], default: 'other' } }]);"}
{"prompt":"What is SQL database failover?","completion":"Failover switches to a standby server during failure for high availability."}
{"prompt":"How to use Redis hash length?","completion":"HLEN key;"}
{"prompt":"What's herpetology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use MongoDB $bucketAuto?","completion":"db.collection.aggregate([{ $bucketAuto: { groupBy: '$field', buckets: 5 } }]);"}
{"prompt":"Explain SQL database load balancing.","completion":"Load balancing distributes queries across servers for scalability."}
{"prompt":"How to use Cassandra frozen list?","completion":"CREATE TABLE table (id UUID, data FROZEN<LIST<TEXT>>, PRIMARY KEY (id));"}
{"prompt":"What's ichthyology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by project completion.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.id = p.employee_id WHERE p.completed = true;"}
{"prompt":"How to use Neo4j NONE?","completion":"MATCH p = (n:Node)-[*]->(m:Node) WHERE NONE(x IN nodes(p) WHERE x.property = value) RETURN p;"}
{"prompt":"Explain MongoDB compound indexes.","completion":"Compound indexes combine multiple fields. Example: db.collection.createIndex({ field1: 1, field2: -1 });"}
{"prompt":"How to use Redis sorted set range with scores?","completion":"ZRANGE key start end WITHSCORES;"}
{"prompt":"What's limnology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by salary and tenure.","completion":"SELECT * FROM employees WHERE salary > 55000 AND DATEDIFF(CURRENT_DATE, hire_date) / 365 > 4;"}
{"prompt":"How to use MongoDB $graphLookup?","completion":"db.collection.aggregate([{ $graphLookup: { from: 'collection', startWith: '$field', connectFromField: 'field', connectToField: 'field', as: 'result' } }]);"}
{"prompt":"What is SQL database archiving?","completion":"Archiving moves old data to separate storage to free up space."}
{"prompt":"How to use Redis hash set if not exists?","completion":"HSETNX key field value;"}
{"prompt":"What's malacology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by manager and city.","completion":"SELECT e1.* FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id WHERE e1.city = 'Boston';"}
{"prompt":"How to use MongoDB $addFields?","completion":"db.collection.aggregate([{ $addFields: { newField: '$existingField' } }]);"}
{"prompt":"Explain SQL database statistics.","completion":"Statistics help query optimizers choose efficient plans by tracking data distribution."}
{"prompt":"How to use Cassandra frozen map?","completion":"CREATE TABLE table (id UUID, data FROZEN<MAP<TEXT, INT>>, PRIMARY KEY (id));"}
{"prompt":"What's paleoclimatology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by team and salary.","completion":"SELECT e.* FROM employees e JOIN teams t ON e.team_id = t.id WHERE t.team_name = 'DevOps' AND e.salary > 65000;"}
{"prompt":"How to use Neo4j SINGLE?","completion":"MATCH p = (n:Node)-[*]->(m:Node) WHERE SINGLE(x IN nodes(p) WHERE x.property = value) RETURN p;"}
{"prompt":"Explain MongoDB unique indexes.","completion":"Unique indexes prevent duplicate values. Example: db.collection.createIndex({ field: 1 }, { unique: true });"}
{"prompt":"How to use Redis sorted set add?","completion":"ZADD key score member;"}
{"prompt":"What's astrobiology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department and bonus.","completion":"SELECT * FROM employees WHERE department = 'Finance' AND bonus > 2000;"}
{"prompt":"How to use MongoDB $set?","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $set: { field: value } });"}
{"prompt":"What is SQL database monitoring?","completion":"Monitoring tracks performance, errors, and resource usage for optimization."}
{"prompt":"How to use Redis hash get multiple?","completion":"HMGET key field1 field2;"}
{"prompt":"What's paleoecology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by role and city.","completion":"SELECT * FROM employees WHERE role = 'Manager' AND city = 'Seattle';"}
{"prompt":"How to use MongoDB $replaceRoot?","completion":"db.collection.aggregate([{ $replaceRoot: { newRoot: '$nested_field' } }]);"}
{"prompt":"Explain SQL database high availability.","completion":"High availability ensures minimal downtime using replication, failover, and clustering."}
{"prompt":"How to use Cassandra frozen set?","completion":"CREATE TABLE table (id UUID, data FROZEN<SET<TEXT>>, PRIMARY KEY (id));"}
{"prompt":"What's dendrology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by project and role.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.id = p.employee_id WHERE p.project_name = 'Alpha' AND e.role = 'Developer';"}
{"prompt":"How to use Neo4j COALESCE?","completion":"MATCH (n:Node) RETURN COALESCE(n.property, 'default') AS value;"}
{"prompt":"Explain MongoDB hashed indexes.","completion":"Hashed indexes support sharding with hashed values. Example: db.collection.createIndex({ field: 'hashed' });"}
{"prompt":"How to use Redis sorted set range by score with limit?","completion":"ZRANGEBYSCORE key min max LIMIT offset count;"}
{"prompt":"What's glaciology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by salary and performance.","completion":"SELECT * FROM employees WHERE salary > 80000 AND performance_score >= 80;"}
{"prompt":"How to use MongoDB $lookup with pipeline?","completion":"db.collection.aggregate([{ $lookup: { from: 'other', let: { var: '$field' }, pipeline: [{ $match: { $expr: { $eq: ['$field', '$$var'] } } }], as: 'result' } }]);"}
{"prompt":"What is SQL database federation?","completion":"Federation splits a database into independent shards accessed as one."}
{"prompt":"What's speleology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by team and performance.","completion":"SELECT e.* FROM employees e JOIN teams t ON e.team_id = t.id WHERE t.team_name = 'Sales' AND e.performance_score > 90;"}
{"prompt":"How to use Neo4j SIZE?","completion":"MATCH (n:Node)-[r:RELATION]->() RETURN SIZE(COLLECT(r)) AS count;"}
{"prompt":"Explain MongoDB multikey indexes.","completion":"Multikey indexes index array fields. Example: db.collection.createIndex({ array_field: 1 });"}
{"prompt":"How to use Redis sorted set reverse range by score?","completion":"ZREVRANGEBYSCORE key max min;"}
{"prompt":"What's aerobiology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department and tenure.","completion":"SELECT * FROM employees WHERE department = 'Engineering' AND DATEDIFF(CURRENT_DATE, hire_date) / 365 > 5;"}
{"prompt":"How to use MongoDB $setUnion?","completion":"db.collection.aggregate([{ $project: { union: { $setUnion: ['$array1', '$array2'] } } }]);"}
{"prompt":"What is SQL database scalability?","completion":"Scalability allows handling increased load via vertical (more power) or horizontal (more servers) scaling."}
{"prompt":"How to use Cassandra clustering order?","completion":"CREATE TABLE table (id UUID, time TIMESTAMP, PRIMARY KEY (id, time)) WITH CLUSTERING ORDER BY (time DESC);"}
{"prompt":"What's palynology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to list all documents in MongoDB where price is less than 100?","completion":"db.collection.find({ price: { $lt: 100 } });"}
{"prompt":"Explain SQL INNER JOIN with an example.","completion":"An INNER JOIN returns rows with matching values in both tables. Example: SELECT * FROM orders INNER JOIN customers ON orders.customer_id = customers.id;"}
{"prompt":"How to find distinct values in a MongoDB collection?","completion":"db.collection.distinct('field');"}
{"prompt":"Create a table in SQL for storing books.","completion":"CREATE TABLE books (id INT PRIMARY KEY, title VARCHAR(100), author VARCHAR(50), year INT);"}
{"prompt":"How to update multiple documents in MongoDB?","completion":"db.collection.updateMany({ condition }, { $set: { field: 'new_value' } });"}
{"prompt":"Explain ACID properties in SQL.","completion":"ACID stands for Atomicity, Consistency, Isolation, Durability, ensuring reliable transactions in relational databases."}
{"prompt":"Write a Neo4j query to find all nodes with a specific property.","completion":"MATCH (n {property: 'value'}) RETURN n;"}
{"prompt":"How does Python work?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to create an index in MongoDB?","completion":"db.collection.createIndex({ field:  Window functions use OVER to define a window of rows for calculations, like ROW_NUMBER() OVER (PARTITION BY column ORDER BY another_column);"}
{"prompt":"How to create a Redis sorted set?","completion":"ZADD myzset 1 'member1' 2 'member2';"}
{"prompt":"Write a SQL query to join two tables, orders and products.","completion":"SELECT * FROM orders JOIN products ON orders.product_id = products.id;"}
{"prompt":"How to perform a text search in MongoDB?","completion":"db.collection.find({ $text: { $search: 'keyword' } });"}
{"prompt":"Explain normalization in SQL databases.","completion":"Normalization reduces redundancy by organizing data into tables based on dependencies, following forms like 1NF, 2NF, 3NF."}
{"prompt":"How to delete a node in Neo4j?","completion":"MATCH (n {property: 'value'}) DETACH DELETE n;"}
{"prompt":"Write a SQL query to find employees hired after 2020.","completion":"SELECT * FROM employees WHERE hire_date > '2020-01-01';"}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.collection.aggregate([{ $lookup: { from: 'other_collection', localField: 'field', foreignField: 'field', as: 'result' } }]);"}
{"prompt":"Explain CAP theorem for NoSQL.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, Partition Tolerance at once."}
{"prompt":"How to expire a key in Redis after 60 seconds?","completion":"SET mykey 'value' EX 60;"}
{"prompt":"How to insert multiple documents in MongoDB?","completion":"db.collection.insertMany([{ doc1 }, { doc2 }]);"}
{"prompt":"Explain foreign keys in SQL.","completion":"Foreign keys link a column in one table to a primary key in another, enforcing referential integrity."}
{"prompt":"How to query a graph path in Neo4j?","completion":"MATCH p=(start)-[*1..3]->(end) RETURN p;"}
{"prompt":"How to use Redis pub/sub?","completion":"PUBLISH channel 'message'; SUBSCRIBE channel;"}
{"prompt":"What's the difference between SQL and NoSQL scalability?","completion":"SQL scales vertically (better hardware), NoSQL scales horizontally (more servers) for big data."}
{"prompt":"How to create a view in SQL?","completion":"CREATE VIEW view_name AS SELECT * FROM table WHERE condition;"}
{"prompt":"Write a MongoDB query to sort by date descending.","completion":"db.collection.find().sort({ date: -1 });"}
{"prompt":"How to use transactions in PostgreSQL?","completion":"BEGIN; INSERT INTO table ...; COMMIT;"}
{"prompt":"Explain sharding in NoSQL databases.","completion":"Sharding splits data across multiple servers based on a shard key to improve scalability."}
{"prompt":"How to add a field in MongoDB?","completion":"db.collection.updateMany({}, { $set: { new_field: 'value' } });"}
{"prompt":"How to create a Redis hash?","completion":"HMSET myhash field1 'value1' field2 'value2';"}
{"prompt":"Explain SQL triggers.","completion":"Triggers are procedures that execute automatically on specific table events, like INSERT or UPDATE."}
{"prompt":"How to perform a geospatial query in MongoDB?","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"How to use $group in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"How to create a relationship in Neo4j?","completion":"CREATE (n:Node)-[:RELATION]->(m:Node);"}
{"prompt":"Write a SQL query to list employees and their department names.","completion":"SELECT e.name, d.department_name FROM employees e JOIN departments d ON e.department_id = d.id;"}
{"prompt":"How to use Redis transactions?","completion":"MULTI; SET key1 value; SET key2 value; EXEC;"}
{"prompt":"How to delete documents in MongoDB?","completion":"db.collection.deleteMany({ condition });"}
{"prompt":"Explain BASE properties in NoSQL.","completion":"BASE (Basically Available, Soft state, Eventual consistency) prioritizes availability over immediate consistency."}
{"prompt":"How to query shortest path in Neo4j?","completion":"MATCH p=shortestPath((n)-[*]-(m)) RETURN p;"}
{"prompt":"Write a SQL query to update employee salary.","completion":"UPDATE employees SET salary = salary + 5000 WHERE condition;"}
{"prompt":"How to use $match in MongoDB?","completion":"db.collection.aggregate([{ $match: { field: 'value' } }]);"}
{"prompt":"Explain SQL indexes.","completion":"Indexes speed up queries by creating a data structure for faster lookups, like B-trees."}
{"prompt":"How to create a Redis list?","completion":"LPUSH mylist 'value1'; RPUSH mylist 'value2';"}
{"prompt":"Write a SQL query to find employees with salary between 30000 and 60000.","completion":"SELECT * FROM employees WHERE salary BETWEEN 30000 AND 60000;"}
{"prompt":"How to count documents in MongoDB?","completion":"db.collection.countDocuments({ condition });"}
{"prompt":"Explain SQL views vs tables.","completion":"Views are virtual tables based on a query, while tables store actual data."}
{"prompt":"How to use Redis sorted sets for ranking?","completion":"ZADD leaderboard score 'player'; ZRANGE leaderboard 0 -1 WITHSCORES;"}
{"prompt":"How to create a text index in MongoDB?","completion":"db.collection.createIndex({ field: 'text' });"}
{"prompt":"Explain SQL subqueries.","completion":"Subqueries are nested queries used within another query, like SELECT * FROM table WHERE id IN (SELECT id FROM another_table);"}
{"prompt":"How to merge nodes in Neo4j?","completion":"MERGE (n:Node {property: 'value'}) ON CREATE SET n.key = 'value';"}
{"prompt":"Write a SQL query to find employees by hire year.","completion":"SELECT * FROM employees WHERE YEAR(hire_date) = 2021;"}
{"prompt":"How to use $project in MongoDB?","completion":"db.collection.aggregate([{ $project: { field1: 1, field2: 0 } }]);"}
{"prompt":"How to use $unwind in MongoDB?","completion":"db.collection.aggregate([{ $unwind: '$array_field' }]);"}
{"prompt":"Explain SQL joins.","completion":"Joins combine rows from multiple tables: INNER, LEFT, RIGHT, FULL OUTER based on conditions."}
{"prompt":"How to query Redis hashes?","completion":"HGETALL myhash;"}
{"prompt":"How to update a single document in MongoDB?","completion":"db.collection.updateOne({ condition }, { $set: { field: 'value' } });"}
{"prompt":"Explain SQL transactions.","completion":"Transactions ensure data integrity with BEGIN, COMMIT, ROLLBACK for atomic operations."}
{"prompt":"How to create a Neo4j index?","completion":"CREATE INDEX FOR (n:Label) ON (n.property);"}
{"prompt":"Write a SQL query to group by multiple columns.","completion":"SELECT department, job_title, COUNT(*) FROM employees GROUP BY department, job_title;"}
{"prompt":"How to skip results in MongoDB?","completion":"db.collection.find().skip(10);"}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores like Redis map keys to values for fast, simple data retrieval."}
{"prompt":"How to use Redis sets?","completion":"SADD myset 'value1' 'value2'; SMEMBERS myset;"}
{"prompt":"Write a SQL query to find employees by name pattern.","completion":"SELECT * FROM employees WHERE name LIKE '%John%';"}
{"prompt":"How to delete a single document in MongoDB?","completion":"db.collection.deleteOne({ condition });"}
{"prompt":"Explain SQL primary keys.","completion":"Primary keys uniquely identify each row in a table, ensuring no duplicates."}
{"prompt":"How to find relationships in Neo4j?","completion":"MATCH (n)-[r:RELATION]->(m) RETURN r;"}
{"prompt":"How to use $sort in MongoDB?","completion":"db.collection.aggregate([{ $sort: { field: 1 } }]);"}
{"prompt":"Explain NoSQL wide-column stores.","completion":"Wide-column stores like Cassandra store data in columns for scalability and flexibility."}
{"prompt":"How to use Redis streams?","completion":"XADD mystream * field1 value1; XREAD COUNT 10 STREAMS mystream 0;"}
{"prompt":"Explain SQL check constraints.","completion":"CHECK constraints enforce specific conditions, like salary > 0, on column values."}
{"prompt":"How to create a Neo4j relationship with properties?","completion":"CREATE (n)-[:RELATION {property: 'value'}]->(m);"}
{"prompt":"Explain SQL unique constraints.","completion":"UNIQUE constraints ensure no duplicate values in a column or set of columns."}
{"prompt":"How to use Redis bitmaps?","completion":"SETBIT mybitmap 10 1; GETBIT mybitmap 10;"}
{"prompt":"What's evolution theory?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department and city.","completion":"SELECT * FROM employees WHERE department = 'Sales' AND city = 'Chicago';"}
{"prompt":"How to use $all in MongoDB?","completion":"db.collection.find({ array_field: { $all: ['value1', 'value2'] } });"}
{"prompt":"Explain SQL foreign key constraints.","completion":"Foreign keys enforce relationships between tables, linking to a primary key in another table."}
{"prompt":"How to delete a relationship in Neo4j?","completion":"MATCH ()-[r:RELATION]->() DELETE r;"}
{"prompt":"Write a SQL query to find employees hired in the last 6 months.","completion":"SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURDATE(), INTERVAL 6 MONTH);"}
{"prompt":"Explain SQL temporary tables.","completion":"Temporary tables exist only for a session: CREATE TEMPORARY TABLE temp_table (...);"}
{"prompt":"How to use Redis geospatial data?","completion":"GEOADD mygeo 13.361389 38.115556 'location'; GEORADIUS mygeo 15 37 200 km;"}
{"prompt":"Write a SQL query to find employees with multiple roles.","completion":"SELECT name, COUNT(role) FROM employees GROUP BY name HAVING COUNT(role) > 1;"}
{"prompt":"Explain SQL stored procedures.","completion":"Stored procedures are precompiled SQL code stored in the database, invoked with CALL."}
{"prompt":"How to create a Neo4j node with multiple labels?","completion":"CREATE (n:Label1:Label2 {property: 'value'});"}
{"prompt":"Write a SQL query to find employees by manager ID.","completion":"SELECT * FROM employees WHERE manager_id = 101;"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ condition }, { $push: { array_field: 'value' } });"}
{"prompt":"Explain SQL cursors.","completion":"Cursors allow row-by-row processing of query results in stored procedures."}
{"prompt":"How to use Redis sets for unique values?","completion":"SADD myset 'value1' 'value2'; SCARD myset;"}
{"prompt":"Write a SQL query to find employees by salary range.","completion":"SELECT * FROM employees WHERE salary BETWEEN 40000 AND 70000;"}
{"prompt":"How to use $pull in MongoDB?","completion":"db.collection.updateOne({ condition }, { $pull: { array_field: 'value' } });"}
{"prompt":"Explain SQL partitioning.","completion":"Partitioning splits large tables into smaller, manageable pieces for performance."}
{"prompt":"How to query Redis sorted set range?","completion":"ZRANGE myzset 0 10 WITHSCORES;"}
{"prompt":"How to learn Java?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees with specific skills.","completion":"SELECT * FROM employees WHERE skills LIKE '%Python%';"}
{"prompt":"How to use $inc in MongoDB?","completion":"db.collection.updateOne({ condition }, { $inc: { field: 1 } });"}
{"prompt":"Explain SQL triggers vs stored procedures.","completion":"Triggers run automatically on table events; stored procedures are manually invoked."}
{"prompt":"How to create a Neo4j unique constraint?","completion":"CREATE CONSTRAINT FOR (n:Label) REQUIRE n.property IS UNIQUE;"}
{"prompt":"Write a SQL query to find employees by birth year.","completion":"SELECT * FROM employees WHERE YEAR(birth_date) = 1990;"}
{"prompt":"How to use $elemMatch in MongoDB?","completion":"db.collection.find({ array_field: { $elemMatch: { subfield: 'value' } } });"}
{"prompt":"Explain SQL materialized views.","completion":"Materialized views store query results physically, refreshed periodically."}
{"prompt":"How to use Redis bitfields?","completion":"BITFIELD mykey INCRBY u8 0 1;"}
{"prompt":"Write a SQL query to find employees with high performance ratings.","completion":"SELECT * FROM employees WHERE performance_rating >= 4;"}
{"prompt":"How to use $addToSet in MongoDB?","completion":"db.collection.updateOne({ condition }, { $addToSet: { array_field: 'value' } });"}
{"prompt":"Explain SQL sequences.","completion":"Sequences generate unique numeric values, like CREATE SEQUENCE seq_name;"}
{"prompt":"How to query Neo4j node properties?","completion":"MATCH (n:Label) WHERE n.property = 'value' RETURN n;"}
{"prompt":"Write a SQL query to find employees by project ID.","completion":"SELECT * FROM employees WHERE project_id = 1001;"}
{"prompt":"Explain SQL full-text search.","completion":"Full-text search uses indexes to search text efficiently, like MATCH column AGAINST 'term';"}
{"prompt":"How to use Redis pub/sub with channels?","completion":"PSUBSCRIBE 'channel*'; PUBLISH channel1 'message';"}
{"prompt":"What's the solar system?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use $slice in MongoDB?","completion":"db.collection.find({}, { array_field: { $slice: [1, 3] } });"}
{"prompt":"Explain SQL window functions.","completion":"Window functions perform calculations across rows, like RANK() OVER (PARTITION BY column);"}
{"prompt":"How to use Redis time series?","completion":"TS.CREATE myts; TS.ADD myts * 100;"}
{"prompt":"Write a SQL query to find employees by team.","completion":"SELECT * FROM employees WHERE team_id = 5;"}
{"prompt":"Explain SQL roles.","completion":"Roles grant permissions to users, like CREATE ROLE role_name; GRANT SELECT TO role_name;"}
{"prompt":"How to delete a Neo4j index?","completion":"DROP INDEX index_name;"}
{"prompt":"Explain SQL table partitioning.","completion":"Table partitioning splits large tables into smaller parts for performance, like by range or list."}
{"prompt":"How to use Redis hyperloglog?","completion":"PFADD myhll 'value1' 'value2'; PFCOUNT myhll;"}
{"prompt":"What's digital photography?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain SQL views vs materialized views.","completion":"Views are virtual; materialized views store data physically and need refreshing."}
{"prompt":"How to use Redis transactions with WATCH?","completion":"WATCH mykey; MULTI; SET mykey 'value'; EXEC;"}
{"prompt":"Write a SQL query to find employees by tenure.","completion":"SELECT * FROM employees WHERE DATEDIFF(CURDATE(), hire_date) > 365;"}
{"prompt":"How to use $max in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: null, maxVal: { $max: '$field' } } }]);"}
{"prompt":"Explain SQL composite keys.","completion":"Composite keys use multiple columns to uniquely identify rows, like PRIMARY KEY (col1, col2)."}
{"prompt":"How to query Neo4j for node count?","completion":"MATCH (n) RETURN COUNT(n);"}
{"prompt":"How to cook steak?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use $min in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: null, minVal: { $min: '$field' } } }]);"}
{"prompt":"Explain SQL default constraints.","completion":"DEFAULT constraints set a default value for a column if none is provided."}
{"prompt":"How to use Redis lists for queues?","completion":"LPUSH queue 'task'; RPOP queue;"}
{"prompt":"Write a SQL query to find employees by age range.","completion":"SELECT * FROM employees WHERE age BETWEEN 25 AND 40;"}
{"prompt":"How to use $avg in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: null, avgVal: { $avg: '$field' } } }]);"}
{"prompt":"Explain SQL triggers for auditing.","completion":"Triggers can log changes, like INSERT INTO audit_log AFTER UPDATE ON table;"}
{"prompt":"How to create a Neo4j relationship with multiple properties?","completion":"CREATE (n)-[:RELATION {prop1: 'val1', prop2: 'val2'}]->(m);"}
{"prompt":"What's the history of Egypt?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by project completion.","completion":"SELECT * FROM employees WHERE project_completed = true;"}
{"prompt":"How to use $sum in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: null, total: { $sum: '$field' } } }]);"}
{"prompt":"Explain SQL cascade deletes.","completion":"CASCADE deletes remove related rows in child tables when a parent row is deleted."}
{"prompt":"How to use Redis for caching?","completion":"SET cache_key 'value' EX 3600; GET cache_key;"}
{"prompt":"Write a SQL query to find employees by office location.","completion":"SELECT * FROM employees WHERE office = 'HQ';"}
{"prompt":"How to use $set in MongoDB?","completion":"db.collection.updateOne({ condition }, { $set: { field: 'new_value' } });"}
{"prompt":"Explain SQL self-joins.","completion":"Self-joins join a table to itself, like SELECT e1.name, e2.name FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id;"}
{"prompt":"How to query Neo4j for all relationships?","completion":"MATCH ()-[r]->() RETURN r;"}
{"prompt":"Write a SQL query to find employees by performance score.","completion":"SELECT * FROM employees WHERE performance_score > 80;"}
{"prompt":"How to use $unset in MongoDB?","completion":"db.collection.updateOne({ condition }, { $unset: { field: '' } });"}
{"prompt":"Explain SQL clustered vs non-clustered indexes.","completion":"Clustered indexes define data storage order; non-clustered indexes are separate structures."}
{"prompt":"How to use Redis for session storage?","completion":"SET session:user123 '{data}' EX 86400;"}
{"prompt":"What's deep learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by contract type.","completion":"SELECT * FROM employees WHERE contract_type = 'Full-time';"}
{"prompt":"Explain SQL temporary tables vs views.","completion":"Temporary tables store data temporarily; views are virtual query results."}
{"prompt":"How to create a Neo4j node index?","completion":"CREATE INDEX FOR (n:Label) ON (n.property);"}
{"prompt":"Write a SQL query to find employees by training completion.","completion":"SELECT * FROM employees WHERE training_completed = true;"}
{"prompt":"Explain SQL table inheritance.","completion":"Inheritance allows tables to inherit columns from a parent table, like in PostgreSQL."}
{"prompt":"How to use Redis for rate limiting?","completion":"INCR counter; EXPIRE counter 60;"}
{"prompt":"Explain SQL common table expressions.","completion":"CTEs define temporary result sets, like WITH cte AS (SELECT ...) SELECT * FROM cte;"}
{"prompt":"How to query Neo4j for node degree?","completion":"MATCH (n)-[r]-() RETURN n, COUNT(r) AS degree;"}
{"prompt":"Write a SQL query to find employees by certification.","completion":"SELECT * FROM employees WHERE certification = 'PMP';"}
{"prompt":"How to use $out in MongoDB?","completion":"db.collection.aggregate([{ $out: 'new_collection' }]);"}
{"prompt":"Explain SQL recursive queries.","completion":"Recursive queries use CTEs to traverse hierarchies, like WITH RECURSIVE cte AS (...) SELECT * FROM cte;"}
{"prompt":"How to use Redis for leaderboards?","completion":"ZADD leaderboard 1000 'player1'; ZREVRANGE leaderboard 0 9 WITHSCORES;"}
{"prompt":"What's nanotechnology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by language skills.","completion":"SELECT * FROM employees WHERE languages LIKE '%Spanish%';"}
{"prompt":"How to use $facet in MongoDB?","completion":"db.collection.aggregate([{ $facet: { stage1: [...], stage2: [...] } }]);"}
{"prompt":"Explain SQL data types.","completion":"Common SQL data types include INT, VARCHAR, DATE, BOOLEAN, FLOAT for defining column data."}
{"prompt":"How to create a Neo4j full-text index?","completion":"CALL db.index.fulltext.createNodeIndex('indexName', ['Label'], ['property']);"}
{"prompt":"Explain SQL normalization forms.","completion":"Normalization forms (1NF, 2NF, 3NF) reduce redundancy and improve data integrity."}
{"prompt":"How to use Redis for distributed locks?","completion":"SET lock_key 'value' NX PX 30000; DEL lock_key;"}
{"prompt":"Write a SQL query to find employees by education level.","completion":"SELECT * FROM employees WHERE education_level = 'Bachelor';"}
{"prompt":"How to use $expr in MongoDB?","completion":"db.collection.find({ $expr: { $gt: ['$field1', '$field2'] } });"}
{"prompt":"Explain SQL data integrity.","completion":"Data integrity ensures accuracy and consistency through constraints, transactions, and validations."}
{"prompt":"How to create a Neo4j constraint on multiple properties?","completion":"CREATE CONSTRAINT FOR (n:Label) REQUIRE (n.prop1, n.prop2) IS UNIQUE;"}
{"prompt":"Write a SQL query to find employees by work experience.","completion":"SELECT * FROM employees WHERE experience_years > 5;"}
{"prompt":"How to use $dateFromString in MongoDB?","completion":"db.collection.aggregate([{ $addFields: { dateField: { $dateFromString: { dateString: '$stringField' } } } }]);"}
{"prompt":"Explain SQL data warehousing.","completion":"Data warehousing aggregates data from multiple sources for analysis and reporting."}
{"prompt":"How to use Redis for message queues?","completion":"LPUSH queue 'message'; BRPOP queue 0;"}
{"prompt":"How to use $toUpper in MongoDB?","completion":"db.collection.aggregate([{ $addFields: { upperField: { $toUpper: '$field' } } }]);"}
{"prompt":"Explain SQL data migration.","completion":"Data migration transfers data between systems, ensuring integrity and minimal downtime."}
{"prompt":"How to create a Neo4j relationship index?","completion":"CREATE INDEX FOR ()-[r:RELATION]-() ON (r.property);"}
{"prompt":"How to play the piano?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find employees by department head.","completion":"SELECT * FROM employees WHERE department_head_id = 10;"}
{"prompt":"How to use $toLower in MongoDB?","completion":"db.collection.aggregate([{ $addFields: { lowerField: { $toLower: '$field' } } }]);"}
{"prompt":"Explain SQL data replication.","completion":"Data replication copies data across servers for redundancy and load balancing."}
{"prompt":"How to use Redis for real-time analytics?","completion":"ZINCRBY analytics 'event' 1; ZRANGE analytics 0 -1 WITHSCORES;"}
{"prompt":"Write a SQL query to find employees by work shift.","completion":"SELECT * FROM employees WHERE work_shift = 'Evening';"}
{"prompt":"How to use $substr in MongoDB?","completion":"db.collection.aggregate([{ $addFields: { substrField: { $substr: ['$field', 0, 5] } } }]);"}
{"prompt":"Write a MongoDB query to find documents where age < 30","completion":"db.collection.find({ age: { $lt: 30 } });"}
{"prompt":"Explain the difference between SQL and NoSQL databases","completion":"SQL databases are relational, using structured schemas and tables with predefined relationships, while NoSQL databases are non-relational, offering flexible schemas for unstructured or semi-structured data, like documents or graphs."}
{"prompt":"Create a SQL table for storing customer data","completion":"CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(100), email VARCHAR(100), created_at TIMESTAMP);"}
{"prompt":"How to insert a document in MongoDB?","completion":"db.collection.insertOne({ field1: value1, field2: value2 });"}
{"prompt":"Find all products with price > 100 in MongoDB","completion":"db.products.find({ price: { $gt: 100 } });"}
{"prompt":"How to update a record in SQL?","completion":"UPDATE table_name SET column = value WHERE condition;"}
{"prompt":"Explain indexing in MongoDB","completion":"Indexing in MongoDB creates data structures to improve query performance. Use: db.collection.createIndex({ field: 1 });"}
{"prompt":"How to delete a key in Redis?","completion":"DEL key_name;"}
{"prompt":"What's a foreign key in SQL?","completion":"A foreign key is a column that creates a relationship between two tables, referencing the primary key of another table."}
{"prompt":"Query to find top 5 salaries in SQL","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"}
{"prompt":"How to use aggregation in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"Write a SQL query for left join","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Create a Neo4j node for a person","completion":"CREATE (p:Person { name: 'Alice', age: 30 });"}
{"prompt":"How to group by in SQL?","completion":"SELECT column, COUNT(*) FROM table_name GROUP BY column;"}
{"prompt":"Find all users with age between 20 and 30 in MongoDB","completion":"db.users.find({ age: { $gte: 20, $lte: 30 } });"}
{"prompt":"What's a NoSQL database?","completion":"A NoSQL database is a non-relational database that stores data in formats like documents, key-value pairs, or graphs, allowing for flexible schemas."}
{"prompt":"Write a SQL query to delete records","completion":"DELETE FROM table_name WHERE condition;"}
{"prompt":"How to use transactions in MongoDB?","completion":"const session = client.startSession(); session.startTransaction(); try { /* operations */ await session.commitTransaction(); } catch (e) { await session.abortTransaction(); } finally { session.endSession(); }"}
{"prompt":"Explain normalization in SQL","completion":"Normalization organizes data to reduce redundancy and improve integrity, typically through normal forms (1NF, 2NF, 3NF)."}
{"prompt":"Write a Redis command to get a value by key","completion":"GET key_name;"}
{"prompt":"Find all orders placed in the last 7 days in MongoDB","completion":"db.orders.find({ order_date: { $gte: new Date(Date.now() - 7*24*60*60*1000) } });"}
{"prompt":"What's ACID in databases?","completion":"ACID stands for Atomicity, Consistency, Isolation, Durability; it ensures reliable transaction processing in databases."}
{"prompt":"Write a SQL query to find employees with salary > 60000","completion":"SELECT * FROM employees WHERE salary > 60000;"}
{"prompt":"Explain the difference between DELETE and TRUNCATE in SQL","completion":"DELETE removes rows one at a time and can be rolled back; TRUNCATE removes all rows quickly without logging individual row deletions and cannot be rolled back."}
{"prompt":"Write a Redis command to increment a numeric value","completion":"INCR key_name;"}
{"prompt":"How to alter a table in SQL?","completion":"ALTER TABLE table_name ADD column_name datatype; ALTER TABLE table_name DROP COLUMN column_name;"}
{"prompt":"How to create a stored procedure in SQL?","completion":"CREATE PROCEDURE procedure_name AS BEGIN /* SQL statements */ END;"}
{"prompt":"Explain the difference between SQL and NoSQL databases.","completion":"SQL databases are relational, using structured schemas and SQL for queries, while NoSQL databases are non-relational, supporting flexible schemas for unstructured data like documents or graphs."}
{"prompt":"Write a Redis command to set a key-value pair.","completion":"SET mykey 'value';"}
{"prompt":"What's a primary key in SQL?","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicates and not null."}
{"prompt":"Write a SQL query to join two tables.","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ filter }, { $set: { field: new_value } });"}
{"prompt":"Write a SQL query to delete records where age < 25.","completion":"DELETE FROM table_name WHERE age < 25;"}
{"prompt":"Explain indexing in databases.","completion":"Indexing creates a data structure to improve query performance by allowing faster data retrieval, like a book index."}
{"prompt":"Write a Neo4j query to find all nodes with a specific property.","completion":"MATCH (n:Label {property: 'value'}) RETURN n;"}
{"prompt":"Write a MongoDB query to sort documents by a field.","completion":"db.collection.find().sort({ field: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"How to add an element to a Redis list?","completion":"LPUSH mylist 'element';"}
{"prompt":"Write a Cassandra query to insert data.","completion":"INSERT INTO keyspace.table_name (col1, col2) VALUES (value1, value2);"}
{"prompt":"What's a graph database?","completion":"A graph database stores data as nodes and relationships, ideal for complex networks like social graphs, e.g., Neo4j."}
{"prompt":"Write a SQL query to count rows in a table.","completion":"SELECT COUNT(*) FROM table_name;"}
{"prompt":"How to publish a message in Redis?","completion":"PUBLISH channel 'message';"}
{"prompt":"Explain normalization in SQL.","completion":"Normalization organizes data to reduce redundancy and improve data integrity by dividing a database into smaller, related tables."}
{"prompt":"Write a SQL query to find employees with salary > 50000","completion":"SELECT * FROM employees WHERE salary > 50000;"}
{"prompt":"What's a foreign key in SQL?","completion":"A foreign key is a field (or collection of fields) in one table that uniquely identifies a row of another table or the same table. It creates a relationship between the two tables."}
{"prompt":"How do I select all products from a table named 'products' in SQL?","completion":"SELECT * FROM products;"}
{"prompt":"What's the difference between INNER JOIN and LEFT JOIN in SQL?","completion":"INNER JOIN returns only matching rows from both tables, while LEFT JOIN returns all rows from the left table and matching rows from the right, with NULLs for non-matches."}
{"prompt":"Write a MongoDB query to find all documents in the 'users' collection where age is greater than 30.","completion":"db.users.find({ age: { $gt: 30 } });"}
{"prompt":"Explain primary keys in SQL databases.","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicates and enabling fast lookups."}
{"prompt":"How to set a key-value pair in Redis?","completion":"SET user:123 name \"John Doe\""}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $set: { field: \"newValue\" } });"}
{"prompt":"What are ACID properties in databases?","completion":"ACID stands for Atomicity, Consistency, Isolation, Durability, ensuring reliable transactions."}
{"prompt":"How to create an index in SQL?","completion":"CREATE INDEX idx_name ON table_name (column_name);"}
{"prompt":"Write a MongoDB query to delete documents where status is 'inactive'.","completion":"db.collection.deleteMany({ status: \"inactive\" });"}
{"prompt":"Explain normalization in relational databases.","completion":"Normalization organizes data into tables to reduce redundancy, following forms like 1NF, 2NF, 3NF."}
{"prompt":"How to retrieve a value from Redis?","completion":"GET mykey"}
{"prompt":"Write a SQL query using a HAVING clause.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"How to perform a join in SQL?","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Write a Neo4j query to create a relationship.","completion":"MATCH (a:Person), (b:Person) CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key links two tables by referencing a primary key in another table, enforcing referential integrity."}
{"prompt":"How to push an element to a list in Redis?","completion":"LPUSH mylist \"value\""}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.orders.aggregate([{ $lookup: { from: \"inventory\", localField: \"item\", foreignField: \"sku\", as: \"inventory_docs\" } }]);"}
{"prompt":"What is CAP theorem?","completion":"CAP theorem states that distributed systems can provide at most two of Consistency, Availability, Partition tolerance."}
{"prompt":"How to create a table in SQL?","completion":"CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50) NOT NULL);"}
{"prompt":"Explain eventual consistency in NoSQL.","completion":"Eventual consistency means replicas may differ temporarily but will converge over time."}
{"prompt":"How to expire a key in Redis?","completion":"SET mykey \"value\" EX 60 // expires in 60 seconds"}
{"prompt":"Write a SQL query using UNION.","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"What is a graph database?","completion":"Graph databases like Neo4j store data as nodes and relationships, ideal for connected data."}
{"prompt":"How to optimize a SQL query?","completion":"Add indexes, avoid SELECT *, use EXPLAIN to analyze, and filter with WHERE."}
{"prompt":"Write a MongoDB query to find distinct values.","completion":"db.collection.distinct(\"field\");"}
{"prompt":"Explain triggers in SQL.","completion":"Triggers are automatic procedures that run before or after database events like INSERT."}
{"prompt":"What's the best movie?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to unwind an array in MongoDB?","completion":"db.collection.aggregate([{ $unwind: \"$arrayField\" }]);"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data to improve read performance, common in NoSQL."}
{"prompt":"How to handle transactions in SQL?","completion":"Use BEGIN TRANSACTION; ... COMMIT; or ROLLBACK;"}
{"prompt":"Write a MongoDB query to update multiple documents.","completion":"db.collection.updateMany({ status: \"old\" }, { $set: { status: \"new\" } });"}
{"prompt":"How to retrieve a hash in Redis?","completion":"HGETALL myhash"}
{"prompt":"What is a column-family store?","completion":"A column-family store, like Cassandra, organizes data into columns grouped into families."}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT ...) PIVOT (SUM(value) FOR column IN ('val1', 'val2'));"}
{"prompt":"Explain partitioning in SQL.","completion":"Partitioning divides large tables into smaller pieces for better performance and management."}
{"prompt":"Write a Neo4j query to find shortest path.","completion":"MATCH p=shortestPath((a:Person)-[*]-(b:Person)) RETURN p;"}
{"prompt":"What is BASE in NoSQL?","completion":"BASE (Basically Available, Soft state, Eventual consistency) is an alternative to ACID."}
{"prompt":"Explain caching with Redis.","completion":"Redis caches data in memory for faster retrieval than disk-based databases."}
{"prompt":"Write a MongoDB query with projection.","completion":"db.collection.find({}, { field1: 1, field2: 0 });"}
{"prompt":"Write a SQL query for batch insert.","completion":"INSERT INTO table VALUES (val1), (val2), ...;"}
{"prompt":"Explain multi-tenancy in databases.","completion":"Multi-tenancy isolates data for multiple users/tenants sharing a database."}
{"prompt":"Write a MongoDB query to rename a collection.","completion":"db.collection.renameCollection(\"newName\");"}
{"prompt":"How to write a SQL query for average salary?","completion":"SELECT AVG(salary) FROM employees;"}
{"prompt":"What is schema-less design in NoSQL?","completion":"Schema-less design allows flexible data structures without predefined schemas."}
{"prompt":"Explain joins in NoSQL databases.","completion":"NoSQL often uses denormalization or application-level joins; MongoDB uses $lookup."}
{"prompt":"Write a Neo4j query to create a node.","completion":"CREATE (n:Person {name: 'Alice'});"}
{"prompt":"Write a MongoDB query to find documents by regex.","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"Explain clustering in databases.","completion":"Clustering groups related data on disk to improve query performance."}
{"prompt":"How to use EXISTS in SQL?","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE condition);"}
{"prompt":"Write a SQL query with CASE statement.","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"How to aggregate in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: \"$category\", total: { $sum: \"$price\" } } }]);"}
{"prompt":"Explain database transactions.","completion":"Transactions ensure a series of operations complete successfully or roll back to maintain consistency."}
{"prompt":"Write a SQL query to join three tables.","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id INNER JOIN table3 ON table2.id = table3.id;"}
{"prompt":"Write a MongoDB query to find null values.","completion":"db.collection.find({ field: null });"}
{"prompt":"Explain write-ahead logging in databases.","completion":"Write-ahead logging records changes to a log before applying them to ensure durability."}
{"prompt":"What is a wide-column store?","completion":"A wide-column store, like Cassandra, stores data in flexible column families."}
{"prompt":"Write a Neo4j query to find all relationships of a node.","completion":"MATCH (n:Person)-[r]->() RETURN r;"}
{"prompt":"Explain database cursors in SQL.","completion":"Cursors allow row-by-row processing of query results in SQL."}
{"prompt":"How to project specific fields in MongoDB?","completion":"db.collection.find({}, { field1: 1, _id: 0 });"}
{"prompt":"What is data consistency in NoSQL?","completion":"Consistency ensures all nodes in a distributed system have the same data view."}
{"prompt":"How to perform a full-text search in MongoDB?","completion":"db.collection.createIndex({ field: \"text\" }); db.collection.find({ $text: { $search: \"term\" } });"}
{"prompt":"Explain query optimization in SQL.","completion":"Query optimization involves analyzing execution plans and adding indexes to improve performance."}
{"prompt":"How to use $in in MongoDB?","completion":"db.collection.find({ field: { $in: [\"value1\", \"value2\"] } });"}
{"prompt":"Explain database roles in SQL.","completion":"Roles are sets of permissions assigned to users for access control."}
{"prompt":"Write a Redis query to add to a sorted set.","completion":"ZADD mysortedset 1 \"value\""}
{"prompt":"How to create a unique constraint in SQL?","completion":"ALTER TABLE table_name ADD CONSTRAINT constraint_name UNIQUE (column);"}
{"prompt":"Explain two-phase commit in databases.","completion":"Two-phase commit ensures all nodes agree on a transaction before committing."}
{"prompt":"How to get the length of a Redis list?","completion":"LLEN mylist"}
{"prompt":"Write a Neo4j query to update a property.","completion":"MATCH (n:Node {id: 1}) SET n.property = 'newValue';"}
{"prompt":"Write a MongoDB query to find documents by date.","completion":"db.collection.find({ date: { $gte: new Date(\"2023-01-01\") } });"}
{"prompt":"Explain database views.","completion":"Views are virtual tables created from a query, used for security and simplicity."}
{"prompt":"How to remove a member from a Redis set?","completion":"SREM myset \"value\""}
{"prompt":"Write a SQL query with IN clause.","completion":"SELECT * FROM table WHERE column IN ('value1', 'value2');"}
{"prompt":"What is a TTL index in MongoDB?","completion":"A TTL index automatically removes documents after a specified time."}
{"prompt":"Explain database locks.","completion":"Locks prevent concurrent access to data to maintain consistency during transactions."}
{"prompt":"How to use $all in MongoDB?","completion":"db.collection.find({ tags: { $all: [\"tag1\", \"tag2\"] } });"}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH ()-[r:RELATION]->() DELETE r;"}
{"prompt":"Explain read replicas in databases.","completion":"Read replicas are copies of a primary database for handling read-heavy workloads."}
{"prompt":"Write a MongoDB query to group by multiple fields.","completion":"db.collection.aggregate([{ $group: { _id: { field1: \"$field1\", field2: \"$field2\" }, count: { $sum: 1 } } }]);"}
{"prompt":"How to get a random element from a Redis set?","completion":"SRANDMEMBER myset"}
{"prompt":"What is a self-join in SQL?","completion":"A self-join joins a table to itself to compare rows within the same table."}
{"prompt":"Explain geospatial queries in MongoDB.","completion":"Geospatial queries find data based on location using $near or $geoWithin."}
{"prompt":"How to create a trigger in SQL?","completion":"CREATE TRIGGER trigger_name AFTER INSERT ON table FOR EACH ROW BEGIN ... END;"}
{"prompt":"Write a SQL query with LIMIT and OFFSET.","completion":"SELECT * FROM table LIMIT 10 OFFSET 20;"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $push: { arrayField: \"value\" } });"}
{"prompt":"Explain database indexing strategies.","completion":"Indexing strategies include B-tree for range queries, hash for exact matches, and composite indexes for multiple columns."}
{"prompt":"Write a Redis query to increment a hash field.","completion":"HINCRBY myhash field 1"}
{"prompt":"What is a check constraint in SQL?","completion":"A check constraint enforces a condition on column values, e.g., age > 18."}
{"prompt":"Write a MongoDB query to find documents with arrays.","completion":"db.collection.find({ arrayField: { $elemMatch: { $eq: \"value\" } } });"}
{"prompt":"Explain write conflicts in databases.","completion":"Write conflicts occur when multiple transactions try to modify the same data simultaneously."}
{"prompt":"Write a SQL query with RANK function.","completion":"SELECT name, RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"How to use $pull in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $pull: { arrayField: \"value\" } });"}
{"prompt":"Write a Neo4j query to find nodes with multiple relationships.","completion":"MATCH (n)-[r:RELATION]->() WHERE size((n)-[:RELATION]->()) > 1 RETURN n;"}
{"prompt":"How to use IS NULL in SQL?","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"Explain data sharding strategies.","completion":"Sharding strategies include range-based, hash-based, and directory-based partitioning."}
{"prompt":"Write a MongoDB query to sort and limit.","completion":"db.collection.find().sort({ field: -1 }).limit(5);"}
{"prompt":"How to use ZRANGE in Redis?","completion":"ZRANGE mysortedset 0 -1"}
{"prompt":"Write a SQL query with DENSE_RANK.","completion":"SELECT name, DENSE_RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"Explain change data capture in databases.","completion":"Change data capture tracks changes to a database for replication or auditing."}
{"prompt":"Write a MongoDB query to find by ObjectId.","completion":"db.collection.find({ _id: ObjectId(\"123456789012345678901234\") });"}
{"prompt":"How to write a book?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with ROW_NUMBER.","completion":"SELECT name, ROW_NUMBER() OVER (ORDER BY salary) FROM employees;"}
{"prompt":"How to use $setOnInsert in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $setOnInsert: { createdAt: new Date() } }, { upsert: true });"}
{"prompt":"Explain database migration.","completion":"Database migration involves moving data or schema between databases or versions."}
{"prompt":"Write a Redis query to get sorted set scores.","completion":"ZSCORE mysortedset \"value\""}
{"prompt":"What is a covering index in SQL?","completion":"A covering index contains all columns needed for a query, avoiding table access."}
{"prompt":"Write a MongoDB query to find documents with specific array length.","completion":"db.collection.find({ arrayField: { $size: 3 } });"}
{"prompt":"Explain optimistic locking in databases.","completion":"Optimistic locking assumes no conflicts and checks for changes before committing."}
{"prompt":"Write a SQL query with LEFT OUTER JOIN.","completion":"SELECT * FROM table1 LEFT OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to use $inc in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $inc: { counter: 1 } });"}
{"prompt":"Write a Neo4j query to find all paths between two nodes.","completion":"MATCH p=(a:Person)-[*1..3]-(b:Person) RETURN p;"}
{"prompt":"Explain in-memory databases.","completion":"In-memory databases store data in RAM for faster access, like Redis."}
{"prompt":"Write a MongoDB query to find documents by multiple conditions.","completion":"db.collection.find({ $and: [{ field1: \"value1\" }, { field2: \"value2\" }] });"}
{"prompt":"How to use ZREM in Redis?","completion":"ZREM mysortedset \"value\""}
{"prompt":"Explain data warehousing.","completion":"Data warehousing stores large volumes of historical data for analytics."}
{"prompt":"Write a MongoDB query to find by array elements.","completion":"db.collection.find({ tags: \"value\" });"}
{"prompt":"How to plant a garden?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with PARTITION BY.","completion":"SELECT name, salary, ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary) FROM employees;"}
{"prompt":"How to use $or in MongoDB?","completion":"db.collection.find({ $or: [{ field1: \"value1\" }, { field2: \"value2\" }] });"}
{"prompt":"Explain database triggers.","completion":"Triggers are automated actions executed in response to database events."}
{"prompt":"Write a Redis query to get all keys matching a pattern.","completion":"KEYS prefix*"}
{"prompt":"What is a non-clustered index in SQL?","completion":"A non-clustered index stores pointers to data, separate from the table’s physical order."}
{"prompt":"Write a MongoDB query to find documents with missing fields.","completion":"db.collection.find({ field: { $exists: false } });"}
{"prompt":"Explain database snapshots.","completion":"Snapshots capture a database’s state at a specific point in time."}
{"prompt":"How to use $addToSet in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $addToSet: { arrayField: \"value\" } });"}
{"prompt":"Write a Neo4j query to count relationships.","completion":"MATCH ()-[r:RELATION]->() RETURN count(r);"}
{"prompt":"How to use DATEADD in SQL?","completion":"SELECT DATEADD(day, 7, GETDATE()) AS new_date;"}
{"prompt":"Explain database performance tuning.","completion":"Performance tuning optimizes queries, indexes, and hardware for faster database operations."}
{"prompt":"Write a MongoDB query to find top N documents.","completion":"db.collection.find().sort({ field: -1 }).limit(5);"}
{"prompt":"How to use ZCOUNT in Redis?","completion":"ZCOUNT mysortedset 1 10"}
{"prompt":"What is a database constraint?","completion":"Constraints enforce rules on data, like NOT NULL or UNIQUE."}
{"prompt":"Write a SQL query with EXISTS subquery.","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table2.id = table1.id);"}
{"prompt":"Explain geospatial indexes in MongoDB.","completion":"Geospatial indexes support location-based queries using 2d or 2dsphere indexes."}
{"prompt":"Write a SQL query to find nth highest salary.","completion":"SELECT DISTINCT salary FROM employees ORDER BY salary DESC LIMIT 1 OFFSET n-1;"}
{"prompt":"Explain database federation.","completion":"Database federation combines data from multiple independent databases for unified access."}
{"prompt":"Write a MongoDB query to update nested fields.","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $set: { \"nested.field\": \"value\" } });"}
{"prompt":"How to use SMEMBERS in Redis?","completion":"SMEMBERS myset"}
{"prompt":"What is a database transaction log?","completion":"A transaction log records all changes for recovery and consistency."}
{"prompt":"Write a SQL query with CROSS JOIN.","completion":"SELECT * FROM table1 CROSS JOIN table2;"}
{"prompt":"Explain write scalability in NoSQL.","completion":"Write scalability distributes write operations across nodes for high throughput."}
{"prompt":"Write a MongoDB query to find by timestamp.","completion":"db.collection.find({ timestamp: { $gte: ISODate(\"2023-01-01T00:00:00Z\") } });"}
{"prompt":"How to use $slice in MongoDB?","completion":"db.collection.find({}, { arrayField: { $slice: [1, 3] } });"}
{"prompt":"Explain database deadlocks.","completion":"Deadlocks occur when transactions wait for each other’s locked resources."}
{"prompt":"Write a Redis query to get hash field.","completion":"HGET myhash field"}
{"prompt":"Write a SQL query with LAG function.","completion":"SELECT name, salary, LAG(salary) OVER (ORDER BY salary) AS prev_salary FROM employees;"}
{"prompt":"How to use $match in MongoDB?","completion":"db.collection.aggregate([{ $match: { field: \"value\" } }]);"}
{"prompt":"Explain database connection pooling.","completion":"Connection pooling reuses database connections to reduce overhead."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship type.","completion":"MATCH (n)-[:RELATION_TYPE]->(m) RETURN n, m;"}
{"prompt":"Write a SQL query with LEAD function.","completion":"SELECT name, salary, LEAD(salary) OVER (ORDER BY salary) AS next_salary FROM employees;"}
{"prompt":"How to use $group in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: \"$field\", count: { $sum: 1 } } }]);"}
{"prompt":"Explain database sharding vs partitioning.","completion":"Sharding distributes data across servers; partitioning splits data within a database."}
{"prompt":"Write a Redis query to get set intersection.","completion":"SINTER set1 set2"}
{"prompt":"Write a MongoDB query to find documents with specific array value.","completion":"db.collection.find({ arrayField: { $eq: \"value\" } });"}
{"prompt":"Explain database failover.","completion":"Failover switches to a backup system during primary system failure."}
{"prompt":"Write a SQL query with NTILE function.","completion":"SELECT name, salary, NTILE(4) OVER (ORDER BY salary) AS quartile FROM employees;"}
{"prompt":"Explain database load balancing.","completion":"Load balancing distributes queries across servers for performance and availability."}
{"prompt":"Write a MongoDB query to find documents with specific field type.","completion":"db.collection.find({ field: { $type: \"string\" } });"}
{"prompt":"How to use ZRANK in Redis?","completion":"ZRANK mysortedset \"value\""}
{"prompt":"What is a database sequence?","completion":"A sequence generates unique sequential numbers, often for primary keys."}
{"prompt":"Write a SQL query to find records with max value per group.","completion":"SELECT t1.* FROM table t1 WHERE t1.value = (SELECT MAX(value) FROM table t2 WHERE t2.group = t1.group);"}
{"prompt":"Explain database backup strategies.","completion":"Backup strategies include full, incremental, and differential backups for data recovery."}
{"prompt":"Write a MongoDB query to find documents with non-empty arrays.","completion":"db.collection.find({ arrayField: { $ne: [] } });"}
{"prompt":"Write a SQL query with FIRST_VALUE function.","completion":"SELECT name, salary, FIRST_VALUE(salary) OVER (PARTITION BY department ORDER BY salary) FROM employees;"}
{"prompt":"Explain database consistency models.","completion":"Consistency models define how data updates propagate, like strong or eventual consistency."}
{"prompt":"Write a Redis query to get set union.","completion":"SUNION set1 set2"}
{"prompt":"What is a database synonym?","completion":"A synonym is an alias for a database object, simplifying access."}
{"prompt":"Write a SQL query to find records with min value per group.","completion":"SELECT t1.* FROM table t1 WHERE t1.value = (SELECT MIN(value) FROM table t2 WHERE t2.group = t1.group);"}
{"prompt":"How to use $limit in MongoDB?","completion":"db.collection.aggregate([{ $limit: 5 }]);"}
{"prompt":"Explain database high availability.","completion":"High availability ensures continuous database access through redundancy and failover."}
{"prompt":"Write a Neo4j query to find nodes with specific property value.","completion":"MATCH (n { property: 'value' }) RETURN n;"}
{"prompt":"Write a SQL query with LAST_VALUE function.","completion":"SELECT name, salary, LAST_VALUE(salary) OVER (PARTITION BY department ORDER BY salary) FROM employees;"}
{"prompt":"How to use $skip in MongoDB?","completion":"db.collection.aggregate([{ $skip: 10 }]);"}
{"prompt":"Explain database replication lag.","completion":"Replication lag is the delay between a primary and its replica updating."}
{"prompt":"Write a Redis query to get set difference.","completion":"SDIFF set1 set2"}
{"prompt":"What is a database cursor?","completion":"A cursor allows row-by-row processing of query results in SQL."}
{"prompt":"Write a SQL query to find records with specific date range.","completion":"SELECT * FROM table WHERE date BETWEEN '2023-01-01' AND '2023-12-31';"}
{"prompt":"Explain database indexing overhead.","completion":"Indexing overhead includes storage and maintenance costs for faster queries."}
{"prompt":"How to use ROUND in SQL?","completion":"SELECT ROUND(column, 2) FROM table;"}
{"prompt":"Write a SQL query with GREATEST function.","completion":"SELECT GREATEST(col1, col2, col3) FROM table;"}
{"prompt":"How to use $count in MongoDB?","completion":"db.collection.aggregate([{ $count: \"total\" }]);"}
{"prompt":"Explain database transaction isolation levels.","completion":"Isolation levels (e.g., Read Committed, Serializable) control transaction visibility and concurrency."}
{"prompt":"Write a Redis query to get all hash fields.","completion":"HKEYS myhash"}
{"prompt":"What is a database foreign key constraint?","completion":"A foreign key constraint enforces referential integrity between tables."}
{"prompt":"Write a SQL query to find records with specific month.","completion":"SELECT * FROM table WHERE EXTRACT(MONTH FROM date) = 6;"}
{"prompt":"How to use $redact in MongoDB?","completion":"db.collection.aggregate([{ $redact: { $cond: { if: { $eq: [\"$level\", 1] }, then: \"$$KEEP\", else: \"$$PRUNE\" } } }]);"}
{"prompt":"Explain database denormalization trade-offs.","completion":"Denormalization improves read performance but increases write complexity and storage."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship count.","completion":"MATCH (n) WHERE size((n)-[:RELATION]->()) = 3 RETURN n;"}
{"prompt":"How to use FLOOR in SQL?","completion":"SELECT FLOOR(column) FROM table;"}
{"prompt":"Write a SQL query with LEAST function.","completion":"SELECT LEAST(col1, col2, col3) FROM table;"}
{"prompt":"How to use $out in MongoDB?","completion":"db.collection.aggregate([{ $out: \"newCollection\" }]);"}
{"prompt":"Explain database query caching.","completion":"Query caching stores query results to avoid redundant execution."}
{"prompt":"Write a Redis query to get sorted set range by score.","completion":"ZRANGEBYSCORE mysortedset 1 10"}
{"prompt":"What is a database default constraint?","completion":"A default constraint sets a default value for a column when none is provided."}
{"prompt":"Write a SQL query to find records with specific year.","completion":"SELECT * FROM table WHERE EXTRACT(YEAR FROM date) = 2023;"}
{"prompt":"How to use $merge in MongoDB?","completion":"db.collection.aggregate([{ $merge: { into: \"newCollection\", whenMatched: \"merge\", whenNotMatched: \"insert\" } }]);"}
{"prompt":"Explain database connection timeouts.","completion":"Connection timeouts limit the time a client waits to connect to a database."}
{"prompt":"Write a Neo4j query to find nodes with specific property type.","completion":"MATCH (n) WHERE n.property IS NOT NULL RETURN n;"}
{"prompt":"How to use CEIL in SQL?","completion":"SELECT CEIL(column) FROM table;"}
{"prompt":"Write a SQL query with INTERVAL.","completion":"SELECT date + INTERVAL '1 day' FROM table;"}
{"prompt":"How to use $lookup with pipeline in MongoDB?","completion":"db.collection.aggregate([{ $lookup: { from: \"other\", let: { id: \"$id\" }, pipeline: [{ $match: { $expr: { $eq: [\"$id\", \"$$id\"] } } }], as: \"results\" } }]);"}
{"prompt":"Explain database index selectivity.","completion":"Index selectivity measures how unique index values are, impacting query efficiency."}
{"prompt":"Write a Redis query to get sorted set by rank.","completion":"ZREVRANGE mysortedset 0 4"}
{"prompt":"What is a database check constraint?","completion":"A check constraint enforces a condition on column values, e.g., age > 0."}
{"prompt":"Write a SQL query to find records with specific day.","completion":"SELECT * FROM table WHERE EXTRACT(DAY FROM date) = 15;"}
{"prompt":"How to use $facet in MongoDB?","completion":"db.collection.aggregate([{ $facet: { cat1: [{ $match: { field: \"value1\" } }], cat2: [{ $match: { field: \"value2\" } }] } }]);"}
{"prompt":"Explain database write amplification.","completion":"Write amplification is the extra data written due to database operations like compaction."}
{"prompt":"Write a Neo4j query to find nodes with specific label and property.","completion":"MATCH (n:Label { property: 'value' }) RETURN n;"}
{"prompt":"What's string theory?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with CURRENT_DATE.","completion":"SELECT * FROM table WHERE date = CURRENT_DATE;"}
{"prompt":"How to use $geoNear in MongoDB?","completion":"db.collection.aggregate([{ $geoNear: { near: { type: \"Point\", coordinates: [lng, lat] }, distanceField: \"dist\" } }]);"}
{"prompt":"Explain database index fragmentation.","completion":"Index fragmentation occurs when index pages are disordered, slowing queries."}
{"prompt":"Write a Redis query to get set cardinality.","completion":"SCARD myset"}
{"prompt":"What is a database trigger condition?","completion":"A trigger condition specifies when a trigger fires, like AFTER INSERT."}
{"prompt":"Write a SQL query to find records with specific hour.","completion":"SELECT * FROM table WHERE EXTRACT(HOUR FROM timestamp) = 14;"}
{"prompt":"How to use $cond in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $cond: { if: { $eq: [\"$field\", \"value\"] }, then: 1, else: 0 } } } }]);"}
{"prompt":"Explain database read scalability.","completion":"Read scalability distributes read operations across replicas for performance."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship pattern.","completion":"MATCH (n)-[:RELATION1]->()<-[:RELATION2]-(m) RETURN n, m;"}
{"prompt":"How to use DATEDIFF in SQL?","completion":"SELECT DATEDIFF(day, start_date, end_date) FROM table;"}
{"prompt":"Write a SQL query with NOW function.","completion":"SELECT * FROM table WHERE date <= NOW();"}
{"prompt":"How to use $arrayElemAt in MongoDB?","completion":"db.collection.aggregate([{ $project: { item: { $arrayElemAt: [\"$arrayField\", 0] } } }]);"}
{"prompt":"Explain database query execution plans.","completion":"Execution plans show how a database processes a query, including steps like scans or joins."}
{"prompt":"Write a Redis query to get sorted set with scores.","completion":"ZRANGE mysortedset 0 -1 WITHSCORES"}
{"prompt":"What is a database unique constraint?","completion":"A unique constraint ensures column values are unique across rows."}
{"prompt":"Write a SQL query to find records with specific week.","completion":"SELECT * FROM table WHERE EXTRACT(WEEK FROM date) = 25;"}
{"prompt":"Explain database index maintenance.","completion":"Index maintenance updates indexes during data changes, impacting performance."}
{"prompt":"Write a Neo4j query to find nodes with specific property range.","completion":"MATCH (n) WHERE n.property BETWEEN 10 AND 20 RETURN n;"}
{"prompt":"How to use UPPER in SQL?","completion":"SELECT UPPER(column) FROM table;"}
{"prompt":"Write a SQL query with CURRENT_TIMESTAMP.","completion":"SELECT * FROM table WHERE timestamp <= CURRENT_TIMESTAMP;"}
{"prompt":"How to use $avg in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: \"$field\", avgValue: { $avg: \"$value\" } } }]);"}
{"prompt":"Explain database connection limits.","completion":"Connection limits restrict the number of concurrent client connections to a database."}
{"prompt":"Write a Redis query to get sorted set top members.","completion":"ZREVRANGE mysortedset 0 4 WITHSCORES"}
{"prompt":"What is a database primary key constraint?","completion":"A primary key constraint ensures a column has unique, non-null values."}
{"prompt":"Write a SQL query to find records with specific quarter.","completion":"SELECT * FROM table WHERE EXTRACT(QUARTER FROM date) = 2;"}
{"prompt":"How to use $max in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: \"$field\", maxValue: { $max: \"$value\" } } }]);"}
{"prompt":"Explain database index types.","completion":"Index types include B-tree, hash, bitmap, and full-text, each suited for specific queries."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship direction.","completion":"MATCH (n)-[:RELATION]->(m) RETURN n, m;"}
{"prompt":"How to use LOWER in SQL?","completion":"SELECT LOWER(column) FROM table;"}
{"prompt":"Write a SQL query with DATE_FORMAT.","completion":"SELECT DATE_FORMAT(date, '%Y-%m-%d') FROM table;"}
{"prompt":"How to use $min in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: \"$field\", minValue: { $min: \"$value\" } } }]);"}
{"prompt":"Explain database transaction rollback.","completion":"Rollback undoes a transaction’s changes if it fails, maintaining consistency."}
{"prompt":"Write a Redis query to get set random members.","completion":"SRANDMEMBER myset 2"}
{"prompt":"What is a database foreign key cascade?","completion":"A cascade automatically updates or deletes related records when a foreign key changes."}
{"prompt":"Write a SQL query to find records with specific time.","completion":"SELECT * FROM table WHERE EXTRACT(HOUR FROM timestamp) = 14 AND EXTRACT(MINUTE FROM timestamp) = 30;"}
{"prompt":"How to use $sum in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: \"$field\", total: { $sum: \"$value\" } } }]);"}
{"prompt":"Explain database index rebuild.","completion":"Index rebuild reorganizes an index to improve performance after heavy updates."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship length.","completion":"MATCH p=(n)-[:RELATION*2..4]->(m) RETURN p;"}
{"prompt":"Write a SQL query with STR_TO_DATE.","completion":"SELECT STR_TO_DATE(column, '%m/%d/%Y') FROM table;"}
{"prompt":"How to use $first in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: \"$field\", firstValue: { $first: \"$value\" } } }]);"}
{"prompt":"Explain database connection retry strategies.","completion":"Retry strategies attempt to reconnect after transient database failures."}
{"prompt":"Write a Redis query to get set members count.","completion":"SCARD myset"}
{"prompt":"What is a database index hint?","completion":"An index hint forces the database to use a specific index for a query."}
{"prompt":"Write a SQL query to find records with specific date part.","completion":"SELECT * FROM table WHERE DATE_TRUNC('day', date) = '2023-01-01';"}
{"prompt":"How to use $last in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: \"$field\", lastValue: { $last: \"$value\" } } }]);"}
{"prompt":"Explain database transaction deadlock detection.","completion":"Deadlock detection identifies and resolves conflicts when transactions wait indefinitely."}
{"prompt":"Write a Neo4j query to find nodes with specific property existence.","completion":"MATCH (n) WHERE EXISTS(n.property) RETURN n;"}
{"prompt":"How to use CAST in SQL?","completion":"SELECT CAST(column AS INTEGER) FROM table;"}
{"prompt":"Write a SQL query with GETDATE.","completion":"SELECT GETDATE() AS current_date;"}
{"prompt":"How to use $addFields in MongoDB?","completion":"db.collection.aggregate([{ $addFields: { newField: \"$existingField\" } }]);"}
{"prompt":"Explain database index usage statistics.","completion":"Index usage statistics track how often indexes are used for query optimization."}
{"prompt":"Write a Redis query to get sorted set range by lexicographical order.","completion":"ZRANGEBYLEX mysortedset [a [z"}
{"prompt":"What is a database role-based access control?","completion":"Role-based access control assigns permissions to roles, which users inherit."}
{"prompt":"Write a SQL query to find records with specific timestamp range.","completion":"SELECT * FROM table WHERE timestamp BETWEEN '2023-01-01 00:00:00' AND '2023-12-31 23:59:59';"}
{"prompt":"How to use $bucket in MongoDB?","completion":"db.collection.aggregate([{ $bucket: { groupBy: \"$value\", boundaries: [0, 50, 100], default: \"Other\" } }]);"}
{"prompt":"Explain database query optimization techniques.","completion":"Techniques include indexing, query rewriting, and analyzing execution plans."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property.","completion":"MATCH (n)-[r:RELATION { property: 'value' }]->(m) RETURN n, m;"}
{"prompt":"How to use COALESCE in SQL?","completion":"SELECT COALESCE(column1, column2, 'default') FROM table;"}
{"prompt":"What's the best diet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with DATEPART.","completion":"SELECT DATEPART(year, date) FROM table;"}
{"prompt":"How to use $graphLookup in MongoDB?","completion":"db.collection.aggregate([{ $graphLookup: { from: \"collection\", startWith: \"$field\", connectFromField: \"field\", connectToField: \"field\", as: \"result\" } }]);"}
{"prompt":"Explain database index cardinality.","completion":"Index cardinality measures the number of unique values in an index."}
{"prompt":"Write a Redis query to get sorted set range with scores.","completion":"ZRANGE mysortedset 0 4 WITHSCORES"}
{"prompt":"Write a SQL query to find records with specific string length.","completion":"SELECT * FROM table WHERE LENGTH(column) = 5;"}
{"prompt":"How to use $sortByCount in MongoDB?","completion":"db.collection.aggregate([{ $sortByCount: \"$field\" }]);"}
{"prompt":"Explain database connection encryption.","completion":"Connection encryption secures data in transit using protocols like TLS."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship property range.","completion":"MATCH (n)-[r:RELATION]->(m) WHERE r.property BETWEEN 1 AND 10 RETURN n, m;"}
{"prompt":"How to use CHAR_LENGTH in SQL?","completion":"SELECT CHAR_LENGTH(column) FROM table;"}
{"prompt":"Write a SQL query with DATE_SUB.","completion":"SELECT DATE_SUB(date, INTERVAL 1 MONTH) FROM table;"}
{"prompt":"How to use $geoWithin in MongoDB?","completion":"db.collection.find({ location: { $geoWithin: { $geometry: { type: \"Polygon\", coordinates: [...] } } } });"}
{"prompt":"Explain database index bloat.","completion":"Index bloat occurs when indexes grow inefficiently due to updates or deletions."}
{"prompt":"Write a Redis query to get hash field value.","completion":"HGET myhash field"}
{"prompt":"What is a database stored function?","completion":"A stored function is a reusable SQL routine that returns a value."}
{"prompt":"Write a SQL query to find records with specific pattern.","completion":"SELECT * FROM table WHERE column LIKE 'prefix%';"}
{"prompt":"How to use $collStats in MongoDB?","completion":"db.collection.aggregate([{ $collStats: { latencyStats: { histograms: true } } }]);"}
{"prompt":"Explain database query rewriting.","completion":"Query rewriting transforms queries for better performance or compatibility."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship absence.","completion":"MATCH (n) WHERE NOT (n)-[:RELATION]->() RETURN n;"}
{"prompt":"How to use LOCATE in SQL?","completion":"SELECT LOCATE('substring', column) FROM table;"}
{"prompt":"Write a SQL query with DATE_TRUNC.","completion":"SELECT DATE_TRUNC('month', date) FROM table;"}
{"prompt":"How to use $geoIntersects in MongoDB?","completion":"db.collection.find({ location: { $geoIntersects: { $geometry: { type: \"Point\", coordinates: [lng, lat] } } } });"}
{"prompt":"Explain database index rebuild strategies.","completion":"Rebuild strategies include periodic rebuilds or conditional rebuilds based on fragmentation."}
{"prompt":"Write a Redis query to get sorted set reverse range.","completion":"ZREVRANGEBYSCORE mysortedset 10 1"}
{"prompt":"What is a database view dependency?","completion":"A view dependency is a table or object a view relies on for its data."}
{"prompt":"Write a SQL query to find records with specific substring.","completion":"SELECT * FROM table WHERE column LIKE '%substring%';"}
{"prompt":"How to use $currentDate in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId(\"123\") }, { $currentDate: { lastModified: true } });"}
{"prompt":"Explain database transaction retry logic.","completion":"Transaction retry logic reattempts failed transactions due to transient errors."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property existence.","completion":"MATCH (n)-[r:RELATION]->(m) WHERE EXISTS(r.property) RETURN n, m;"}
{"prompt":"How to use POSITION in SQL?","completion":"SELECT POSITION('substring' IN column) FROM table;"}
{"prompt":"How to solve world hunger?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with EXTRACT.","completion":"SELECT EXTRACT(YEAR FROM date) FROM table;"}
{"prompt":"How to use $setUnion in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $setUnion: [\"$array1\", \"$array2\"] } } }]);"}
{"prompt":"Explain database index clustering factor.","completion":"Clustering factor measures how ordered index entries are relative to table data."}
{"prompt":"Write a Redis query to get sorted set count by score range.","completion":"ZCOUNT mysortedset 0 100"}
{"prompt":"What is a database table partition?","completion":"A table partition splits a table into smaller, manageable pieces."}
{"prompt":"Write a SQL query to find records with specific case-insensitive match.","completion":"SELECT * FROM table WHERE UPPER(column) = UPPER('value');"}
{"prompt":"How to use $setIntersection in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $setIntersection: [\"$array1\", \"$array2\"] } } }]);"}
{"prompt":"Explain database transaction isolation.","completion":"Transaction isolation controls how transactions see each other’s changes."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property range.","completion":"MATCH (n)-[r:RELATION { property: 5 }]->(m) RETURN n, m;"}
{"prompt":"How to use LEFT in SQL?","completion":"SELECT LEFT(column, 5) FROM table;"}
{"prompt":"What's the best book to read?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with TIMESTAMPDIFF.","completion":"SELECT TIMESTAMPDIFF(DAY, start_date, end_date) FROM table;"}
{"prompt":"How to use $setDifference in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $setDifference: [\"$array1\", \"$array2\"] } } }]);"}
{"prompt":"Explain database index scan types.","completion":"Index scan types include full, range, and skip scans, based on query needs."}
{"prompt":"Write a Redis query to get set members.","completion":"SMEMBERS myset"}
{"prompt":"What is a database sequence generator?","completion":"A sequence generator creates unique sequential numbers for keys."}
{"prompt":"Write a SQL query to find records with specific prefix.","completion":"SELECT * FROM table WHERE column LIKE 'prefix%';"}
{"prompt":"How to use $indexStats in MongoDB?","completion":"db.collection.aggregate([{ $indexStats: {} }]);"}
{"prompt":"Explain database query cost estimation.","completion":"Query cost estimation predicts resource usage for query execution plans."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship pattern length.","completion":"MATCH p=(n)-[:RELATION*2]->(m) RETURN p;"}
{"prompt":"How to use RIGHT in SQL?","completion":"SELECT RIGHT(column, 5) FROM table;"}
{"prompt":"Write a SQL query with ADDDATE.","completion":"SELECT ADDDATE(date, INTERVAL 1 MONTH) FROM table;"}
{"prompt":"How to use $concat in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $concat: [\"$field1\", \"$field2\"] } } }]);"}
{"prompt":"Explain database index selectivity ratio.","completion":"Selectivity ratio is the proportion of unique values in an index to total rows."}
{"prompt":"Write a Redis query to get sorted set by score.","completion":"ZRANGEBYSCORE mysortedset -inf +inf"}
{"prompt":"What is a database trigger event?","completion":"A trigger event is an action (e.g., INSERT) that activates a trigger."}
{"prompt":"Write a SQL query to find records with specific suffix.","completion":"SELECT * FROM table WHERE column LIKE '%suffix';"}
{"prompt":"How to use $substr in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $substr: [\"$field\", 0, 5] } } }]);"}
{"prompt":"Explain database transaction atomicity.","completion":"Atomicity ensures a transaction completes fully or not at all."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property type.","completion":"MATCH (n)-[r:RELATION]->(m) WHERE r.property IS NOT NULL RETURN n, m;"}
{"prompt":"How to use LENGTH in SQL?","completion":"SELECT LENGTH(column) FROM table;"}
{"prompt":"What's the best game to play?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with TO_DATE.","completion":"SELECT TO_DATE(column, 'YYYY-MM-DD') FROM table;"}
{"prompt":"Explain database index cost.","completion":"Index cost includes storage, maintenance, and query optimization benefits."}
{"prompt":"Write a Redis query to get sorted set top scores.","completion":"ZREVRANGEBYSCORE mysortedset +inf -inf LIMIT 0 5"}
{"prompt":"What is a database referential integrity?","completion":"Referential integrity ensures foreign keys match valid primary keys."}
{"prompt":"Write a SQL query to find records with specific regex pattern.","completion":"SELECT * FROM table WHERE column REGEXP 'pattern';"}
{"prompt":"How to use $toLower in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toLower: \"$field\" } } }]);"}
{"prompt":"Explain database transaction durability.","completion":"Durability ensures committed transactions are permanently saved."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property absence.","completion":"MATCH (n)-[r:RELATION]->(m) WHERE NOT EXISTS(r.property) RETURN n, m;"}
{"prompt":"How to use INSTR in SQL?","completion":"SELECT INSTR(column, 'substring') FROM table;"}
{"prompt":"Write a SQL query with DATEADD for hours.","completion":"SELECT DATEADD(hour, 3, date) FROM table;"}
{"prompt":"How to use $toInt in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toInt: \"$field\" } } }]);"}
{"prompt":"Explain database index fragmentation impact.","completion":"Fragmentation slows queries by increasing disk I/O and reducing efficiency."}
{"prompt":"Write a Redis query to get sorted set bottom scores.","completion":"ZRANGEBYSCORE mysortedset -inf +inf LIMIT 0 5"}
{"prompt":"What is a database default value?","completion":"A default value is assigned to a column when no value is provided."}
{"prompt":"Write a SQL query to find records with specific case-sensitive match.","completion":"SELECT * जहां column = 'value' COLLATE SQL_Latin1_General_CP1_CS_AS;"}
{"prompt":"How to use $toDouble in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toDouble: \"$field\" } } }]);"}
{"prompt":"Explain database query plan caching.","completion":"Query plan caching stores execution plans for reuse, improving performance."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property match.","completion":"MATCH (n)-[r:RELATION { property: 'value' }]->(m) RETURN n, m;"}
{"prompt":"How to use REGEXP_REPLACE in SQL?","completion":"SELECT REGEXP_REPLACE(column, 'pattern', 'replacement') FROM table;"}
{"prompt":"Write a SQL query with DATE_SUB for hours.","completion":"SELECT DATE_SUB(date, INTERVAL 3 HOUR) FROM table;"}
{"prompt":"How to use $toString in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toString: \"$field\" } } }]);"}
{"prompt":"Explain database index rebuild frequency.","completion":"Rebuild frequency depends on update frequency and fragmentation levels."}
{"prompt":"Write a Redis query to get sorted set by lexicographical range.","completion":"ZRANGEBYLEX mysortedset [a [z LIMIT 0 5"}
{"prompt":"What is a database check constraint condition?","completion":"A check constraint condition enforces specific rules on column values."}
{"prompt":"Write a SQL query to find records with specific word boundary.","completion":"SELECT * FROM table WHERE column REGEXP '[[:<:]]word[[:>:]]';"}
{"prompt":"How to use $toDate in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toDate: \"$field\" } } }]);"}
{"prompt":"Explain database transaction consistency.","completion":"Consistency ensures transactions leave the database in a valid state."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property regex.","completion":"MATCH (n)-[r:RELATION]->(m) WHERE r.property =~ 'pattern' RETURN n, m;"}
{"prompt":"How to use CONCAT_WS in SQL?","completion":"SELECT CONCAT_WS(' ', column1, column2) FROM table;"}
{"prompt":"Write a SQL query with DATE_FORMAT for time.","completion":"SELECT DATE_FORMAT(timestamp, '%H:%i:%s') FROM table;"}
{"prompt":"How to use $convert in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $convert: { input: \"$field\", to: \"int\" } } } }]);"}
{"prompt":"Explain database index update cost.","completion":"Index update cost involves CPU and disk I/O for maintaining index entries."}
{"prompt":"Write a Redis query to get sorted set reverse range by score.","completion":"ZREVRANGEBYSCORE mysortedset 100 0"}
{"prompt":"What is a database sequence cache?","completion":"A sequence cache preallocates sequence values for faster access."}
{"prompt":"Write a SQL query to find records with specific character range.","completion":"SELECT * FROM table WHERE LENGTH(column) BETWEEN 3 AND 10;"}
{"prompt":"How to use $abs in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $abs: \"$field\" } } }]);"}
{"prompt":"Explain database query execution order.","completion":"Query execution order follows FROM, WHERE, GROUP BY, HAVING, SELECT, ORDER BY."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property null.","completion":"MATCH (n)-[r:RELATION]->(m) WHERE r.property IS NULL RETURN n, m;"}
{"prompt":"How to use LPAD in SQL?","completion":"SELECT LPAD(column, 10, '0') FROM table;"}
{"prompt":"Write a SQL query with UNIX_TIMESTAMP.","completion":"SELECT UNIX_TIMESTAMP(date) FROM table;"}
{"prompt":"How to use $ceil in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $ceph: \"$field\" } } }]);"}
{"prompt":"Explain database index size estimation.","completion":"Index size estimation calculates storage needs based on data volume and type."}
{"prompt":"Write a Redis query to get sorted set by score with limit.","completion":"ZRANGEBYSCORE mysortedset 0 100 LIMIT 0 5"}
{"prompt":"What is a database trigger timing?","completion":"Trigger timing specifies when a trigger fires, e.g., BEFORE or AFTER an event."}
{"prompt":"Write a SQL query to find records with specific word count.","completion":"SELECT * FROM table WHERE LENGTH(column) - LENGTH(REPLACE(column, ' ', '')) + 1 = 3;"}
{"prompt":"How to use $floor in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $floor: \"$field\" } } }]);"}
{"prompt":"Explain database transaction log size.","completion":"Transaction log size depends on transaction volume and retention policies."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property match regex.","completion":"MATCH (n)-[r:RELATION]->(m) WHERE r.property =~ '^prefix.*' RETURN n, m;"}
{"prompt":"How to use RPAD in SQL?","completion":"SELECT RPAD(column, 10, '0') FROM table;"}
{"prompt":"Write a SQL query with FROM_DAYS.","completion":"SELECT FROM_DAYS(738000) AS date;"}
{"prompt":"How to use $mod in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $mod: [\"$field\", 2] } } }]);"}
{"prompt":"Explain database index selectivity estimation.","completion":"Selectivity estimation predicts how many rows an index filters for a query."}
{"prompt":"Write a Redis query to get sorted set by lexicographical prefix.","completion":"ZRANGEBYLEX mysortedset [prefix [prefix\\xff"}
{"prompt":"What is a database view refresh?","completion":"A view refresh updates a materialized view’s data to reflect changes."}
{"prompt":"Write a SQL query to find records with specific case-insensitive prefix.","completion":"SELECT * FROM table WHERE UPPER(column) LIKE UPPER('prefix%');"}
{"prompt":"How to use $multiply in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $multiply: [\"$field1\", \"$field2\"] } } }]);"}
{"prompt":"Explain database transaction log truncation.","completion":"Log truncation removes old transaction log entries to free space."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property range match.","completion":"MATCH (n)-[r:RELATION]->(m) WHERE r.property >= 5 AND r.property <= 10 RETURN n, m;"}
{"prompt":"How to use REPEAT in SQL?","completion":"SELECT REPEAT(column, 3) FROM table;"}
{"prompt":"Write a SQL query with TO_CHAR for date.","completion":"SELECT TO_CHAR(date, 'YYYY-MM-DD') FROM table;"}
{"prompt":"How to use $sqrt in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $sqrt: \"$field\" } } }]);"}
{"prompt":"Explain database indexing.","completion":"Indexing improves query performance by allowing faster data retrieval."}
{"prompt":"Write a Redis query to get sorted set reverse range with scores.","completion":"ZREVRANGE mysortedset 0 -1 WITHSCORES"}
{"prompt":"What is a database composite key?","completion":"A composite key is a primary key made up of multiple columns."}
{"prompt":"Write a SQL query to find records with specific character position.","completion":"SELECT * FROM table WHERE SUBSTRING(column, 1, 1) = 'A';"}
{"prompt":"How to use $ln in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $ln: \"$field\" } } }]);"}
{"prompt":"Explain database index types and use cases.","completion":"Common index types include B-tree for range queries, hash for equality, and full-text for text search."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship and property greater than.","completion":"MATCH (n)-[r:RELATION]->(m) WHERE r.property > 10 RETURN n, m;"}
{"prompt":"Write a SQL query with TIMEDIFF.","completion":"SELECT TIMEDIFF(end_time, start_time) FROM table;"}
{"prompt":"How to use $exp in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $exp: \"$field\" } } }]);"}
{"prompt":"Explain database index performance metrics.","completion":"Performance metrics include index hit rate, read/write latency, and fragmentation level."}
{"prompt":"Write a Redis query to get sorted set by score descending.","completion":"ZREVRANGEBYSCORE mysortedset +inf -inf"}
{"prompt":"What is a database normalization form?","completion":"Normalization forms (1NF, 2NF, 3NF) define rules for structuring relational databases."}
{"prompt":"Write a SQL query to find records with specific character occurrence.","completion":"SELECT * FROM table WHERE LENGTH(column) - LENGTH(REPLACE(column, 'a', '')) = 3;"}
{"prompt":"How to use $ln2 in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $ln2: \"$field\" } } }]);"}
{"prompt":"Explain the difference between SQL and NoSQL databases.","completion":"SQL databases are relational with structured schemas, while NoSQL databases are non-relational, offering flexible schemas for varied data types."}
{"prompt":"How to insert a document in MongoDB?","completion":"db.collection.insertOne({ name: 'John', age: 25 });"}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key is a column that creates a relationship between two tables by referencing the primary key of another table."}
{"prompt":"How to set a key-value pair in Redis?","completion":"SET user:1000 'John Doe'"}
{"prompt":"Write a SQL query to count rows grouped by department.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ name: 'John' }, { $set: { age: 26 } });"}
{"prompt":"What is normalization in SQL?","completion":"Normalization organizes data in a database to reduce redundancy and improve integrity through structured forms like 1NF, 2NF, 3NF."}
{"prompt":"What is sharding in NoSQL databases?","completion":"Sharding distributes data across multiple servers to improve scalability and performance in NoSQL databases."}
{"prompt":"Write a SQL query to delete records where age < 18.","completion":"DELETE FROM table_name WHERE age < 18;"}
{"prompt":"How to expire a key in Redis after 60 seconds?","completion":"SET mykey 'value' EX 60"}
{"prompt":"Write a SQL query using a LEFT JOIN.","completion":"SELECT * FROM customers LEFT JOIN orders ON customers.id = orders.customer_id;"}
{"prompt":"How to find distinct values in MongoDB?","completion":"db.collection.distinct('field_name');"}
{"prompt":"What is a primary key in SQL?","completion":"A primary key uniquely identifies each record in a table and cannot contain NULL values."}
{"prompt":"How to create a node in Neo4j?","completion":"CREATE (n:Person {name: 'Bob', age: 30});"}
{"prompt":"How to sort documents in MongoDB by age descending?","completion":"db.collection.find().sort({ age: -1 });"}
{"prompt":"What is eventual consistency in NoSQL?","completion":"Eventual consistency means that all replicas in a distributed system will converge to the same state over time."}
{"prompt":"How to retrieve a value in Redis?","completion":"GET mykey"}
{"prompt":"Write a SQL query using HAVING clause.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"How to create a table in SQL?","completion":"CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50), age INT);"}
{"prompt":"What is a graph database?","completion":"A graph database, like Neo4j, stores data as nodes and relationships for efficient querying of connected data."}
{"prompt":"Write a MongoDB query to project specific fields.","completion":"db.collection.find({}, { name: 1, age: 1, _id: 0 });"}
{"prompt":"How to use LIKE in SQL?","completion":"SELECT * FROM table_name WHERE name LIKE '%John%';"}
{"prompt":"What is replication in databases?","completion":"Replication copies data across servers for redundancy, availability, and load balancing."}
{"prompt":"Write a SQL query to update records.","completion":"UPDATE employees SET salary = salary + 5000 WHERE department = 'Sales';"}
{"prompt":"Explain triggers in SQL.","completion":"Triggers are stored procedures that automatically execute in response to events like INSERT or UPDATE."}
{"prompt":"How to push an element to a list in Redis?","completion":"LPUSH mylist 'item'"}
{"prompt":"What is CAP theorem in NoSQL?","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance."}
{"prompt":"Write a SQL query with a CTE.","completion":"WITH dept_avg AS (SELECT department, AVG(salary) AS avg_salary FROM employees GROUP BY department) SELECT * FROM dept_avg;"}
{"prompt":"How to rename a collection in MongoDB?","completion":"db.collection.renameCollection('newCollectionName');"}
{"prompt":"What is a view in SQL?","completion":"A view is a virtual table created by a query, used for simplifying queries or securing data."}
{"prompt":"Write a Neo4j query to find shortest path.","completion":"MATCH (start:Person {name: 'Alice'}), (end:Person {name: 'Bob'}), path = shortestPath((start)-[*]-(end)) RETURN path;"}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.orders.aggregate([{ $lookup: { from: 'customers', localField: 'customer_id', foreignField: '_id', as: 'customer_info' } }]);"}
{"prompt":"Explain partitioning in SQL.","completion":"Partitioning divides large tables into smaller, manageable pieces to improve query performance."}
{"prompt":"What is your favorite color?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query for full-text search in PostgreSQL.","completion":"SELECT * FROM table_name WHERE to_tsvector(column) @@ to_tsquery('search_term');"}
{"prompt":"How to handle transactions in SQL?","completion":"BEGIN TRANSACTION; /* SQL statements */ COMMIT;"}
{"prompt":"What is a column-family store in NoSQL?","completion":"A column-family store, like Cassandra, organizes data into columns grouped into families for scalability."}
{"prompt":"How to batch insert in SQL?","completion":"INSERT INTO table_name (column1, column2) VALUES (val1, val2), (val3, val4);"}
{"prompt":"Write a MongoDB query to unwind an array.","completion":"db.collection.aggregate([{ $unwind: '$arrayField' }]);"}
{"prompt":"Explain indexing in databases.","completion":"Indexing creates data structures to speed up query execution by allowing faster data retrieval."}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT department, salary FROM employees) PIVOT (SUM(salary) FOR department IN ('Sales', 'HR'));"}
{"prompt":"How to expire a key in Redis after 1 hour?","completion":"SET mykey 'value' EX 3600"}
{"prompt":"What is multi-tenancy in databases?","completion":"Multi-tenancy allows multiple users to share a database while isolating their data."}
{"prompt":"Write a SQL query to find duplicate records.","completion":"SELECT name, COUNT(*) FROM table_name GROUP BY name HAVING COUNT(*) > 1;"}
{"prompt":"How to increment a field in MongoDB?","completion":"db.collection.updateOne({ name: 'John' }, { $inc: { age: 1 } });"}
{"prompt":"Write MongoDB query to find by regex.","completion":"db.collection.find({ name: { $regex: '^A', $options: 'i' } });"}
{"prompt":"Write a SQL query to select top 5 records.","completion":"SELECT * FROM table_name ORDER BY column_name DESC LIMIT 5;"}
{"prompt":"How to create a MongoDB index?","completion":"db.collection.createIndex({ field: 1 });"}
{"prompt":"Write a SQL query with window function.","completion":"SELECT name, salary, RANK() OVER (PARTITION BY department ORDER BY salary DESC) FROM employees;"}
{"prompt":"How to perform a full join in SQL?","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Write a MongoDB query to group by category.","completion":"db.collection.aggregate([{ $group: { _id: '$category', count: { $sum: 1 } } }]);"}
{"prompt":"Explain clustering in NoSQL databases.","completion":"Clustering groups data on servers based on key ranges to improve query efficiency."}
{"prompt":"Write a SQL query to alter a table.","completion":"ALTER TABLE table_name ADD new_column VARCHAR(50);"}
{"prompt":"How to skip records in MongoDB?","completion":"db.collection.find().skip(10);"}
{"prompt":"What is a transaction log in SQL?","completion":"A transaction log records all database operations to ensure recovery and consistency."}
{"prompt":"Write a Neo4j query to find nodes by property.","completion":"MATCH (n:Person) WHERE n.age > 25 RETURN n;"}
{"prompt":"How to use CASE in SQL?","completion":"SELECT name, CASE WHEN age > 30 THEN 'Senior' ELSE 'Junior' END AS status FROM employees;"}
{"prompt":"What is a wide-column store in NoSQL?","completion":"A wide-column store, like Cassandra, stores data in flexible columns for high scalability."}
{"prompt":"How to find documents by array element in MongoDB?","completion":"db.collection.find({ tags: 'value' });"}
{"prompt":"Explain materialized views in SQL.","completion":"Materialized views store query results physically and can be refreshed periodically."}
{"prompt":"How to set a hash field in Redis?","completion":"HSET myhash field1 'value1'"}
{"prompt":"What is the latest news on AI?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to sort and limit.","completion":"db.collection.find().sort({ age: 1 }).limit(5);"}
{"prompt":"How to create a unique constraint in SQL?","completion":"ALTER TABLE table_name ADD CONSTRAINT unique_name UNIQUE (column_name);"}
{"prompt":"How do I select distinct names from a SQL table called users?","completion":"SELECT DISTINCT name FROM users;"}
{"prompt":"Explain the purpose of indexes in SQL databases","completion":"Indexes in SQL databases improve query performance by allowing faster data retrieval, acting like a book's index to locate rows efficiently."}
{"prompt":"What is the best way to learn Python programming?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to insert a new document in MongoDB collection 'products'?","completion":"db.products.insertOne({ name: 'Product1', price: 100 });"}
{"prompt":"Create a SQL query to count rows in a table named sales","completion":"SELECT COUNT(*) FROM sales;"}
{"prompt":"Explain the difference between SQL and NoSQL databases","completion":"SQL databases are relational with fixed schemas, using tables and SQL queries, while NoSQL databases are non-relational, schema-less, and support diverse data types like documents or graphs."}
{"prompt":"How to set a key-value pair in Redis?","completion":"SET user:100 name 'Alice'"}
{"prompt":"Explain ACID properties in databases","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions by guaranteeing atomic updates, consistent states, isolated operations, and persistent changes."}
{"prompt":"Write a Neo4j query to find all nodes with a specific property","completion":"MATCH (n:Person {name: 'Bob'}) RETURN n;"}
{"prompt":"How to delete a record from a SQL table?","completion":"DELETE FROM table_name WHERE condition;"}
{"prompt":"How to update a field in a SQL table?","completion":"UPDATE table_name SET column_name = value WHERE condition;"}
{"prompt":"Write a MongoDB query to sort documents by price descending","completion":"db.collection.find().sort({ price: -1 });"}
{"prompt":"Explain normalization in SQL databases","completion":"Normalization organizes data into tables to reduce redundancy and ensure data integrity, following forms like 1NF, 2NF, 3NF."}
{"prompt":"Write a SQL query using a LEFT JOIN","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to count documents in a MongoDB collection?","completion":"db.collection.countDocuments({});"}
{"prompt":"Write a SQL query with a GROUP BY clause","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"Explain eventual consistency in NoSQL","completion":"Eventual consistency means that in distributed NoSQL systems, data replicas may temporarily differ but will eventually align."}
{"prompt":"How to find unique values in a SQL column?","completion":"SELECT DISTINCT column_name FROM table_name;"}
{"prompt":"How to perform aggregation in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"Write a SQL query to find employees hired after 2020","completion":"SELECT * FROM employees WHERE hire_date > '2020-01-01';"}
{"prompt":"How to delete a document in MongoDB?","completion":"db.collection.deleteOne({ field: 'value' });"}
{"prompt":"Explain foreign keys in SQL","completion":"Foreign keys link tables by referencing a primary key in another table, ensuring referential integrity."}
{"prompt":"How to retrieve a value from a Redis hash?","completion":"HGET myhash field"}
{"prompt":"What is CAP theorem in NoSQL?","completion":"CAP theorem states distributed systems can only guarantee two of Consistency, Availability, and Partition tolerance."}
{"prompt":"How to limit results in a SQL query?","completion":"SELECT * FROM table_name LIMIT 10;"}
{"prompt":"Write a MongoDB query to update multiple documents","completion":"db.collection.updateMany({ status: 'old' }, { $set: { status: 'new' } });"}
{"prompt":"Explain triggers in SQL databases","completion":"Triggers are special procedures that automatically execute in response to specific events, like INSERT or UPDATE."}
{"prompt":"Write a Redis query to increment a value","completion":"INCR mycounter"}
{"prompt":"Write a SQL query using HAVING clause","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"Explain graph databases","completion":"Graph databases, like Neo4j, store data as nodes and relationships, optimized for querying connected data."}
{"prompt":"Write a SQL query to find duplicate records","completion":"SELECT column, COUNT(*) FROM table_name GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"How to perform a full-text search in MongoDB?","completion":"db.collection.createIndex({ field: 'text' }); db.collection.find({ $text: { $search: 'keyword' } });"}
{"prompt":"Explain partitioning in SQL databases","completion":"Partitioning divides large tables into smaller, manageable pieces to improve performance and scalability."}
{"prompt":"Write a SQL query for UNION operation","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"How to handle transactions in MongoDB?","completion":"db.getMongo().startSession().withTransaction(() => { /* operations */ });"}
{"prompt":"Explain stored procedures in SQL","completion":"Stored procedures are precompiled SQL scripts stored in the database for reuse and improved security."}
{"prompt":"How to query a range in Redis?","completion":"ZRANGE myrange 0 -1"}
{"prompt":"Explain materialized views in SQL","completion":"Materialized views store query results physically, updating periodically for faster access than regular views."}
{"prompt":"Write a SQL query with a RIGHT JOIN","completion":"SELECT * FROM table1 RIGHT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What is a column-family store in NoSQL?","completion":"A column-family store, like Cassandra, organizes data into columns grouped into families for efficient storage."}
{"prompt":"Write a MongoDB query to find documents by regex","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"Explain replication in databases","completion":"Replication copies data across servers to ensure redundancy, availability, and load balancing."}
{"prompt":"Write a Neo4j query to delete a node","completion":"MATCH (n:Node {id: 1}) DELETE n;"}
{"prompt":"How to batch insert in SQL?","completion":"INSERT INTO table_name VALUES (val1), (val2), ...;"}
{"prompt":"What is BASE in NoSQL?","completion":"BASE (Basically Available, Soft state, Eventual consistency) prioritizes availability over strict consistency in NoSQL."}
{"prompt":"Explain clustering in databases","completion":"Clustering groups related data on disk to improve query performance, often used in column stores."}
{"prompt":"How to get a hash field in Redis?","completion":"HGETALL myhash"}
{"prompt":"Write a SQL query to find NULL values","completion":"SELECT * FROM table_name WHERE column IS NULL;"}
{"prompt":"Explain window functions in SQL","completion":"Window functions, like ROW_NUMBER(), perform calculations over a set of rows without grouping them."}
{"prompt":"Write a Neo4j query to find shortest path","completion":"MATCH p=shortestPath((a:Node)-[*]-(b:Node)) RETURN p;"}
{"prompt":"How to use LIKE operator in SQL?","completion":"SELECT * FROM table_name WHERE column LIKE '%pattern%';"}
{"prompt":"What is multi-tenancy in databases?","completion":"Multi-tenancy allows multiple users to share a database while keeping their data isolated."}
{"prompt":"Write a MongoDB query to project specific fields","completion":"db.collection.find({}, { field1: 1, field2: 0 });"}
{"prompt":"How to create a trigger in SQL?","completion":"CREATE TRIGGER trigger_name AFTER INSERT ON table_name FOR EACH ROW BEGIN /* action */ END;"}
{"prompt":"Explain caching in Redis","completion":"Redis caches data in memory for fast access, reducing load on slower disk-based databases."}
{"prompt":"Write a SQL query for FULL OUTER JOIN","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to query distinct values in MongoDB?","completion":"db.collection.distinct('field');"}
{"prompt":"Explain data modeling in NoSQL","completion":"NoSQL data modeling designs flexible schemas, often denormalized, to optimize for specific query patterns."}
{"prompt":"Write a SQL query to update multiple rows","completion":"UPDATE table_name SET column = value WHERE condition;"}
{"prompt":"How to use ZADD in Redis for sorted sets?","completion":"ZADD myset 1 'value'"}
{"prompt":"Write a MongoDB query to delete multiple documents","completion":"db.collection.deleteMany({ field: 'value' });"}
{"prompt":"Explain constraints in SQL","completion":"Constraints like PRIMARY KEY, FOREIGN KEY, and NOT NULL enforce data integrity in SQL tables."}
{"prompt":"How to perform a full-text search in PostgreSQL?","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('keyword');"}
{"prompt":"Explain transactions in SQL","completion":"Transactions ensure data integrity using BEGIN, COMMIT, and ROLLBACK to manage changes."}
{"prompt":"Write a Redis query to get list length","completion":"LLEN mylist"}
{"prompt":"How to group by multiple fields in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: { field1: '$field1', field2: '$field2' }, count: { $sum: 1 } } }]);"}
{"prompt":"What is a composite key in SQL?","completion":"A composite key is a primary key made of multiple columns to uniquely identify records."}
{"prompt":"How to rename a table in SQL?","completion":"ALTER TABLE old_name RENAME TO new_name;"}
{"prompt":"Explain eventual consistency in MongoDB","completion":"MongoDB achieves eventual consistency in replicas, where data may lag but eventually synchronizes."}
{"prompt":"Write a SQL query with ORDER BY","completion":"SELECT * FROM table_name ORDER BY column ASC;"}
{"prompt":"How to expire a document in MongoDB?","completion":"db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"Write a Neo4j query to find all relationships","completion":"MATCH ()-[r]->() RETURN r;"}
{"prompt":"How to use CASE in SQL queries?","completion":"SELECT column, CASE WHEN condition THEN value1 ELSE value2 END FROM table_name;"}
{"prompt":"Explain indexing strategies in NoSQL","completion":"NoSQL indexing, like in MongoDB, creates indexes on fields to speed up queries, balancing performance and storage."}
{"prompt":"Write a SQL نداء query to find employees by name","completion":"SELECT * FROM employees WHERE name LIKE '%name%';"}
{"prompt":"How to increment a field in MongoDB?","completion":"db.collection.updateOne({ field: 'value' }, { $inc: { counter: 1 } });"}
{"prompt":"What is a view in NoSQL?","completion":"NoSQL databases like MongoDB use views as read-only, query-based virtual collections."}
{"prompt":"How to get a range of elements in Redis sorted set?","completion":"ZRANGE myset 0 10"}
{"prompt":"Write a SQL query to join three tables","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id JOIN table3 ON table2.id = table3.id;"}
{"prompt":"Explain write-ahead logging in SQL databases","completion":"Write-ahead logging records changes to a log before applying them, ensuring durability and crash recovery."}
{"prompt":"How to query by date in MongoDB?","completion":"db.collection.find({ date: { $gte: ISODate('2023-01-01') } });"}
{"prompt":"What's a good recipe for pasta?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to drop a column","completion":"ALTER TABLE table_name DROP COLUMN column_name;"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ field: 'value' }, { $push: { arrayField: 'newValue' } });"}
{"prompt":"Explain optimistic locking in databases","completion":"Optimistic locking assumes no conflicts, checking conditions (e.g., version) before updates to avoid conflicts."}
{"prompt":"Write a Redis query to remove a hash field","completion":"HDEL myhash field"}
{"prompt":"How to create a foreign key in SQL?","completion":"ALTER TABLE table_name ADD CONSTRAINT fk_name FOREIGN KEY (column) REFERENCES parent_table(parent_column);"}
{"prompt":"What is a graph traversal in Neo4j?","completion":"Graph traversal in Neo4j queries relationships between nodes, like MATCH (a)-[:REL]->(b)."}
{"prompt":"Write a SQL query with IN clause","completion":"SELECT * FROM table_name WHERE column IN (value1, value2);"}
{"prompt":"Explain database sharding","completion":"Sharding splits a database into smaller, distributed pieces to improve scalability and performance."}
{"prompt":"How to get current time in SQL?","completion":"SELECT NOW();"}
{"prompt":"Write a MongoDB query to find by array element","completion":"db.collection.find({ arrayField: 'value' });"}
{"prompt":"What's the best way to learn Java?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain MVCC in SQL databases","completion":"Multiversion Concurrency Control (MVCC) maintains multiple versions of data to allow concurrent transactions without locks."}
{"prompt":"Write a Neo4j query to update a property","completion":"MATCH (n:Node {id: 1}) SET n.property = 'newValue';"}
{"prompt":"How to use EXISTS in SQL?","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE column = table1.column);"}
{"prompt":"How to add an element to a MongoDB array?","completion":"db.collection.updateOne({ field: 'value' }, { $push: { array: 'element' } });"}
{"prompt":"What is a clustered index in SQL?","completion":"A clustered index determines the physical order of data in a table, with only one per table."}
{"prompt":"Write a Redis query to get set members","completion":"SMEMBERS myset"}
{"prompt":"How to create a schema in SQL?","completion":"CREATE SCHEMA schema_name;"}
{"prompt":"Explain read replicas in databases","completion":"Read replicas are copies of a primary database used to offload read queries, improving performance."}
{"prompt":"Write a SQL query to find max value","completion":"SELECT MAX(column) FROM table_name;"}
{"prompt":"Write a SQL query with BETWEEN clause","completion":"SELECT * FROM table_name WHERE column BETWEEN 10 AND 20;"}
{"prompt":"How to create an index in Neo4j?","completion":"CREATE INDEX ON :Label(property);"}
{"prompt":"Explain data consistency in NoSQL","completion":"Data consistency in NoSQL varies, with some systems prioritizing availability (eventual consistency) over immediate consistency."}
{"prompt":"Write a Redis query to add to a set","completion":"SADD myset 'value'"}
{"prompt":"What is a transaction log in SQL?","completion":"A transaction log records all database changes for recovery and consistency in case of failures."}
{"prompt":"How to query top N records in Neo4j?","completion":"MATCH (n) RETURN n ORDER BY n.property LIMIT N;"}
{"prompt":"Write a SQL query to find min value","completion":"SELECT MIN(column) FROM table_name;"}
{"prompt":"Explain database triggers","completion":"Triggers automatically execute predefined actions in response to database events like INSERT or UPDATE."}
{"prompt":"Write a Redis query to check if key exists","completion":"EXISTS mykey"}
{"prompt":"How to use PIVOT in SQL?","completion":"SELECT * FROM table_name PIVOT (SUM(column) FOR category IN ('value1', 'value2'));"}
{"prompt":"What is a time-series database?","completion":"A time-series database, like InfluxDB, optimizes storage and querying of time-stamped data."}
{"prompt":"Explain locks in SQL databases","completion":"Locks prevent concurrent data modifications, ensuring consistency but potentially causing contention."}
{"prompt":"Write a SQL query to concatenate strings","completion":"SELECT CONCAT(column1, column2) FROM table_name;"}
{"prompt":"How to use $slice in MongoDB?","completion":"db.collection.find({}, { arrayField: { $slice: 5 } });"}
{"prompt":"How to use LIMIT with OFFSET in SQL?","completion":"SELECT * FROM table_name LIMIT 10 OFFSET 20;"}
{"prompt":"Explain schema design in MongoDB","completion":"MongoDB schema design is flexible, often denormalized, to optimize for application query patterns."}
{"prompt":"Write a Redis query to get list range","completion":"LRANGE mylist 0 10"}
{"prompt":"What's the best way to meditate?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find records with specific date","completion":"SELECT * FROM table_name WHERE date_column = '2023-01-01';"}
{"prompt":"Explain database scalability","completion":"Scalability in databases involves distributing data or load to handle increased demand, like sharding or replication."}
{"prompt":"Write a Neo4j query to find neighbors","completion":"MATCH (n:Node)-[:REL]->(m) RETURN m;"}
{"prompt":"How to use NULLIF in SQL?","completion":"SELECT NULLIF(column, 'value') FROM table_name;"}
{"prompt":"Write a MongoDB query to group by date","completion":"db.collection.aggregate([{ $group: { _id: { $dateToString: { format: '%Y-%m-%d', date: '$date' } }, count: { $sum: 1 } } }]);"}
{"prompt":"What is a stored function in SQL?","completion":"A stored function is a reusable SQL routine that returns a single value, unlike procedures."}
{"prompt":"How to use SREM in Redis?","completion":"SREM myset 'value'"}
{"prompt":"Write a SQL query to find records by pattern","completion":"SELECT * FROM table_name WHERE column LIKE 'pattern%';"}
{"prompt":"Explain in-memory databases","completion":"In-memory databases, like Redis, store data in RAM for faster access than disk-based systems."}
{"prompt":"Write a Neo4j query to delete a relationship","completion":"MATCH ()-[r:REL]->() DELETE r;"}
{"prompt":"How to use ROUND in SQL?","completion":"SELECT ROUND(column, 2) FROM table_name;"}
{"prompt":"What's the best camera to buy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain query optimization in SQL","completion":"Query optimization involves using indexes, analyzing execution plans, and rewriting queries for efficiency."}
{"prompt":"Write a MongoDB query to find by multiple conditions","completion":"db.collection.find({ field1: 'value1', field2: 'value2' });"}
{"prompt":"Write a Redis query to get hash keys","completion":"HKEYS myhash"}
{"prompt":"Explain data integrity in databases","completion":"Data integrity ensures accuracy and consistency using constraints, transactions, and validation rules."}
{"prompt":"Write a SQL query to find records by year","completion":"SELECT * FROM table_name WHERE YEAR(date_column) = 2023;"}
{"prompt":"How to use $ne in MongoDB?","completion":"db.collection.find({ field: { $ne: 'value' } });"}
{"prompt":"What is a covering index in SQL?","completion":"A covering index contains all columns needed for a query, avoiding table access for better performance."}
{"prompt":"Write a Neo4j query to find all paths","completion":"MATCH p=(n)-[*]->(m) RETURN p;"}
{"prompt":"How to use DATEADD in SQL?","completion":"SELECT DATEADD(day, 10, date_column) FROM table_name;"}
{"prompt":"Write a MongoDB query to sort by multiple fields","completion":"db.collection.find().sort({ field1: 1, field2: -1 });"}
{"prompt":"Explain database migrations","completion":"Database migrations manage schema changes, ensuring consistency across environments using scripted updates."}
{"prompt":"How to use ZREM in Redis?","completion":"ZREM myset 'value'"}
{"prompt":"Write a SQL query to find records with no matches","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id WHERE table2.id IS NULL;"}
{"prompt":"What's the best way to learn piano?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use $elemMatch in MongoDB?","completion":"db.collection.find({ arrayField: { $elemMatch: { field: 'value' } } });"}
{"prompt":"Explain database backups","completion":"Database backups create copies of data to protect against loss, using full, incremental, or differential methods."}
{"prompt":"Write a SQL query to find top N records","completion":"SELECT * FROM table_name ORDER BY column DESC LIMIT N;"}
{"prompt":"How to use EXISTS in MongoDB?","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"What is a non-relational database?","completion":"A non-relational (NoSQL) database stores data without fixed schemas, like documents, key-value, or graphs."}
{"prompt":"Write a Redis query to get all keys","completion":"KEYS *"}
{"prompt":"How to use DATEDIFF in SQL?","completion":"SELECT DATEDIFF(day, start_date, end_date) FROM table_name;"}
{"prompt":"Write a MongoDB query to update by ID","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { field: 'value' } });"}
{"prompt":"Explain database clustering","completion":"Database clustering uses multiple servers to distribute load, improving availability and performance."}
{"prompt":"Write a Neo4j query to count relationships","completion":"MATCH ()-[r]->() RETURN COUNT(r);"}
{"prompt":"How to use GROUP_CONCAT in SQL?","completion":"SELECT GROUP_CONCAT(column) FROM table_name GROUP BY column;"}
{"prompt":"What's the best laptop for gaming?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to use $size in MongoDB?","completion":"db.collection.find({ arrayField: { $size: 5 } });"}
{"prompt":"Explain database cursors","completion":"Cursors allow row-by-row processing of query results, often used in stored procedures."}
{"prompt":"Write a SQL query to find records by month","completion":"SELECT * FROM table_name WHERE MONTH(date_column) = 6;"}
{"prompt":"How to use ZRANK in Redis?","completion":"ZRANK myset 'value'"}
{"prompt":"Write a MongoDB query to find by nested field","completion":"db.collection.find({ 'nested.field': 'value' });"}
{"prompt":"What is a database schema?","completion":"A database schema defines the structure of tables, relationships, and constraints in a database."}
{"prompt":"Write a SQL query to find distinct records","completion":"SELECT DISTINCT column FROM table_name;"}
{"prompt":"Explain database indexing","completion":"Indexing creates data structures to speed up queries by reducing the data scanned."}
{"prompt":"Write a Neo4j query to find nodes by type","completion":"MATCH (n:Type) RETURN n;"}
{"prompt":"How to use CAST in SQL?","completion":"SELECT CAST(column AS type) FROM table_name;"}
{"prompt":"Write a MongoDB query to count by group","completion":"db.collection.aggregate([{ $group: { _id: '$field', count: { $sum: 1 } } }]);"}
{"prompt":"Explain database recovery","completion":"Database recovery restores data from backups or logs after failures to ensure consistency."}
{"prompt":"Write a SQL query to find records with specific time","completion":"SELECT * FROM table_name WHERE HOUR(time_column) = 14;"}
{"prompt":"How to use SPOP in Redis?","completion":"SPOP myset"}
{"prompt":"Write a Neo4j query to find nodes with multiple properties","completion":"MATCH (n:Node {prop1: 'value1', prop2: 'value2'}) RETURN n;"}
{"prompt":"How to use SUBSTRING in SQL?","completion":"SELECT SUBSTRING(column, 1, 5) FROM table_name;"}
{"prompt":"Explain database load balancing","completion":"Load balancing distributes database queries across servers to optimize performance and availability."}
{"prompt":"Write a MongoDB query to find by date range","completion":"db.collection.find({ date: { $gte: ISODate('2023-01-01'), $lte: ISODate('2023-12-31') } });"}
{"prompt":"What is a database transaction?","completion":"A transaction is a sequence of operations treated as a single unit, ensuring data integrity."}
{"prompt":"Write a SQL query to find records with specific string","completion":"SELECT * FROM table_name WHERE column LIKE '%string%';"}
{"prompt":"How to use ZCOUNT in Redis?","completion":"ZCOUNT myset 0 10"}
{"prompt":"Write a MongoDB query to update multiple fields","completion":"db.collection.updateOne({ field: 'value' }, { $set: { field1: 'new1', field2: 'new2' } });"}
{"prompt":"Explain database constraints","completion":"Constraints enforce rules like uniqueness, referential integrity, or non-null values in databases."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship","completion":"MATCH (n)-[:REL_TYPE]->(m) RETURN n, m;"}
{"prompt":"How to use REPLACE in SQL?","completion":"SELECT REPLACE(column, 'old', 'new') FROM table_name;"}
{"prompt":"What's a good hiking trail?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find by array length","completion":"db.collection.find({ arrayField: { $size: 3 } });"}
{"prompt":"Explain database failover","completion":"Failover switches to a backup server or replica when the primary database fails, ensuring availability."}
{"prompt":"Write a SQL query to find records by day of week","completion":"SELECT * FROM table_name WHERE DAYOFWEEK(date_column) = 2;"}
{"prompt":"How to use HSETNX in Redis?","completion":"HSETNX myhash field 'value'"}
{"prompt":"Write a Neo4j query to find nodes by property range","completion":"MATCH (n:Node) WHERE n.property > 10 AND n.property < 20 RETURN n;"}
{"prompt":"How to use UPPER in SQL?","completion":"SELECT UPPER(column) FROM table_name;"}
{"prompt":"Explain database normalization forms","completion":"Normalization forms (1NF, 2NF, 3NF) organize data to eliminate redundancy and ensure consistency."}
{"prompt":"Write a MongoDB query to find by regex case-insensitive","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"What is a database index scan?","completion":"An index scan retrieves data using an index, faster than a full table scan for specific queries."}
{"prompt":"Write a SQL query to find records with specific pattern","completion":"SELECT * FROM table_name WHERE column REGEXP 'pattern';"}
{"prompt":"Explain database partitioning strategies","completion":"Partitioning strategies like range, hash, or list divide data to improve performance and manageability."}
{"prompt":"Write a Redis query to get top scores","completion":"ZREVRANGE myset 0 10 WITHSCORES"}
{"prompt":"Write a Neo4j query to find nodes by label","completion":"MATCH (n:Label) RETURN n;"}
{"prompt":"How to use TRIM in SQL?","completion":"SELECT TRIM(column) FROM table_name;"}
{"prompt":"Write a MongoDB query to find by subdocument","completion":"db.collection.find({ 'subdoc.field': 'value' });"}
{"prompt":"Explain database high availability","completion":"High availability ensures databases remain accessible through redundancy, replication, and failover mechanisms."}
{"prompt":"Write a SQL query to find records with specific hour","completion":"SELECT * FROM table_name WHERE HOUR(time_column) = 15;"}
{"prompt":"How to use ZINCRBY in Redis?","completion":"ZINCRBY myset 1 'value'"}
{"prompt":"Write a Neo4j query to find nodes with no relationships","completion":"MATCH (n) WHERE NOT (n)--() RETURN n;"}
{"prompt":"How to use LENGTH in SQL?","completion":"SELECT LENGTH(column) FROM table_name;"}
{"prompt":"Explain database denormalization","completion":"Denormalization duplicates data to improve read performance, often used in NoSQL or data warehouses."}
{"prompt":"Write a MongoDB query to find by multiple array elements","completion":"db.collection.find({ arrayField: { $all: ['value1', 'value2'] } });"}
{"prompt":"What is a database join?","completion":"A join combines rows from multiple tables based on a related column, like INNER or LEFT JOIN."}
{"prompt":"Write a SQL query to find records with specific year and month","completion":"SELECT * FROM table_name WHERE YEAR(date_column) = 2023 AND MONTH(date_column) = 6;"}
{"prompt":"Explain database transaction isolation levels","completion":"Isolation levels like Read Uncommitted or Serializable control how transactions interact, balancing consistency and performance."}
{"prompt":"Write a Redis query to get random set member","completion":"SRANDMEMBER myset"}
{"prompt":"Write a Neo4j query to find nodes with specific property value","completion":"MATCH (n:Node {property: 'value'}) RETURN n;"}
{"prompt":"How to use CONCAT_WS in SQL?","completion":"SELECT CONCAT_WS(',', column1, column2) FROM table_name;"}
{"prompt":"What's a good movie streaming service?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find documents with missing fields","completion":"db.collection.find({ field: { $exists: false } });"}
{"prompt":"Explain database performance tuning","completion":"Performance tuning optimizes queries, indexes, and configurations to improve database speed and efficiency."}
{"prompt":"Write a SQL query to find records with specific date range","completion":"SELECT * FROM table_name WHERE date_column BETWEEN '2023-01-01' AND '2023-12-31';"}
{"prompt":"How to use HINCRBY in Redis?","completion":"HINCRBY myhash field 1"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship type","completion":"MATCH (n)-[:REL_TYPE]->(m) RETURN n, m;"}
{"prompt":"How to use LEFT in SQL?","completion":"SELECT LEFT(column, 5) FROM table_name;"}
{"prompt":"Explain database connection pooling","completion":"Connection pooling reuses database connections to reduce overhead and improve performance in applications."}
{"prompt":"Write a MongoDB query to find by array size","completion":"db.collection.find({ arrayField: { $size: 4 } });"}
{"prompt":"What is a database deadlock?","completion":"A deadlock occurs when transactions wait on each other’s resources, causing a standstill until resolved."}
{"prompt":"Write a SQL query to find records with specific substring","completion":"SELECT * FROM table_name WHERE column LIKE '%substring%';"}
{"prompt":"Explain database indexing trade-offs","completion":"Indexes speed up reads but slow writes, increase storage, and require maintenance."}
{"prompt":"Write a Redis query to get list elements by index","completion":"LINDEX mylist 0"}
{"prompt":"Write a Neo4j query to find nodes by property existence","completion":"MATCH (n:Node) WHERE EXISTS(n.property) RETURN n;"}
{"prompt":"How to use RIGHT in SQL?","completion":"SELECT RIGHT(column, 5) FROM table_name;"}
{"prompt":"What's the best way to learn drawing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find by nested array","completion":"db.collection.find({ 'array.subarray': 'value' });"}
{"prompt":"Explain database sharding strategies","completion":"Sharding strategies like range, hash, or tag-aware distribute data based on keys to balance load."}
{"prompt":"Write a SQL query to find records with specific day","completion":"SELECT * FROM table_name WHERE DAY(date_column) = 15;"}
{"prompt":"How to use ZREVRANK in Redis?","completion":"ZREVRANK myset 'value'"}
{"prompt":"Write a Neo4j query to find nodes with specific label and property","completion":"MATCH (n:Label {property: 'value'}) RETURN n;"}
{"prompt":"How to use LOCATE in SQL?","completion":"SELECT LOCATE('substring', column) FROM table_name;"}
{"prompt":"Explain database replication lag","completion":"Replication lag is the delay between a write on the primary and its propagation to replicas."}
{"prompt":"Write a MongoDB query to find by multiple regex","completion":"db.collection.find({ field1: { $regex: 'pattern1' }, field2: { $regex: 'pattern2' } });"}
{"prompt":"What is a database view?","completion":"A view is a virtual table based on a query, used for simplifying queries or securing data."}
{"prompt":"Write a SQL query to find records with specific timestamp","completion":"SELECT * FROM table_name WHERE timestamp_column = '2023-01-01 12:00:00';"}
{"prompt":"How to use ZRANGEBYSCORE in Redis?","completion":"ZRANGEBYSCORE myset 0 100"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship count","completion":"MATCH (n)-[r]->() WITH n, COUNT(r) AS rel_count WHERE rel_count > 2 RETURN n;"}
{"prompt":"How to use FORMAT in SQL?","completion":"SELECT FORMAT(column, 'N2') FROM table_name;"}
{"prompt":"Explain database query caching","completion":"Query caching stores query results to avoid recomputation, improving performance for repeated queries."}
{"prompt":"Write a MongoDB query to find by array index","completion":"db.collection.find({ 'array.0': 'value' });"}
{"prompt":"What is a database constraint violation?","completion":"A constraint violation occurs when data operations break rules like uniqueness or foreign key requirements."}
{"prompt":"Write a SQL query to find records with specific pattern case-insensitive","completion":"SELECT * FROM table_name WHERE UPPER(column) LIKE UPPER('%pattern%');"}
{"prompt":"Explain database write conflicts","completion":"Write conflicts occur when multiple transactions attempt to modify the same data concurrently."}
{"prompt":"Write a Neo4j query to find nodes with specific property type","completion":"MATCH (n:Node) WHERE n.property IS NOT NULL RETURN n;"}
{"prompt":"How to use INSTR in SQL?","completion":"SELECT INSTR(column, 'substring') FROM table_name;"}
{"prompt":"What's a good fitness app?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find by date year","completion":"db.collection.find({ $expr: { $eq: [{ $year: '$date' }, 2023] } });"}
{"prompt":"Explain database connection timeouts","completion":"Connection timeouts occur when a database connection exceeds a set time limit, preventing hangs."}
{"prompt":"Write a SQL query to find records with specific minute","completion":"SELECT * FROM table_name WHERE MINUTE(time_column) = 30;"}
{"prompt":"How to use ZREMRANGEBYSCORE in Redis?","completion":"ZREMRANGEBYSCORE myset 0 100"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship direction","completion":"MATCH (n)-[:REL]->(m) RETURN n, m;"}
{"prompt":"How to use CHAR_LENGTH in SQL?","completion":"SELECT CHAR_LENGTH(column) FROM table_name;"}
{"prompt":"Explain database indexing overhead","completion":"Indexing overhead includes increased storage and slower writes due to index maintenance."}
{"prompt":"Write a MongoDB query to find by array not empty","completion":"db.collection.find({ arrayField: { $ne: [] } });"}
{"prompt":"What is a database snapshot?","completion":"A snapshot captures a database’s state at a specific time for backups or consistency."}
{"prompt":"Write a SQL query to find records with specific second","completion":"SELECT * FROM table_name WHERE SECOND(time_column) = 45;"}
{"prompt":"How to use SSCAN in Redis?","completion":"SSCAN myset 0 MATCH pattern"}
{"prompt":"Write a Neo4j query to find nodes with specific property null","completion":"MATCH (n:Node) WHERE n.property IS NULL RETURN n;"}
{"prompt":"How to use REPEAT in SQL?","completion":"SELECT REPEAT(column, 3) FROM table_name;"}
{"prompt":"Explain database connection limits","completion":"Connection limits restrict the number of simultaneous database connections to manage resources."}
{"prompt":"Write a MongoDB query to find by multiple date conditions","completion":"db.collection.find({ date: { $gte: ISODate('2023-01-01'), $lte: ISODate('2023-12-31') } });"}
{"prompt":"What is a database trigger event?","completion":"A trigger event is an action (e.g., INSERT, UPDATE) that activates a database trigger."}
{"prompt":"Write a SQL query to find records with specific pattern at start","completion":"SELECT * FROM table_name WHERE column LIKE 'pattern%';"}
{"prompt":"How to use $mod in MongoDB?","completion":"db.collection.find({ field: { $mod: [5, 0] } });"}
{"prompt":"Explain database query execution plans","completion":"Query execution plans outline how a database processes a query, showing steps like scans or joins."}
{"prompt":"Write a Redis query to get hash value by field","completion":"HGET myhash field"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship length","completion":"MATCH (n)-[r*1..3]->(m) RETURN n, m;"}
{"prompt":"How to use LPAD in SQL?","completion":"SELECT LPAD(column, 10, '0') FROM table_name;"}
{"prompt":"Write a MongoDB query to find by multiple nested fields","completion":"db.collection.find({ 'nested.field1': 'value1', 'nested.field2': 'value2' });"}
{"prompt":"Explain database connection retry strategies","completion":"Connection retry strategies attempt reconnection with delays or backoffs to handle transient failures."}
{"prompt":"Write a SQL query to find records with specific pattern at end","completion":"SELECT * FROM table_name WHERE column LIKE '%pattern';"}
{"prompt":"How to use ZSCAN in Redis?","completion":"ZSCAN myset 0 MATCH pattern"}
{"prompt":"Write a Neo4j query to find nodes with specific property regex","completion":"MATCH (n:Node) WHERE n.property =~ 'pattern.*' RETURN n;"}
{"prompt":"How to use RPAD in SQL?","completion":"SELECT RPAD(column, 10, '0') FROM table_name;"}
{"prompt":"Explain database transaction rollback","completion":"Transaction rollback undoes changes if a transaction fails, ensuring data consistency."}
{"prompt":"Write a MongoDB query to find by array contains","completion":"db.collection.find({ arrayField: 'value' });"}
{"prompt":"What is a database index bloat?","completion":"Index bloat occurs when indexes grow excessively due to updates or deletes, reducing efficiency."}
{"prompt":"Write a SQL query to find records with specific pattern case-sensitive","completion":"SELECT * FROM table_name WHERE BINARY column LIKE '%pattern%';"}
{"prompt":"How to use $gt in MongoDB?","completion":"db.collection.find({ field: { $gt: 10 } });"}
{"prompt":"Explain database connection pooling benefits","completion":"Connection pooling reduces overhead by reusing connections, improving performance and scalability."}
{"prompt":"Write a Redis query to get all hash fields","completion":"HGETALL myhash"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship pattern","completion":"MATCH (n)-[:REL1]->()<-[:REL2]-(m) RETURN n, m;"}
{"prompt":"How to use STRCMP in SQL?","completion":"SELECT STRCMP(column1, column2) FROM table_name;"}
{"prompt":"What's the best way to learn yoga?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find by date month","completion":"db.collection.find({ $expr: { $eq: [{ $month: '$date' }, 6] } });"}
{"prompt":"Explain database index maintenance","completion":"Index maintenance updates indexes during data changes, ensuring query performance but adding overhead."}
{"prompt":"Write a SQL query to find records with specific pattern in middle","completion":"SELECT * FROM table_name WHERE column LIKE '%pattern%';"}
{"prompt":"How to use HSCAN in Redis?","completion":"HSCAN myhash 0 MATCH pattern"}
{"prompt":"Write a Neo4j query to find nodes with specific property range","completion":"MATCH (n:Node) WHERE n.property BETWEEN 10 AND 20 RETURN n;"}
{"prompt":"How to use FIND_IN_SET in SQL?","completion":"SELECT * FROM table_name WHERE FIND_IN_SET('value', column);"}
{"prompt":"Explain database connection security","completion":"Connection security uses encryption, authentication, and access controls to protect database interactions."}
{"prompt":"Write a MongoDB query to find by array not contains","completion":"db.collection.find({ arrayField: { $nin: ['value'] } });"}
{"prompt":"What is a database index rebuild?","completion":"An index rebuild recreates an index to optimize performance or recover from corruption."}
{"prompt":"Write a SQL query to find records with specific time range","completion":"SELECT * FROM table_name WHERE time_column BETWEEN '14:00:00' AND '16:00:00';"}
{"prompt":"How to use ZREMRANGEBYRANK in Redis?","completion":"ZREMRANGEBYRANK myset 0 10"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship direction","completion":"MATCH (n)<-[:REL]-(m) RETURN n, m;"}
{"prompt":"How to use MID in SQL?","completion":"SELECT MID(column, 2, 5) FROM table_name;"}
{"prompt":"Explain database query optimization techniques","completion":"Query optimization techniques include indexing, query rewriting, and using execution plans to improve performance."}
{"prompt":"Write a MongoDB query to find by date day","completion":"db.collection.find({ $expr: { $eq: [{ $dayOfMonth: '$date' }, 15] } });"}
{"prompt":"What is a database index fragmentation?","completion":"Index fragmentation occurs when index data becomes scattered, reducing query efficiency."}
{"prompt":"Write a SQL query to find records with specific pattern regex","completion":"SELECT * FROM table_name WHERE column REGEXP 'pattern';"}
{"prompt":"How to use $lte in MongoDB?","completion":"db.collection.find({ field: { $lte: 10 } });"}
{"prompt":"Explain database connection throttling","completion":"Connection throttling limits the rate of database connections to prevent overload and ensure stability."}
{"prompt":"Write a Redis query to get all set members","completion":"SMEMBERS myset"}
{"prompt":"Write a Neo4j query to find nodes with specific property not null","completion":"MATCH (n:Node) WHERE n.property IS NOT NULL RETURN n;"}
{"prompt":"How to use FIELD in SQL?","completion":"SELECT FIELD(column, 'value1', 'value2') FROM table_name;"}
{"prompt":"What's the best way to learn swimming?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find by date week","completion":"db.collection.find({ $expr: { $eq: [{ $week: '$date' }, 23] } });"}
{"prompt":"Explain database index selectivity","completion":"Index selectivity measures how unique index values are, with higher selectivity improving query performance."}
{"prompt":"Write a SQL query to find records with specific pattern exact match","completion":"SELECT * FROM table_name WHERE column = 'pattern';"}
{"prompt":"How to use ZRANGEBYLEX in Redis?","completion":"ZRANGEBYLEX myset [a [z"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship count range","completion":"MATCH (n)-[r]->() WITH n, COUNT(r) AS rel_count WHERE rel_count BETWEEN 2 AND 5 RETURN n;"}
{"prompt":"How to use ELT in SQL?","completion":"SELECT ELT(1, 'value1', 'value2') FROM table_name;"}
{"prompt":"Explain database connection monitoring","completion":"Connection monitoring tracks database connections to detect issues, optimize usage, and ensure performance."}
{"prompt":"Write a MongoDB query to find by date year and month","completion":"db.collection.find({ $expr: { $and: [{ $eq: [{ $year: '$date' }, 2023] }, { $eq: [{ $month: '$date' }, 6] }] } });"}
{"prompt":"What is a database index drop?","completion":"Dropping an index removes it from the database, freeing space but potentially slowing queries."}
{"prompt":"Write a SQL query to find records with specific pattern not like","completion":"SELECT * FROM table_name WHERE column NOT LIKE '%pattern%';"}
{"prompt":"How to use $gte in MongoDB?","completion":"db.collection.find({ field: { $gte: 10 } });"}
{"prompt":"Explain database connection retry policies","completion":"Retry policies define how applications handle failed database connections, using delays or exponential backoff."}
{"prompt":"Write a Redis query to get all sorted set members","completion":"ZRANGE myset 0 -1"}
{"prompt":"How to use SUBSTR in SQL?","completion":"SELECT SUBSTR(column, 1, 5) FROM table_name;"}
{"prompt":"What's a good app for learning languages?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find by date day of week","completion":"db.collection.find({ $expr: { $eq: [{ $dayOfWeek: '$date' }, 2] } });"}
{"prompt":"Explain database index types","completion":"Common index types include B-tree, hash, and full-text, each optimized for different query patterns."}
{"prompt":"Write a SQL query to find records with specific pattern case-insensitive","completion":"SELECT * FROM table_name WHERE LOWER(column) LIKE LOWER('%pattern%');"}
{"prompt":"How to use $lt in MongoDB?","completion":"db.collection.find({ field: { $lt: 10 } });"}
{"prompt":"Explain database connection pooling drawbacks","completion":"Drawbacks include potential stale connections, increased complexity, and resource consumption."}
{"prompt":"Write a Redis query to get all sorted set members with scores","completion":"ZRANGE myset 0 -1 WITHSCORES"}
{"prompt":"Write a Neo4j query to find nodes with specific property greater than","completion":"MATCH (n:Node) WHERE n.property > 10 RETURN n;"}
{"prompt":"How to use ASCII in SQL?","completion":"SELECT ASCII(column) FROM table_name;"}
{"prompt":"What's the best way to learn a new language?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query to find by date hour","completion":"db.collection.find({ $expr: { $eq: [{ $hour: '$date' }, 14] } });"}
{"prompt":"Explain database index usage statistics","completion":"Index usage statistics track how often indexes are used in queries, helping identify unused or inefficient indexes."}
{"prompt":"Write a SQL query to find records with specific pattern using binary","completion":"SELECT * FROM table_name WHERE BINARY column LIKE BINARY '%pattern%';"}
{"prompt":"How to use ZLEXCOUNT in Redis?","completion":"ZLEXCOUNT myset [a [z"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship count greater than","completion":"MATCH (n)-[r]->() WITH n, COUNT(r) AS rel_count WHERE rel_count > 3 RETURN n;"}
{"prompt":"How to retrieve all documents from a MongoDB collection named 'orders'?","completion":"db.orders.find();"}
{"prompt":"Explain the difference between SQL and NoSQL databases.","completion":"SQL databases are relational with structured schemas, using tables and SQL queries (e.g., MySQL). NoSQL databases are non-relational, with flexible schemas, supporting various data models like document (MongoDB), key-value (Redis), or graph (Neo4j)."}
{"prompt":"Write a SQL query to join two tables, employees and departments.","completion":"SELECT e.name, d.department_name FROM employees e JOIN departments d ON e.department_id = d.id;"}
{"prompt":"How to add a new key-value pair in Redis?","completion":"SET mykey \"value\""}
{"prompt":"Create a SQL query to count rows in a table named 'products'.","completion":"SELECT COUNT(*) FROM products;"}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId(\"id\") }, { $set: { field: \"newValue\" } });"}
{"prompt":"Explain primary keys in SQL.","completion":"A primary key uniquely identifies each record in a table, ensuring no duplicates and enabling fast lookups."}
{"prompt":"Query to find documents in MongoDB where age < 30.","completion":"db.collection.find({ age: { $lt: 30 } });"}
{"prompt":"What is normalization in SQL databases?","completion":"Normalization organizes data into tables to reduce redundancy and ensure data integrity, following forms like 1NF, 2NF, 3NF."}
{"prompt":"Write a SQL query using GROUP BY to summarize sales by region.","completion":"SELECT region, SUM(sales) FROM sales_data GROUP BY region;"}
{"prompt":"Query to insert a document in MongoDB.","completion":"db.collection.insertOne({ name: \"Item\", price: 100 });"}
{"prompt":"Explain ACID properties in databases.","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions in databases, particularly SQL."}
{"prompt":"Write a SQL query to find distinct values in a column.","completion":"SELECT DISTINCT column_name FROM table_name;"}
{"prompt":"What is a document store in NoSQL?","completion":"A document store (e.g., MongoDB) stores data as JSON-like documents with flexible schemas."}
{"prompt":"How to create a node in Neo4j?","completion":"CREATE (n:Person { name: 'Alice' });"}
{"prompt":"What is a key-value store?","completion":"A key-value store (e.g., Redis) is a NoSQL database that stores data as simple key-value pairs for fast retrieval."}
{"prompt":"Explain eventual consistency in NoSQL.","completion":"Eventual consistency means data replicas in distributed NoSQL systems may differ temporarily but converge over time."}
{"prompt":"How to create a SQL view?","completion":"CREATE VIEW view_name AS SELECT column1, column2 FROM table_name WHERE condition;"}
{"prompt":"Query to count documents in MongoDB.","completion":"db.collection.countDocuments({ filter });"}
{"prompt":"What is a graph database?","completion":"A graph database (e.g., Neo4j) stores data as nodes and relationships, optimized for connected data queries."}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, use EXPLAIN to analyze, and filter with WHERE to limit rows."}
{"prompt":"Explain indexes in databases.","completion":"Indexes improve query performance by allowing faster data retrieval, like an index in a book."}
{"prompt":"Write a SQL query for UNION.","completion":"SELECT column FROM table1 UNION SELECT column FROM table_name2;"}
{"prompt":"How to write a stored procedure in SQL?","completion":"CREATE PROCEDURE proc_name AS BEGIN SELECT * FROM table_name; END;"}
{"prompt":"Query to unwind arrays in MongoDB.","completion":"db.collection.aggregate([{ $unwind: \"$arrayField\" }]);"}
{"prompt":"Explain triggers in SQL.","completion":"Triggers are automatic procedures that run before or after database events like INSERT or UPDATE."}
{"prompt":"What is BASE in NoSQL?","completion":"BASE (Basically Available, Soft state, Eventual consistency) is a NoSQL alternative to ACID for distributed systems."}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data in NoSQL to improve read performance by reducing joins."}
{"prompt":"Write a MongoDB projection query.","completion":"db.collection.find({}, { field1: 1, field2: 0 }); // include field1, exclude field2"}
{"prompt":"How to rename a collection in MongoDB?","completion":"db.collection.renameCollection(\"newName\");"}
{"prompt":"What is a column-family store?","completion":"A column-family store (e.g., Cassandra) stores data in columns grouped into families, suited for wide rows."}
{"prompt":"Write a Redis query for hashes.","completion":"HMSET myhash field1 \"value1\" field2 \"value2\""}
{"prompt":"What is schema-less design in NoSQL?","completion":"Schema-less design (e.g., MongoDB) allows documents to have different fields, offering flexibility."}
{"prompt":"Write a SQL query to alter a table.","completion":"ALTER TABLE table_name ADD column_name datatype;"}
{"prompt":"How to find distinct values in MongoDB?","completion":"db.collection.distinct(\"field\");"}
{"prompt":"Explain caching with Redis.","completion":"Redis caches data in memory for faster retrieval compared to disk-based databases."}
{"prompt":"Write a SQL pivot query.","completion":"SELECT * FROM (SELECT ...) PIVOT (AGG FOR column IN (...));"}
{"prompt":"What is a join in NoSQL?","completion":"NoSQL often uses denormalization or application-level joins, but MongoDB supports $lookup for joins."}
{"prompt":"Write a Neo4j query to traverse a graph.","completion":"MATCH (a:Person)-[:KNOWS]->(b:Person) RETURN a, b;"}
{"prompt":"How to handle errors in SQL transactions?","completion":"Use TRY...CATCH in some SQL dialects or check @@ERROR in others."}
{"prompt":"Query to find documents in MongoDB with price between 10 and 50.","completion":"db.collection.find({ price: { $gte: 10, $lte: 50 } });"}
{"prompt":"What is CAP theorem in NoSQL?","completion":"CAP theorem states distributed systems can prioritize two of Consistency, Availability, or Partition tolerance."}
{"prompt":"Write a SQL query to create a table with constraints.","completion":"CREATE TABLE users (id INT PRIMARY KEY, name VARCHAR(50) NOT NULL);"}
{"prompt":"How to suggest a workout routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query for INNER JOIN.","completion":"SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to expire a document in MongoDB?","completion":"Use TTL index: db.collection.createIndex({ \"createdAt\": 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"What is a view in SQL?","completion":"A view is a virtual table based on a query, used for security and simplifying complex queries."}
{"prompt":"How to update multiple documents in MongoDB?","completion":"db.collection.updateMany({ status: \"old\" }, { $set: { status: \"new\" } });"}
{"prompt":"Explain clustering in databases.","completion":"Clustering groups related data together on disk to improve query performance, common in SQL and NoSQL."}
{"prompt":"What is database normalization and why is it important?","completion":"Normalization organizes data to eliminate redundancy and ensure data integrity, using normal forms (1NF, 2NF, 3NF). It’s important to reduce anomalies during inserts, updates, and deletes."}
{"prompt":"Write a SQL query to create a table for storing customer data.","completion":"CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(100), email VARCHAR(100), created_at TIMESTAMP);"}
{"prompt":"How do I set up a TTL index in MongoDB to expire data after 24 hours?","completion":"db.collection.createIndex({ \"createdAt\": 1 }, { expireAfterSeconds: 86400 });"}
{"prompt":"What are the differences between a relational and a key-value database?","completion":"Relational databases (e.g., MySQL) use tables with structured data and SQL, while key-value databases (e.g., Redis) store data as key-value pairs for fast, simple retrieval."}
{"prompt":"How to check the size of a collection in MongoDB?","completion":"db.collection.stats().size; or db.collection.dataSize(); for the size in bytes."}
{"prompt":"How can I improve my photography skills?","completion":"Sorry, I can only answer questions related to SQL, NoSQL, and the database domain."}
{"prompt":"What is a clustered index in SQL databases?","completion":"A clustered index determines the physical order of data in a table, improving query performance for range-based or frequent lookups. Only one per table is allowed."}
{"prompt":"How to query all keys in a Redis database?","completion":"KEYS *; (Note: Use cautiously in production due to performance impact.)"}
{"prompt":"What’s the best way to design a database schema for an e-commerce platform?","completion":"Use tables/collections for users, products, orders, and reviews. Normalize for SQL (e.g., separate tables with foreign keys) or embed for NoSQL (e.g., products within orders in MongoDB) based on access patterns."}
{"prompt":"Can you explain how to bake a cake?","completion":"Sorry, I can only answer questions related to SQL, NoSQL, and the database domain."}
{"prompt":"Write a SQL query to select distinct names from a users table.","completion":"SELECT DISTINCT name FROM users;"}
{"prompt":"How do I insert multiple documents in MongoDB?","completion":"db.collection.insertMany([{ name: 'Alice', age: 25 }, { name: 'Bob', age: 30 }]);"}
{"prompt":"What is the CAP theorem in databases?","completion":"The CAP theorem states a distributed database can only guarantee two of three properties: Consistency, Availability, Partition Tolerance."}
{"prompt":"How to create a unique index in PostgreSQL?","completion":"CREATE UNIQUE INDEX idx_name ON table_name (column_name);"}
{"prompt":"What’s the best way to learn French?","completion":"Sorry, I can only answer questions related to SQL, NoSQL, and the database domain."}
{"prompt":"How to query a Redis set for all members?","completion":"SMEMBERS set_name;"}
{"prompt":"What is denormalization in databases?","completion":"Denormalization combines tables to reduce joins, improving read performance at the cost of redundancy, often used in data warehouses."}
{"prompt":"How to update a field in Cassandra for a specific row?","completion":"UPDATE keyspace.table SET column_name = new_value WHERE key = value;"}
{"prompt":"Can you suggest a workout plan?","completion":"Sorry, I can only answer questions related to SQL, NoSQL, and the database domain."}
{"prompt":"How to optimize a MongoDB query with an index?","completion":"Create an index on queried fields: db.collection.createIndex({ field: 1 }); then use find() or aggregate()."}
{"prompt":"What are ACID properties in databases?","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable database transactions."}
{"prompt":"Write a SQL query to join users and orders tables, showing only users with orders.","completion":"SELECT u.* FROM users u INNER JOIN orders o ON u.user_id = o.user_id;"}
{"prompt":"How to check if a MongoDB collection exists?","completion":"db.getCollectionNames().includes('collection_name');"}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key is a column that creates a relationship between two tables, enforcing referential integrity."}
{"prompt":"How to store a value in a Redis hash?","completion":"HSET hash_key field value;"}
{"prompt":"How to design a database for a blog platform?","completion":"Use tables/collections for users, posts, comments, and tags. In SQL, normalize with foreign keys; in NoSQL, embed comments in posts for read efficiency."}
{"prompt":"What’s the plot of Romeo and Juliet?","completion":"Sorry, I can only answer questions related to SQL, NoSQL, and the database domain."}
{"prompt":"How to drop a table in MySQL?","completion":"DROP TABLE table_name;"}
{"prompt":"What is sharding in NoSQL databases?","completion":"Sharding splits a database across multiple servers to distribute load and improve scalability, common in MongoDB and Cassandra."}
{"prompt":"How to insert a document in MongoDB?","completion":"db.collection.insertOne({ key: value });"}
{"prompt":"Explain SQL INNER JOIN.","completion":"An INNER JOIN returns rows with matching values in both tables. Example: SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Create a key-value pair in Redis.","completion":"SET mykey 'value';"}
{"prompt":"How to select distinct values in SQL?","completion":"SELECT DISTINCT column FROM table;"}
{"prompt":"Write a MongoDB query to find documents where age < 30.","completion":"db.collection.find({ age: { $lt: 30 } });"}
{"prompt":"What is a primary key in SQL?","completion":"A primary key uniquely identifies each record in a table and cannot be null."}
{"prompt":"Explain NoSQL document stores.","completion":"NoSQL document stores, like MongoDB, store data as JSON-like documents with flexible schemas."}
{"prompt":"SQL query to update employee name.","completion":"UPDATE employees SET name = 'John' WHERE id = 1;"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ _id: id }, { $push: { arrayField: value } });"}
{"prompt":"Create a table in SQL for products.","completion":"CREATE TABLE products (id INT PRIMARY KEY, name VARCHAR(100), price DECIMAL(10,2));"}
{"prompt":"Redis command to get all keys.","completion":"KEYS *;"}
{"prompt":"SQL query for average salary.","completion":"SELECT AVG(salary) FROM employees;"}
{"prompt":"MongoDB query to sort by date descending.","completion":"db.collection.find().sort({ date: -1 });"}
{"prompt":"What is normalization in SQL?","completion":"Normalization organizes data to reduce redundancy, following forms like 1NF, 2NF, 3NF."}
{"prompt":"Create a node in Neo4j.","completion":"CREATE (n:Person {name: 'Alice', age: 30});"}
{"prompt":"SQL LEFT JOIN example.","completion":"SELECT * FROM employees LEFT JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"MongoDB query to update multiple documents.","completion":"db.collection.updateMany({ condition }, { $set: { field: value } });"}
{"prompt":"SQL query to delete records older than a date.","completion":"DELETE FROM table WHERE date < '2023-01-01';"}
{"prompt":"Redis list push operation.","completion":"LPUSH mylist 'value';"}
{"prompt":"Explain CAP theorem for NoSQL.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition tolerance."}
{"prompt":"SQL GROUP BY with COUNT.","completion":"SELECT dept, COUNT(*) FROM employees GROUP BY dept;"}
{"prompt":"MongoDB aggregation for sum.","completion":"db.collection.aggregate([{ $group: { _id: null, total: { $sum: '$amount' } } }]);"}
{"prompt":"How to draw?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"PostgreSQL query with LIMIT.","completion":"SELECT * FROM table LIMIT 10;"}
{"prompt":"Neo4j query to find relationships.","completion":"MATCH (n)-[r:KNOWS]->(m) RETURN n, r, m;"}
{"prompt":"SQL query for maximum value.","completion":"SELECT MAX(salary) FROM employees;"}
{"prompt":"Cassandra insert query.","completion":"INSERT INTO keyspace.table (id, name) VALUES (1, 'Alice');"}
{"prompt":"SQL subquery example.","completion":"SELECT * FROM employees WHERE dept_id IN (SELECT id FROM departments WHERE location = 'NY');"}
{"prompt":"MongoDB text search query.","completion":"db.collection.find({ $text: { $search: 'keyword' } });"}
{"prompt":"Redis expire key.","completion":"SET mykey 'value' EX 3600;"}
{"prompt":"SQL HAVING clause example.","completion":"SELECT dept, COUNT(*) FROM employees GROUP BY dept HAVING COUNT(*) > 5;"}
{"prompt":"Explain sharding in MongoDB.","completion":"Sharding distributes data across multiple servers using a shard key to improve scalability."}
{"prompt":"SQL FOREIGN KEY constraint.","completion":"CREATE TABLE orders (id INT, emp_id INT, FOREIGN KEY (emp_id) REFERENCES employees(id));"}
{"prompt":"Neo4j shortest path query.","completion":"MATCH p=shortestPath((n:Person)-[*]-(m:Person)) WHERE n.name='Alice' AND m.name='Bob' RETURN p;"}
{"prompt":"SQL CASE statement.","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"MongoDB index creation.","completion":"db.collection.createIndex({ field: 1 });"}
{"prompt":"Redis sorted set add.","completion":"ZADD myset 1 'member';"}
{"prompt":"SQL FULL OUTER JOIN.","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Cassandra secondary index.","completion":"CREATE INDEX ON keyspace.table (column);"}
{"prompt":"SQL date function example.","completion":"SELECT CURRENT_DATE;"}
{"prompt":"MongoDB geospatial query.","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"PostgreSQL JSONB query.","completion":"SELECT * FROM table WHERE jsonb_column @> '{\"key\": \"value\"}';"}
{"prompt":"Redis pub/sub example.","completion":"PUBLISH channel 'message'; SUBSCRIBE channel;"}
{"prompt":"SQL ALTER TABLE add column.","completion":"ALTER TABLE employees ADD email VARCHAR(100);"}
{"prompt":"MongoDB bulk insert.","completion":"db.collection.insertMany([{doc1}, {doc2}]);"}
{"prompt":"Explain ACID properties.","completion":"ACID ensures transactions are Atomic, Consistent, Isolated, and Durable."}
{"prompt":"Neo4j MERGE clause.","completion":"MERGE (n:Person {name: 'Alice'}) SET n.age = 30;"}
{"prompt":"SQL LIKE operator.","completion":"SELECT * FROM table WHERE name LIKE '%John%';"}
{"prompt":"Redis hash set.","completion":"HMSET myhash field1 'value1' field2 'value2';"}
{"prompt":"SQL UNION example.","completion":"SELECT name FROM table1 UNION SELECT name FROM table2;"}
{"prompt":"MongoDB change stream.","completion":"const changeStream = db.collection.watch(); for await (const change of changeStream) { console.log(change); }"}
{"prompt":"Cassandra batch statement.","completion":"BEGIN BATCH INSERT INTO table (id, name) VALUES (1, 'Alice'); UPDATE table SET name = 'Bob' WHERE id = 2; APPLY BATCH;"}
{"prompt":"SQL view creation.","completion":"CREATE VIEW myview AS SELECT * FROM table WHERE condition;"}
{"prompt":"Redis transaction example.","completion":"MULTI; SET key1 'value1'; SET key2 'value2'; EXEC;"}
{"prompt":"PostgreSQL full-text search.","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('term');"}
{"prompt":"SQL pivot query example.","completion":"SELECT * FROM (SELECT dept, salary FROM employees) PIVOT (SUM(salary) FOR dept IN ('HR', 'IT'));"}
{"prompt":"MongoDB replica set explanation.","completion":"A replica set in MongoDB is a group of mongod instances maintaining the same data for redundancy and high availability."}
{"prompt":"Redis pipeline example.","completion":"const pipeline = client.pipeline(); pipeline.set('key', 'value'); pipeline.get('key'); await pipeline.exec();"}
{"prompt":"SQL self-join example.","completion":"SELECT e1.name, e2.name FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id;"}
{"prompt":"Neo4j create relationship.","completion":"MATCH (a:Person), (b:Person) WHERE a.name = 'Alice' AND b.name = 'Bob' CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"SQL MIN function.","completion":"SELECT MIN(salary) FROM employees;"}
{"prompt":"MongoDB $lookup example.","completion":"db.collection.aggregate([{ $lookup: { from: 'other', localField: 'field', foreignField: 'field', as: 'joined' } }]);"}
{"prompt":"Cassandra data modeling tip.","completion":"Design tables based on query patterns, use denormalization, and choose partition keys carefully."}
{"prompt":"SQL trigger creation.","completion":"CREATE TRIGGER my_trigger BEFORE INSERT ON table FOR EACH ROW EXECUTE PROCEDURE my_function();"}
{"prompt":"Redis increment operation.","completion":"INCR mycounter;"}
{"prompt":"SQL BETWEEN operator.","completion":"SELECT * FROM employees WHERE salary BETWEEN 30000 AND 60000;"}
{"prompt":"MongoDB projection example.","completion":"db.collection.find({}, { field1: 1, _id: 0 });"}
{"prompt":"PostgreSQL sequence creation.","completion":"CREATE SEQUENCE my_seq START 1;"}
{"prompt":"Neo4j delete node.","completion":"MATCH (n:Person {name: 'Alice'}) DELETE n;"}
{"prompt":"SQL COALESCE function.","completion":"SELECT COALESCE(null_column, 'default') FROM table;"}
{"prompt":"MongoDB $unset operator.","completion":"db.collection.updateOne({ _id: id }, { $unset: { field: '' } });"}
{"prompt":"SQL drop index.","completion":"DROP INDEX index_name ON table;"}
{"prompt":"Redis get range from list.","completion":"LRANGE mylist 0 -1;"}
{"prompt":"Cassandra timeuuid.","completion":"INSERT INTO table (id, data) VALUES (now(), 'value');"}
{"prompt":"SQL window function example.","completion":"SELECT name, RANK() OVER (PARTITION BY dept ORDER BY salary) FROM employees;"}
{"prompt":"MongoDB regex query.","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"SQL check constraint.","completion":"CREATE TABLE table (age INT CHECK (age >= 18));"}
{"prompt":"Neo4j query all nodes.","completion":"MATCH (n) RETURN n;"}
{"prompt":"SQL EXISTS operator.","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE column = table1.column);"}
{"prompt":"MongoDB $inc operator.","completion":"db.collection.updateOne({ _id: id }, { $inc: { counter: 1 } });"}
{"prompt":"Redis set expiration.","completion":"SETEX mykey 3600 'value';"}
{"prompt":"SQL CREATE INDEX.","completion":"CREATE INDEX idx_name ON table (column);"}
{"prompt":"Cassandra drop table.","completion":"DROP TABLE keyspace.table;"}
{"prompt":"PostgreSQL CTE example.","completion":"WITH cte AS (SELECT * FROM table WHERE condition) SELECT * FROM cte;"}
{"prompt":"MongoDB $all operator.","completion":"db.collection.find({ tags: { $all: ['tag1', 'tag2'] } });"}
{"prompt":"SQL TRUNCATE table.","completion":"TRUNCATE TABLE table;"}
{"prompt":"Neo4j query by property.","completion":"MATCH (n:Person {age: 30}) RETURN n;"}
{"prompt":"SQL IN operator.","completion":"SELECT * FROM table WHERE id IN (1, 2, 3);"}
{"prompt":"Redis delete key.","completion":"DEL mykey;"}
{"prompt":"SQL ROLLBACK transaction.","completion":"ROLLBACK;"}
{"prompt":"MongoDB $elemMatch.","completion":"db.collection.find({ arrayField: { $elemMatch: { key: value } } });"}
{"prompt":"Cassandra clustering key.","completion":"CREATE TABLE table (id UUID, cluster_col INT, data TEXT, PRIMARY KEY (id, cluster_col));"}
{"prompt":"SQL CONCAT function.","completion":"SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employees;"}
{"prompt":"PostgreSQL array query.","completion":"SELECT * FROM table WHERE column @> ARRAY['value'];"}
{"prompt":"Neo4j update property.","completion":"MATCH (n:Person {name: 'Alice'}) SET n.age = 31;"}
{"prompt":"SQL DROP DATABASE.","completion":"DROP DATABASE mydb;"}
{"prompt":"MongoDB $exists operator.","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"Redis scan keys.","completion":"SCAN 0 MATCH 'prefix*' COUNT 100;"}
{"prompt":"SQL NULLIF function.","completion":"SELECT NULLIF(column, 'value') FROM table;"}
{"prompt":"Cassandra materialized view.","completion":"CREATE MATERIALIZED VIEW mv AS SELECT * FROM table WHERE column IS NOT NULL PRIMARY KEY (column, id);"}
{"prompt":"SQL cross join.","completion":"SELECT * FROM table1 CROSS JOIN table2;"}
{"prompt":"MongoDB $slice operator.","completion":"db.collection.find({}, { arrayField: { $slice: [0, 5] } });"}
{"prompt":"PostgreSQL upsert.","completion":"INSERT INTO table (id, name) VALUES (1, 'Alice') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name;"}
{"prompt":"Neo4j count relationships.","completion":"MATCH (n)-[r]->() RETURN n, COUNT(r);"}
{"prompt":"SQL CURRENT_TIMESTAMP.","completion":"SELECT CURRENT_TIMESTAMP;"}
{"prompt":"Redis bit operations.","completion":"SETBIT mykey 7 1;"}
{"prompt":"MongoDB $nin operator.","completion":"db.collection.find({ field: { $nin: ['value1', 'value2'] } });"}
{"prompt":"SQL rename table.","completion":"ALTER TABLE old_name RENAME TO new_name;"}
{"prompt":"Cassandra TTL.","completion":"INSERT INTO table (id, data) VALUES (1, 'value') USING TTL 86400;"}
{"prompt":"SQL date difference.","completion":"SELECT DATEDIFF(end_date, start_date) FROM table;"}
{"prompt":"Neo4j delete relationship.","completion":"MATCH (n)-[r:KNOWS]->(m) WHERE n.name='Alice' DELETE r;"}
{"prompt":"SQL DISTINCT ON (PostgreSQL).","completion":"SELECT DISTINCT ON (column) * FROM table;"}
{"prompt":"MongoDB $addToSet.","completion":"db.collection.updateOne({ _id: id }, { $addToSet: { arrayField: 'value' } });"}
{"prompt":"Redis hyperloglog.","completion":"PFADD myhll 'element';"}
{"prompt":"SQL stored procedure.","completion":"CREATE PROCEDURE my_proc AS BEGIN SELECT * FROM table; END;"}
{"prompt":"Cassandra update query.","completion":"UPDATE keyspace.table SET data = 'value' WHERE id = 1;"}
{"prompt":"SQL IS NULL.","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"MongoDB $size operator.","completion":"db.collection.find({ arrayField: { $size: 3 } });"}
{"prompt":"Neo4j query with WHERE.","completion":"MATCH (n:Person) WHERE n.age > 25 RETURN n;"}
{"prompt":"SQL GRANT permissions.","completion":"GRANT SELECT, INSERT ON table TO user;"}
{"prompt":"Redis get hash values.","completion":"HGETALL myhash;"}
{"prompt":"SQL NOW() function.","completion":"SELECT NOW();"}
{"prompt":"MongoDB drop collection.","completion":"db.collection.drop();"}
{"prompt":"Cassandra counter column.","completion":"CREATE TABLE table (id UUID PRIMARY KEY, count counter); UPDATE table SET count = count + 1 WHERE id = uuid;"}
{"prompt":"SQL REVOKE permissions.","completion":"REVOKE SELECT ON table FROM user;"}
{"prompt":"Neo4j create index.","completion":"CREATE INDEX ON :Person(name);"}
{"prompt":"SQL string functions.","completion":"SELECT UPPER(name), LENGTH(name) FROM table;"}
{"prompt":"MongoDB $pull operator.","completion":"db.collection.updateOne({ _id: id }, { $pull: { arrayField: 'value' } });"}
{"prompt":"Redis set operations.","completion":"SADD myset 'member1' 'member2';"}
{"prompt":"SQL WITH clause.","completion":"WITH temp AS (SELECT * FROM table) SELECT * FROM temp WHERE condition;"}
{"prompt":"Cassandra lightweight transaction.","completion":"INSERT INTO table (id, value) VALUES (1, 'data') IF NOT EXISTS;"}
{"prompt":"SQL ROUND function.","completion":"SELECT ROUND(number, 2) FROM table;"}
{"prompt":"MongoDB $or operator.","completion":"db.collection.find({ $or: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"Neo4j optional match.","completion":"OPTIONAL MATCH (n:Person)-[:KNOWS]->(m) RETURN n, m;"}
{"prompt":"SQL REPLACE function.","completion":"SELECT REPLACE(column, 'old', 'new') FROM table;"}
{"prompt":"Redis expire at.","completion":"EXPIREAT mykey 1696118400;"}
{"prompt":"SQL aggregate functions.","completion":"SELECT COUNT(*), SUM(salary), AVG(salary) FROM employees;"}
{"prompt":"MongoDB $and operator.","completion":"db.collection.find({ $and: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"Cassandra collections.","completion":"CREATE TABLE table (id UUID, list_col LIST<TEXT>, PRIMARY KEY (id));"}
{"prompt":"SQL JOIN multiple tables.","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id JOIN table3 ON table2.id = table3.id;"}
{"prompt":"Neo4j distinct query.","completion":"MATCH (n:Person) RETURN DISTINCT n.name;"}
{"prompt":"SQL CAST function.","completion":"SELECT CAST(column AS INTEGER) FROM table;"}
{"prompt":"MongoDB $type operator.","completion":"db.collection.find({ field: { $type: 'string' } });"}
{"prompt":"Redis zrangebyscore.","completion":"ZRANGEBYSCORE myset 0 100;"}
{"prompt":"SQL CREATE USER.","completion":"CREATE USER username WITH PASSWORD 'password';"}
{"prompt":"Cassandra truncate table.","completion":"TRUNCATE keyspace.table;"}
{"prompt":"SQL INTERVAL example.","completion":"SELECT date_column + INTERVAL '1 day' FROM table;"}
{"prompt":"MongoDB $expr operator.","completion":"db.collection.find({ $expr: { $gt: [ '$field1', '$field2' ] } });"}
{"prompt":"Neo4j limit results.","completion":"MATCH (n:Person) RETURN n LIMIT 10;"}
{"prompt":"SQL DROP CONSTRAINT.","completion":"ALTER TABLE table DROP CONSTRAINT constraint_name;"}
{"prompt":"Redis list length.","completion":"LLEN mylist;"}
{"prompt":"SQL EXTRACT function.","completion":"SELECT EXTRACT(YEAR FROM date_column) FROM table;"}
{"prompt":"MongoDB $mod operator.","completion":"db.collection.find({ field: { $mod: [2, 0] } });"}
{"prompt":"Describe ancient Rome.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra static column.","completion":"CREATE TABLE table (id UUID, static_col TEXT STATIC, PRIMARY KEY (id));"}
{"prompt":"SQL PARTITION BY.","completion":"SELECT name, ROW_NUMBER() OVER (PARTITION BY dept ORDER BY salary) FROM employees;"}
{"prompt":"Neo4j aggregate function.","completion":"MATCH (n:Person) RETURN COUNT(n) AS total;"}
{"prompt":"SQL SET operations.","completion":"SELECT column FROM table1 INTERSECT SELECT column FROM table2;"}
{"prompt":"MongoDB $rename operator.","completion":"db.collection.updateOne({ _id: id }, { $rename: { oldField: 'newField' } });"}
{"prompt":"Redis geospatial add.","completion":"GEOADD mygeo 13.361389 38.115556 'location';"}
{"prompt":"SQL temporary table.","completion":"CREATE TEMPORARY TABLE temp_table (id INT, name VARCHAR(50));"}
{"prompt":"Cassandra UDT.","completion":"CREATE TYPE keyspace.mytype (field1 TEXT, field2 INT);"}
{"prompt":"SQL date format.","completion":"SELECT DATE_FORMAT(date_column, '%Y-%m-%d') FROM table;"}
{"prompt":"MongoDB $redact operator.","completion":"db.collection.aggregate([{ $redact: { $cond: { if: { $eq: ['$level', 1] }, then: '$$KEEP', else: '$$PRUNE' } } }]);"}
{"prompt":"Neo4j unwind clause.","completion":"UNWIND [1, 2, 3] AS x RETURN x;"}
{"prompt":"SQL materialized view (PostgreSQL).","completion":"CREATE MATERIALIZED VIEW myview AS SELECT * FROM table WITH DATA;"}
{"prompt":"Redis zrank.","completion":"ZRANK myset 'member';"}
{"prompt":"SQL LAG function.","completion":"SELECT name, LAG(salary) OVER (ORDER BY id) AS prev_salary FROM employees;"}
{"prompt":"MongoDB $sample operator.","completion":"db.collection.aggregate([{ $sample: { size: 5 } }]);"}
{"prompt":"Cassandra index query.","completion":"SELECT * FROM table WHERE indexed_column = 'value';"}
{"prompt":"SQL LEAD function.","completion":"SELECT name, LEAD(salary) OVER (ORDER BY id) AS next_salary FROM employees;"}
{"prompt":"Neo4j collect function.","completion":"MATCH (n:Person) RETURN collect(n.name) AS names;"}
{"prompt":"SQL date add.","completion":"SELECT DATE_ADD(date_column, INTERVAL 1 MONTH) FROM table;"}
{"prompt":"MongoDB $out operator.","completion":"db.collection.aggregate([{ $match: { condition } }, { $out: 'new_collection' }]);"}
{"prompt":"How to workout?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Redis georadius.","completion":"GEORADIUS mygeo 15 37 100 km;"}
{"prompt":"SQL CREATE SCHEMA.","completion":"CREATE SCHEMA myschema;"}
{"prompt":"Cassandra allow filtering.","completion":"SELECT * FROM table WHERE column = 'value' ALLOW FILTERING;"}
{"prompt":"SQL FIRST_VALUE function.","completion":"SELECT FIRST_VALUE(salary) OVER (PARTITION BY dept) FROM employees;"}
{"prompt":"MongoDB $merge operator.","completion":"db.collection.aggregate([{ $match: { condition } }, { $merge: { into: 'target_collection' } }]);"}
{"prompt":"What's a good movie?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j apoc procedure.","completion":"CALL apoc.create.node(['Label'], {key: 'value'});"}
{"prompt":"SQL DROP VIEW.","completion":"DROP VIEW myview;"}
{"prompt":"Redis zrem.","completion":"ZREM myset 'member';"}
{"prompt":"SQL NTILE function.","completion":"SELECT name, NTILE(4) OVER (ORDER BY salary) FROM employees;"}
{"prompt":"MongoDB $geoWithin.","completion":"db.collection.find({ location: { $geoWithin: { $box: [[x1, y1], [x2, y2]] } } });"}
{"prompt":"Cassandra frozen type.","completion":"CREATE TABLE table (id UUID, data FROZEN<mytype>, PRIMARY KEY (id));"}
{"prompt":"SQL RANK function.","completion":"SELECT name, RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"Neo4j exists function.","completion":"MATCH (n:Person) WHERE exists(n.age) RETURN n;"}
{"prompt":"SQL date subtract.","completion":"SELECT DATE_SUB(date_column, INTERVAL 1 DAY) FROM table;"}
{"prompt":"MongoDB $arrayElemAt.","completion":"db.collection.aggregate([{ $project: { item: { $arrayElemAt: ['$arrayField', 0] } } }]);"}
{"prompt":"Redis hdel.","completion":"HDEL myhash field1;"}
{"prompt":"SQL CREATE ROLE.","completion":"CREATE ROLE myrole;"}
{"prompt":"Cassandra repair command.","completion":"nodetool repair keyspace;"}
{"prompt":"SQL LAST_VALUE function.","completion":"SELECT LAST_VALUE(salary) OVER (PARTITION BY dept) FROM employees;"}
{"prompt":"MongoDB $cond operator.","completion":"db.collection.aggregate([{ $project: { result: { $cond: { if: { $gt: ['$field', 0] }, then: 'positive', else: 'non-positive' } } } }]);"}
{"prompt":"How to write a poem?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j foreach clause.","completion":"MATCH (n:Person) FOREACH (x IN [1, 2, 3] | SET n.value = x);"}
{"prompt":"SQL SHOW TABLES.","completion":"SHOW TABLES;"}
{"prompt":"Redis smembers.","completion":"SMEMBERS myset;"}
{"prompt":"SQL DENSE_RANK function.","completion":"SELECT name, DENSE_RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"MongoDB $unwind operator.","completion":"db.collection.aggregate([{ $unwind: '$arrayField' }]);"}
{"prompt":"What's history of Rome?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra nodetool status.","completion":"nodetool status;"}
{"prompt":"SQL CREATE FUNCTION.","completion":"CREATE FUNCTION my_func() RETURNS INT AS $$ SELECT 1; $$ LANGUAGE SQL;"}
{"prompt":"Neo4j remove property.","completion":"MATCH (n:Person {name: 'Alice'}) REMOVE n.age;"}
{"prompt":"SQL date part.","completion":"SELECT EXTRACT(MONTH FROM date_column) FROM table;"}
{"prompt":"MongoDB $concat operator.","completion":"db.collection.aggregate([{ $project: { combined: { $concat: ['$field1', '$field2'] } } }]);"}
{"prompt":"How to invest in crypto?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Redis sinter.","completion":"SINTER set1 set2;"}
{"prompt":"SQL ALTER USER.","completion":"ALTER USER username WITH PASSWORD 'newpassword';"}
{"prompt":"Cassandra tombstone warning.","completion":"Tombstones occur when data is deleted; monitor via nodetool statusgossipto avoid performance issues."}
{"prompt":"SQL PERCENT_RANK.","completion":"SELECT name, PERCENT_RANK() OVER (ORDER BY salary) FROM employees;"}
{"prompt":"MongoDB $bucket operator.","completion":"db.collection.aggregate([{ $bucket: { groupBy: '$field', boundaries: [0, 50, 100], default: 'Other' } }]);"}
{"prompt":"What's a good workout?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j drop index.","completion":"DROP INDEX ON :Person(name);"}
{"prompt":"SQL SHOW DATABASES.","completion":"SHOW DATABASES;"}
{"prompt":"Redis zscore.","completion":"ZSCORE myset 'member';"}
{"prompt":"SQL CUME_DIST function.","completion":"SELECT name, CUME_DIST() OVER (ORDER BY salary) FROM employees;"}
{"prompt":"MongoDB $match operator.","completion":"db.collection.aggregate([{ $match: { field: 'value' } }]);"}
{"prompt":"Cassandra nodetool cleanup.","completion":"nodetool cleanup keyspace table;"}
{"prompt":"SQL CREATE EVENT.","completion":"CREATE EVENT my_event ON SCHEDULE EVERY 1 DAY DO INSERT INTO table VALUES (NOW());"}
{"prompt":"Neo4j apoc merge.","completion":"CALL apoc.merge.node(['Person'], {name: 'Alice'}, {age: 30});"}
{"prompt":"SQL date conversion.","completion":"SELECT TO_DATE('2023-01-01', 'YYYY-MM-DD') FROM table;"}
{"prompt":"MongoDB $group operator.","completion":"db.collection.aggregate([{ $group: { _id: '$field', count: { $sum: 1 } } }]);"}
{"prompt":"Redis sunion.","completion":"SUNION set1 set2;"}
{"prompt":"SQL DROP FUNCTION.","completion":"DROP FUNCTION my_func;"}
{"prompt":"Cassandra nodetool flush.","completion":"nodetool flush keyspace table;"}
{"prompt":"SQL TO_CHAR function.","completion":"SELECT TO_CHAR(date_column, 'YYYY-MM-DD') FROM table;"}
{"prompt":"MongoDB $sort operator.","completion":"db.collection.aggregate([{ $sort: { field: 1 } }]);"}
{"prompt":"Neo4j apoc path.","completion":"CALL apoc.path.expand(n, 'REL>', '', 1, 3) YIELD path RETURN path;"}
{"prompt":"SQL DROP SCHEMA.","completion":"DROP SCHEMA myschema;"}
{"prompt":"Redis spop.","completion":"SPOP myset;"}
{"prompt":"SQL date comparison.","completion":"SELECT * FROM table WHERE date_column > '2023-01-01';"}
{"prompt":"MongoDB $limit operator.","completion":"db.collection.aggregate([{ $limit: 10 }]);"}
{"prompt":"Cassandra nodetool rebuild.","completion":"nodetool rebuild;"}
{"prompt":"SQL CREATE PARTITION.","completion":"CREATE TABLE table (id INT, data VARCHAR(50)) PARTITION BY RANGE (id);"}
{"prompt":"Neo4j apoc export.","completion":"CALL apoc.export.csv.all('file.csv', {});"}
{"prompt":"SQL date to string.","completion":"SELECT CAST(date_column AS VARCHAR) FROM table;"}
{"prompt":"MongoDB $skip operator.","completion":"db.collection.aggregate([{ $skip: 5 }]);"}
{"prompt":"Redis sdiff.","completion":"SDIFF set1 set2;"}
{"prompt":"SQL SHOW INDEXES.","completion":"SHOW INDEXES FROM table;"}
{"prompt":"Cassandra nodetool decommission.","completion":"nodetool decommission;"}
{"prompt":"SQL date truncate.","completion":"SELECT TRUNC(date_column, 'MONTH') FROM table;"}
{"prompt":"MongoDB $project operator.","completion":"db.collection.aggregate([{ $project: { field1: 1, _id: 0 } }]);"}
{"prompt":"Neo4j apoc import.","completion":"CALL apoc.import.csv([{file: 'nodes.csv', labels: ['Person']}], [{file: 'rels.csv', type: 'KNOWS'}], {});"}
{"prompt":"SQL DROP EVENT.","completion":"DROP EVENT my_event;"}
{"prompt":"Redis zrange.","completion":"ZRANGE myset 0 -1;"}
{"prompt":"SQL date extract.","completion":"SELECT EXTRACT(DAY FROM date_column) FROM table;"}
{"prompt":"MongoDB $count operator.","completion":"db.collection.aggregate([{ $count: 'total' }]);"}
{"prompt":"How to learn singing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra nodetool snapshot.","completion":"nodetool snapshot keyspace;"}
{"prompt":"SQL SHOW GRANTS.","completion":"SHOW GRANTS FOR user;"}
{"prompt":"Neo4j apoc uuid.","completion":"CALL apoc.create.uuid() YIELD uuid RETURN uuid;"}
{"prompt":"SQL date interval.","completion":"SELECT date_column + INTERVAL '1 year' FROM table;"}
{"prompt":"MongoDB $addFields.","completion":"db.collection.aggregate([{ $addFields: { newField: '$existingField' } }]);"}
{"prompt":"Redis zcard.","completion":"ZCARD myset;"}
{"prompt":"SQL DROP ROLE.","completion":"DROP ROLE myrole;"}
{"prompt":"Cassandra nodetool clearsnapshot.","completion":"nodetool clearsnapshot snapshot_name;"}
{"prompt":"SQL date to number.","completion":"SELECT TO_NUMBER(TO_CHAR(date_column, 'YYYYMMDD')) FROM table;"}
{"prompt":"MongoDB $facet operator.","completion":"db.collection.aggregate([{ $facet: { category1: [{ $match: { field: 'value' } }], category2: [{ $match: { field: 'other' } }] } }]);"}
{"prompt":"Neo4j apoc trigger.","completion":"CALL apoc.trigger.add('myTrigger', 'MATCH (n) SET n.updated = timestamp()', {});"}
{"prompt":"SQL SHOW COLUMNS.","completion":"SHOW COLUMNS FROM table;"}
{"prompt":"Redis zcount.","completion":"ZCOUNT myset 0 100;"}
{"prompt":"SQL date overlap.","completion":"SELECT * FROM table WHERE date_column BETWEEN '2023-01-01' AND '2023-12-31';"}
{"prompt":"MongoDB $replaceRoot.","completion":"db.collection.aggregate([{ $replaceRoot: { newRoot: '$subdocument' } }]);"}
{"prompt":"Cassandra nodetool upgradesstables.","completion":"nodetool upgradesstables keyspace table;"}
{"prompt":"SQL DROP TRIGGER.","completion":"DROP TRIGGER my_trigger ON table;"}
{"prompt":"Neo4j apoc date parse.","completion":"CALL apoc.date.parse('2023-01-01', 'ms', 'yyyy-MM-dd') YIELD value RETURN value;"}
{"prompt":"SQL date timezone.","completion":"SELECT date_column AT TIME ZONE 'UTC' FROM table;"}
{"prompt":"MongoDB $setUnion.","completion":"db.collection.aggregate([{ $project: { result: { $setUnion: ['$array1', '$array2'] } } }]);"}
{"prompt":"Redis zrangebylex.","completion":"ZRANGEBYLEX myset [a [z;"}
{"prompt":"SQL SHOW CREATE TABLE.","completion":"SHOW CREATE TABLE table;"}
{"prompt":"Cassandra nodetool compactionstats.","completion":"nodetool compactionstats;"}
{"prompt":"SQL date to epoch.","completion":"SELECT EXTRACT(EPOCH FROM date_column) FROM table;"}
{"prompt":"MongoDB $setIntersection.","completion":"db.collection.aggregate([{ $project: { result: { $setIntersection: ['$array1', '$array2'] } } }]);"}
{"prompt":"Neo4j apoc text functions.","completion":"CALL apoc.text.upper('text') YIELD value RETURN value;"}
{"prompt":"SQL DROP USER.","completion":"DROP USER username;"}
{"prompt":"Redis zremrangebyrank.","completion":"ZREMRANGEBYRANK myset 0 1;"}
{"prompt":"SQL date overlap check.","completion":"SELECT * FROM table WHERE date_column && DATERANGE('2023-01-01', '2023-12-31');"}
{"prompt":"MongoDB $setDifference.","completion":"db.collection.aggregate([{ $project: { result: { $setDifference: ['$array1', '$array2'] } } }]);"}
{"prompt":"Cassandra nodetool ring.","completion":"nodetool ring keyspace;"}
{"prompt":"SQL SHOW VARIABLES.","completion":"SHOW VARIABLES LIKE 'variable_name';"}
{"prompt":"Neo4j apoc math functions.","completion":"CALL apoc.math.sin(1.57) YIELD value RETURN value;"}
{"prompt":"SQL date string parse.","completion":"SELECT TO_DATE('01-01-2023', 'DD-MM-YYYY') FROM table;"}
{"prompt":"MongoDB $graphLookup.","completion":"db.collection.aggregate([{ $graphLookup: { from: 'collection', startWith: '$field', connectFromField: 'field', connectToField: 'field', as: 'result' } }]);"}
{"prompt":"Redis zremrangebyscore.","completion":"ZREMRANGEBYSCORE myset 0 100;"}
{"prompt":"SQL SHOW TRIGGERS.","completion":"SHOW TRIGGERS FROM database;"}
{"prompt":"Cassandra nodetool describecluster.","completion":"nodetool describecluster;"}
{"prompt":"SQL date now.","completion":"SELECT NOW() AS current_time;"}
{"prompt":"MongoDB $switch operator.","completion":"db.collection.aggregate([{ $project: { result: { $switch: { branches: [{ case: { $eq: ['$field', 'value'] }, then: 'match' }], default: 'no match' } } } }]);"}
{"prompt":"Neo4j apoc load json.","completion":"CALL apoc.load.json('file://data.json') YIELD value RETURN value;"}
{"prompt":"SQL SHOW EVENTS.","completion":"SHOW EVENTS FROM database;"}
{"prompt":"Redis zrangebyrank.","completion":"ZRANGE myset 0 1 WITHSCORES;"}
{"prompt":"SQL date to timestamp.","completion":"SELECT TO_TIMESTAMP('2023-01-01 12:00:00', 'YYYY-MM-DD HH24:MI:SS') FROM table;"}
{"prompt":"MongoDB $let operator.","completion":"db.collection.aggregate([{ $project: { result: { $let: { vars: { var1: '$field' }, in: '$$var1' } } } }]);"}
{"prompt":"Cassandra nodetool tpstats.","completion":"nodetool tpstats;"}
{"prompt":"SQL SHOW PRIVILEGES.","completion":"SHOW PRIVILEGES;"}
{"prompt":"Neo4j apoc convert.","completion":"CALL apoc.convert.toJson({key: 'value'}) YIELD value RETURN value;"}
{"prompt":"SQL date week.","completion":"SELECT EXTRACT(WEEK FROM date_column) FROM table;"}
{"prompt":"MongoDB $geoIntersects.","completion":"db.collection.find({ location: { $geoIntersects: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"How to learn robotics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL SHOW PROCESSLIST.","completion":"SHOW PROCESSLIST;"}
{"prompt":"Cassandra nodetool netstats.","completion":"nodetool netstats;"}
{"prompt":"SQL date year.","completion":"SELECT EXTRACT(YEAR FROM date_column) FROM table;"}
{"prompt":"MongoDB $arrayToObject.","completion":"db.collection.aggregate([{ $project: { result: { $arrayToObject: [['key', 'value']] } } }]);"}
{"prompt":"Neo4j apoc spatial.","completion":"CALL apoc.spatial.geocodeOnce('address') YIELD location RETURN location;"}
{"prompt":"SQL SHOW STATUS.","completion":"SHOW STATUS LIKE 'variable_name';"}
{"prompt":"Redis zunionstore.","completion":"ZUNIONSTORE destset 2 set1 set2;"}
{"prompt":"SQL date month name.","completion":"SELECT TO_CHAR(date_column, 'Month') FROM table;"}
{"prompt":"MongoDB $objectToArray.","completion":"db.collection.aggregate([{ $project: { result: { $objectToArray: '$objectField' } } }]);"}
{"prompt":"Cassandra nodetool version.","completion":"nodetool version;"}
{"prompt":"SQL SHOW WARNINGS.","completion":"SHOW WARNINGS;"}
{"prompt":"Neo4j apoc merge relationship.","completion":"CALL apoc.merge.relationship(n, 'KNOWS', {key: 'value'}, m);"}
{"prompt":"SQL date day name.","completion":"SELECT TO_CHAR(date_column, 'Day') FROM table;"}
{"prompt":"MongoDB $zip operator.","completion":"db.collection.aggregate([{ $project: { result: { $zip: { inputs: ['$array1', '$array2'] } } } }]);"}
{"prompt":"Redis zinterstore.","completion":"ZINTERSTORE destset 2 set1 set2;"}
{"prompt":"SQL SHOW ENGINES.","completion":"SHOW ENGINES;"}
{"prompt":"Cassandra nodetool info.","completion":"nodetool info;"}
{"prompt":"SQL date to day.","completion":"SELECT EXTRACT(DAY FROM date_column) FROM table;"}
{"prompt":"MongoDB $in operator.","completion":"db.collection.find({ field: { $in: ['value1', 'value2'] } });"}
{"prompt":"How to learn psychology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Neo4j apoc date format.","completion":"CALL apoc.date.format(timestamp(), 'ms', 'yyyy-MM-dd') YIELD value RETURN value;"}
{"prompt":"SQL SHOW PLUGINS.","completion":"SHOW PLUGINS;"}
{"prompt":"Redis zrevrange.","completion":"ZREVRANGE myset 0 -1 WITHSCORES;"}
{"prompt":"SQL date to hour.","completion":"SELECT EXTRACT(HOUR FROM date_column) FROM table;"}
{"prompt":"MongoDB $filter operator.","completion":"db.collection.aggregate([{ $project: { items: { $filter: { input: '$array', as: 'item', cond: { $gt: ['$$item', 0] } } } } }]);"}
{"prompt":"Cassandra nodetool proxyhistograms.","completion":"nodetool proxyhistograms;"}
{"prompt":"SQL SHOW BINARY LOGS.","completion":"SHOW BINARY LOGS;"}
{"prompt":"Neo4j apoc create relationship.","completion":"CALL apoc.create.relationship(n, 'KNOWS', {prop: 'value'}, m) YIELD rel RETURN rel;"}
{"prompt":"SQL date to minute.","completion":"SELECT EXTRACT(MINUTE FROM date_column) FROM table;"}
{"prompt":"MongoDB $sortByCount.","completion":"db.collection.aggregate([{ $sortByCount: '$field' }]);"}
{"prompt":"How to learn economics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Redis zrevrank.","completion":"ZREVRANK myset 'member';"}
{"prompt":"SQL SHOW CHARACTER SET.","completion":"SHOW CHARACTER SET;"}
{"prompt":"Cassandra nodetool gossipinfo.","completion":"nodetool gossipinfo;"}
{"prompt":"SQL date to second.","completion":"SELECT EXTRACT(SECOND FROM date_column) FROM table;"}
{"prompt":"MongoDB $indexStats.","completion":"db.collection.aggregate([{ $indexStats: {} }]);"}
{"prompt":"Redis info.","completion":"INFO;"}
{"prompt":"Redis client list.","completion":"CLIENT LIST;"}
{"prompt":"SQL SHOW TABLE STATUS.","completion":"SHOW TABLE STATUS FROM database;"}
{"prompt":"Neo4j apoc create node.","completion":"CALL apoc.create.node(['Label'], {key: 'value'}) YIELD node RETURN node;"}
{"prompt":"SQL date to week.","completion":"SELECT EXTRACT(WEEK FROM date_column) FROM table;"}
{"prompt":"MongoDB $geoNear stage.","completion":"db.collection.aggregate([{ $geoNear: { near: { type: 'Point', coordinates: [lng, lat] }, distanceField: 'dist.calculated', spherical: true } }]);"}
{"prompt":"How to learn history?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra nodetool compactionhistory.","completion":"nodetool compactionhistory;"}
{"prompt":"SQL SHOW CREATE VIEW.","completion":"SHOW CREATE VIEW myview;"}
{"prompt":"Redis bgrewriteaof.","completion":"BGREWRITEAOF;"}
{"prompt":"SQL date to month.","completion":"SELECT EXTRACT(MONTH FROM date_column) FROM table;"}
{"prompt":"MongoDB $geoNear operator.","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] }, $maxDistance: 1000 } } });"}
{"prompt":"Neo4j apoc load csv.","completion":"CALL apoc.load.csv('file://data.csv') YIELD map RETURN map;"}
{"prompt":"SQL SHOW INDEXES FROM table.","completion":"SHOW INDEXES FROM table;"}
{"prompt":"Redis bgsave.","completion":"BGSAVE;"}
{"prompt":"SQL date to year.","completion":"SELECT EXTRACT(YEAR FROM date_column) FROM table;"}
{"prompt":"MongoDB $geoWithin operator.","completion":"db.collection.find({ location: { $geoWithin: { $polygon: [[x1, y1], [x2, y2], [x3, y3], [x1, y1]] } } });"}
{"prompt":"How to learn literature?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Cassandra nodetool cfstats.","completion":"nodetool cfstats;"}
{"prompt":"How to create a table in SQL for storing customer data?","completion":"CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(100), email VARCHAR(100), join_date DATE);"}
{"prompt":"Explain the difference between INNER JOIN and LEFT JOIN in SQL.","completion":"INNER JOIN returns only matching rows from both tables, while LEFT JOIN returns all rows from the left table and matching rows from the right table, with NULLs for non-matches."}
{"prompt":"How to insert a key-value pair in Redis?","completion":"SET user:123 name 'John Doe';"}
{"prompt":"What is a primary key in SQL?","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicate or NULL values."}
{"prompt":"Write a SQL query to update employee salary by 10% for a specific department.","completion":"UPDATE employees SET salary = salary * 1.10 WHERE department_id = 5;"}
{"prompt":"How to delete documents in MongoDB where status is inactive?","completion":"db.collection.deleteMany({ status: 'inactive' });"}
{"prompt":"Explain sharding in NoSQL databases.","completion":"Sharding distributes data across multiple servers based on a shard key to improve scalability and performance in NoSQL databases."}
{"prompt":"Write a Neo4j query to find all friends of a user.","completion":"MATCH (user:Person {name: 'Alice'})-[:FRIEND]->(friend) RETURN friend;"}
{"prompt":"How to create an index in SQL?","completion":"CREATE INDEX idx_name ON employees (last_name);"}
{"prompt":"What's the difference between SQL and NoSQL databases?","completion":"SQL databases are relational, use structured schemas and SQL for querying, while NoSQL databases are non-relational, support flexible schemas, and handle unstructured data."}
{"prompt":"Write a SQL query to group employees by department and count them.","completion":"SELECT department_id, COUNT(*) as emp_count FROM employees GROUP BY department_id;"}
{"prompt":"Explain ACID properties in SQL databases.","completion":"ACID stands for Atomicity, Consistency, Isolation, Durability, ensuring reliable transactions in SQL databases."}
{"prompt":"Write a Redis command to add an item to a list.","completion":"LPUSH mylist 'item';"}
{"prompt":"How to use a subquery in SQL?","completion":"SELECT * FROM employees WHERE department_id IN (SELECT id FROM departments WHERE location = 'NY');"}
{"prompt":"Write a Cassandra query to insert a record.","completion":"INSERT INTO keyspace.users (id, name, age) VALUES (1, 'Alice', 25);"}
{"prompt":"What is normalization in SQL?","completion":"Normalization organizes data to reduce redundancy and improve integrity, using forms like 1NF, 2NF, 3NF."}
{"prompt":"Write a MongoDB query to update multiple documents.","completion":"db.collection.updateMany({ status: 'pending' }, { $set: { status: 'completed' } });"}
{"prompt":"How to set an expiration time in Redis?","completion":"SET key value EX 3600;"}
{"prompt":"Explain the CAP theorem for NoSQL databases.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance at a time."}
{"prompt":"Write a SQL query to join two tables.","completion":"SELECT e.name, d.department_name FROM employees e INNER JOIN departments d ON e.department_id = d.id;"}
{"prompt":"How to create a secondary index in Cassandra?","completion":"CREATE INDEX ON keyspace.users (email);"}
{"prompt":"Write a MongoDB query to sort documents by date.","completion":"db.collection.find().sort({ date: -1 });"}
{"prompt":"What are SQL constraints?","completion":"SQL constraints include PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL, and CHECK to enforce data rules."}
{"prompt":"Write a Redis command for a sorted set.","completion":"ZADD leaderboard 100 'player1';"}
{"prompt":"How to use a window function in PostgreSQL?","completion":"SELECT name, salary, RANK() OVER (PARTITION BY department_id ORDER BY salary DESC) FROM employees;"}
{"prompt":"Write a SQL query to delete duplicate rows.","completion":"DELETE FROM employees WHERE id NOT IN (SELECT MIN(id) FROM employees GROUP BY email);"}
{"prompt":"How to perform a geospatial query in MongoDB?","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [ -73.9, 40.7 ] } } } });"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data in NoSQL to optimize read performance, reducing the need for joins."}
{"prompt":"Write a Neo4j query to find the shortest path.","completion":"MATCH p=shortestPath((a:Person {name: 'Alice'})-[*]-(b:Person {name: 'Bob'})) RETURN p;"}
{"prompt":"How to use SQL CASE statement?","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_category FROM employees;"}
{"prompt":"Write a Redis pub/sub command.","completion":"PUBLISH channel 'message';"}
{"prompt":"How to create a view in SQL?","completion":"CREATE VIEW active_employees AS SELECT * FROM employees WHERE status = 'active';"}
{"prompt":"Write a MongoDB aggregation pipeline.","completion":"db.collection.aggregate([{ $match: { age: { $gt: 25 } } }, { $group: { _id: '$city', count: { $sum: 1 } } }]);"}
{"prompt":"Explain SQL triggers.","completion":"Triggers are special procedures executed automatically on events like INSERT, UPDATE, or DELETE. Example: CREATE TRIGGER log_update AFTER UPDATE ON employees FOR EACH ROW EXECUTE PROCEDURE log_change();"}
{"prompt":"How to batch operations in Cassandra?","completion":"BEGIN BATCH INSERT INTO users (id, name) VALUES (1, 'Alice'); UPDATE users SET age = 26 WHERE id = 1; APPLY BATCH;"}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT department, month, sales FROM sales_data) PIVOT (SUM(sales) FOR month IN ('Jan', 'Feb', 'Mar'));"}
{"prompt":"How to use transactions in Redis?","completion":"MULTI; SET key1 value1; SET key2 value2; EXEC;"}
{"prompt":"Write a SQL query to find records with NULL values.","completion":"SELECT * FROM employees WHERE department_id IS NULL;"}
{"prompt":"Explain MongoDB replica sets.","completion":"Replica sets are groups of MongoDB instances maintaining the same data for redundancy and high availability."}
{"prompt":"How to use SQL LIKE operator?","completion":"SELECT * FROM employees WHERE name LIKE '%Smith%';"}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH (n:Person {name: 'Alice'})-[r:FRIEND]->(m:Person {name: 'Bob'}) DELETE r;"}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze execution plans with EXPLAIN, and limit rows with WHERE or LIMIT."}
{"prompt":"Write a MongoDB query to count documents.","completion":"db.collection.countDocuments({ status: 'active' });"}
{"prompt":"Explain foreign keys in SQL.","completion":"A foreign key links a column in one table to the primary key of another, enforcing referential integrity."}
{"prompt":"How to use Redis hashes?","completion":"HMSET user:123 name 'Alice' age 25;"}
{"prompt":"Write a SQL query for full outer join.","completion":"SELECT * FROM employees FULL OUTER JOIN departments ON employees.department_id = departments.id;"}
{"prompt":"How to create a change stream in MongoDB?","completion":"const changeStream = db.collection.watch(); for await (const change of changeStream) { console.log(change); }"}
{"prompt":"What is eventual consistency in NoSQL?","completion":"Eventual consistency means that updates propagate to all nodes over time, prioritizing availability over immediate consistency."}
{"prompt":"Write a PostgreSQL query for JSONB data.","completion":"SELECT * FROM employees WHERE data->>'role' = 'manager';"}
{"prompt":"Write a Cassandra query to update a record.","completion":"UPDATE keyspace.users SET age = 30 WHERE id = 1;"}
{"prompt":"Explain SQL UNION operator.","completion":"UNION combines results of two SELECT queries, removing duplicates. Example: SELECT name FROM table1 UNION SELECT name FROM table2;"}
{"prompt":"How to use Redis for caching?","completion":"SET cache:key value EX 3600; GET cache:key;"}
{"prompt":"Write a SQL query with HAVING clause.","completion":"SELECT department_id, COUNT(*) FROM employees GROUP BY department_id HAVING COUNT(*) > 10;"}
{"prompt":"How to merge nodes in Neo4j?","completion":"MERGE (n:Person {name: 'Alice'}) ON CREATE SET n.age = 25;"}
{"prompt":"Explain indexing in MongoDB.","completion":"Indexes improve query performance. Example: db.collection.createIndex({ name: 1 });"}
{"prompt":"How to use SQL date functions?","completion":"SELECT CURRENT_DATE; SELECT DATEADD(day, 1, join_date) FROM employees;"}
{"prompt":"Write a Redis command to increment a value.","completion":"INCR counter;"}
{"prompt":"Explain NoSQL document stores.","completion":"Document stores like MongoDB store data as JSON-like documents, allowing flexible schemas and nested data."}
{"prompt":"Write a SQL query to find duplicate emails.","completion":"SELECT email, COUNT(*) FROM employees GROUP BY email HAVING COUNT(*) > 1;"}
{"prompt":"How to perform a full-text search in PostgreSQL?","completion":"SELECT * FROM documents WHERE to_tsvector(content) @@ to_tsquery('keyword');"}
{"prompt":"How to create a materialized view in SQL?","completion":"CREATE MATERIALIZED VIEW mat_view AS SELECT * FROM employees WHERE active = true WITH DATA;"}
{"prompt":"Explain Redis streams.","completion":"Streams store time-series data. Example: XADD mystream * field value;"}
{"prompt":"Write a SQL query to calculate average salary by department.","completion":"SELECT department_id, AVG(salary) FROM employees GROUP BY department_id;"}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.orders.aggregate([{ $lookup: { from: 'customers', localField: 'customer_id', foreignField: '_id', as: 'customer' } }]);"}
{"prompt":"What are SQL sequences?","completion":"Sequences generate unique numbers, often for IDs. Example: CREATE SEQUENCE emp_id_seq;"}
{"prompt":"Write a Neo4j query to find nodes with multiple relationships.","completion":"MATCH (n:Person)-[r:FRIEND]->() RETURN n, count(r) HAVING count(r) > 1;"}
{"prompt":"How to handle NULLs in SQL joins?","completion":"Use LEFT or RIGHT JOIN to include NULLs from one table, or COALESCE to replace NULLs with a default value."}
{"prompt":"Explain MongoDB sharding.","completion":"Sharding splits data across servers using a shard key to distribute queries and storage."}
{"prompt":"Write a SQL query to find employees hired in the last year.","completion":"SELECT * FROM employees WHERE hire_date >= DATEADD(year, -1, CURRENT_DATE);"}
{"prompt":"What is a composite key in SQL?","completion":"A composite key uses multiple columns to uniquely identify a record, e.g., PRIMARY KEY (col1, col2)."}
{"prompt":"How to use SQL EXISTS operator?","completion":"SELECT * FROM employees WHERE EXISTS (SELECT 1 FROM departments WHERE id = employees.department_id);"}
{"prompt":"Write a Cassandra query to select data with a condition.","completion":"SELECT * FROM keyspace.users WHERE age > 25 ALLOW FILTERING;"}
{"prompt":"Explain SQL cursors.","completion":"Cursors allow row-by-row processing of query results. Example: DECLARE cur CURSOR FOR SELECT * FROM employees;"}
{"prompt":"Write a Neo4j query to create a relationship.","completion":"MATCH (a:Person {name: 'Alice'}), (b:Person {name: 'Bob'}) CREATE (a)-[:FRIEND]->(b);"}
{"prompt":"How to use SQL BETWEEN operator?","completion":"SELECT * FROM employees WHERE salary BETWEEN 40000 AND 60000;"}
{"prompt":"Explain Redis persistence.","completion":"Redis supports RDB snapshots and AOF logs to save data to disk for durability."}
{"prompt":"Write a SQL query to drop an index.","completion":"DROP INDEX idx_name ON employees;"}
{"prompt":"How to use $unset in MongoDB?","completion":"db.collection.updateMany({}, { $unset: { field: '' } });"}
{"prompt":"What are SQL stored procedures?","completion":"Stored procedures are reusable SQL code blocks stored in the database. Example: CREATE PROCEDURE sp_name AS SELECT * FROM employees;"}
{"prompt":"How to optimize a MongoDB query?","completion":"Use indexes, project only needed fields, and use $match early in aggregation pipelines."}
{"prompt":"Write a SQL query to find employees with no department.","completion":"SELECT * FROM employees WHERE department_id IS NULL;"}
{"prompt":"Explain Neo4j indexes.","completion":"Indexes speed up queries on node properties. Example: CREATE INDEX ON :Person(name);"}
{"prompt":"How to use SQL IN operator?","completion":"SELECT * FROM employees WHERE department_id IN (1, 2, 3);"}
{"prompt":"Write a Cassandra query to create a table.","completion":"CREATE TABLE keyspace.products (id UUID PRIMARY KEY, name TEXT, price DECIMAL);"}
{"prompt":"Recommend a book on history.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain relativity theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe climate change.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain evolution.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Recommend travel destinations.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe human anatomy.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's a balanced diet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to create a website?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain photosynthesis.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to budget money?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain thermodynamics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's interior design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's big data?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start investing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play piano?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's nutrition science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best camera?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do Pilates?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain supernovas.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's UI/UX design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to save for retirement?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Greece?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play violin?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's food science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best laptop?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do Tai Chi?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's neural networks?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to organize a party?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain pulsars.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's product design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Japan?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play drums?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's exercise science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn JavaScript?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best TV?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do Zumba?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's computer vision?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a trip?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain quasars.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's industrial design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a podcast?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of China?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain information theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's sports science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn C++?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best headphone?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do kickboxing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's natural language processing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a conference?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain neutron stars.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's architecture design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a YouTube channel?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of India?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play bass guitar?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain control theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's kinesiology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Ruby?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best speaker?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do CrossFit?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's reinforcement learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a charity event?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain cosmic rays.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's landscape design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a vlog?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Brazil?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play saxophone?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain systems theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's biomechanics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Go?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best smartwatch?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do ballet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's unsupervised learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a festival?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start streaming?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Russia?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play trumpet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain complexity theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's ergonomics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn PHP?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best drone?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do gymnastics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's supervised learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a reunion?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain gravitational waves.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's sustainable design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a newsletter?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Australia?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play flute?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain decision theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's physiotherapy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Swift?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best VR headset?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do karate?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's transfer learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a corporate event?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain exoplanets.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's automotive design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a TikTok?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Canada?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play clarinet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain queueing theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's occupational therapy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Kotlin?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best router?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do judo?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's generative AI?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a team-building event?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain wormholes.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's furniture design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a Twitch channel?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Mexico?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play cello?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain graph theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's speech therapy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Rust?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best monitor?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do taekwondo?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's federated learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a product launch?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain the big bang theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's textile design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start an Instagram account?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of France?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play oboe?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain set theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's chiropractic care?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Scala?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best keyboard?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do boxing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's Bayesian inference?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a marketing campaign?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain cosmic inflation.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's jewelry design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a Patreon?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Germany?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play trombone?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain number theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's physical therapy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn TypeScript?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best mouse?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do wrestling?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's ensemble learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a fundraiser?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain the multiverse theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's ceramic design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Italy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play harp?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain probability theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's occupational health?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Dart?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best webcam?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do fencing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's deep reinforcement learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a concert?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain string cosmology.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's packaging design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a Substack?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Spain?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play viola?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain combinatorics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's sports medicine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Elixir?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best printer?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do archery?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's active learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a workshop?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain loop quantum gravity.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's toy design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a LinkedIn profile?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of the UK?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play banjo?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain algebraic topology.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's rehabilitation science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Haskell?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best projector?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do figure skating?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's meta-learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a retreat?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain M-theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's footwear design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a Medium blog?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of South Africa?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play mandolin?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain differential geometry.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Clojure?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best tablet?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do synchronized swimming?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's adversarial learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a seminar?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain holographic principle.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's lighting design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a Facebook page?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Argentina?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play ukulele?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain functional analysis.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Julia?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best e-reader?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do pole vaulting?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's self-supervised learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a hackathon?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's stage design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a Twitter account?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Nigeria?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play accordion?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain category theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's health informatics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn Lua?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best smart home device?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do high jump?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's curriculum learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a trade show?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain quantum superposition.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's costume design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a Pinterest account?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Turkey?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play bagpipes?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain measure theory.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's medical imaging?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn R?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best fitness tracker?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do long jump?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's domain adaptation?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a networking event?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain quantum decoherence.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's set design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a Snapchat account?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of South Korea?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play harmonica?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain algebraic geometry.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn MATLAB?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best action camera?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do shot put?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's continual learning?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to plan a product demo?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain quantum tunneling.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's sound design?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to start a Reddit account?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the history of Thailand?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to play dulcimer?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain dynamical systems.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's clinical research?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn SQL in a week?","completion":"To learn SQL in a week, focus on basics (SELECT, INSERT, UPDATE, DELETE), practice with sample databases like SQLite, study joins and aggregations, and use resources like SQLZoo or Mode Analytics tutorials."}
{"prompt":"Write a MongoDB query to find documents with multiple conditions.","completion":"db.collection.find({ age: { $gt: 25 }, status: 'active' });"}
{"prompt":"How to use SQL ORDER BY clause?","completion":"SELECT * FROM employees ORDER BY salary DESC, name ASC;"}
{"prompt":"Explain Redis clustering.","completion":"Redis clustering distributes data across multiple nodes using hash slots, enabling scalability and high availability."}
{"prompt":"Write a Neo4j query to find all nodes connected by a specific relationship.","completion":"MATCH (n)-[:KNOWS]->(m) RETURN n, m;"}
{"prompt":"How to create a composite index in SQL?","completion":"CREATE INDEX idx_composite ON employees (department_id, hire_date);"}
{"prompt":"Write a Cassandra query to delete a record.","completion":"DELETE FROM keyspace.users WHERE id = 1;"}
{"prompt":"Explain SQL CHECK constraint.","completion":"CHECK ensures a condition is met for column values. Example: CREATE TABLE employees (salary INT CHECK (salary > 0));"}
{"prompt":"Write a MongoDB query to update a single document.","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { name: 'Alice' } });"}
{"prompt":"How to use SQL GROUP_CONCAT in MySQL?","completion":"SELECT department_id, GROUP_CONCAT(name) FROM employees GROUP BY department_id;"}
{"prompt":"Write a Redis command to get hash values.","completion":"HGETALL user:123;"}
{"prompt":"Explain NoSQL wide-column stores.","completion":"Wide-column stores like Cassandra store data in columns, optimized for large-scale, query-driven datasets."}
{"prompt":"Write a SQL query to find employees hired on a specific date.","completion":"SELECT * FROM employees WHERE hire_date = '2023-01-01';"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $push: { items: 'new_item' } });"}
{"prompt":"What is a SQL transaction?","completion":"A transaction is a sequence of SQL operations treated as a single unit, ensuring ACID properties. Example: BEGIN TRANSACTION; INSERT...; COMMIT;"}
{"prompt":"Write a Neo4j query to count relationships.","completion":"MATCH ()-[r:KNOWS]->() RETURN count(r);"}
{"prompt":"How to use SQL COALESCE function?","completion":"SELECT COALESCE(NULL, 'default_value') AS result FROM employees;"}
{"prompt":"Write a Redis command to add to a sorted set.","completion":"ZADD myset 10 'item1';"}
{"prompt":"Explain MongoDB capped collections.","completion":"Capped collections are fixed-size, circular collections that overwrite old data when full, ideal for logs."}
{"prompt":"Write a SQL query to find employees with salary in a range.","completion":"SELECT * FROM employees WHERE salary BETWEEN 30000 AND 50000;"}
{"prompt":"How to use Cassandra materialized views?","completion":"CREATE MATERIALIZED VIEW keyspace.view AS SELECT id, name FROM users WHERE age IS NOT NULL PRIMARY KEY (age, id);"}
{"prompt":"Write a MongoDB query to find documents by regex.","completion":"db.collection.find({ name: { $regex: '^A', $options: 'i' } });"}
{"prompt":"Explain SQL temporary tables.","completion":"Temporary tables exist for a session or transaction. Example: CREATE TEMPORARY TABLE temp_employees AS SELECT * FROM employees;"}
{"prompt":"Write a Redis command to pop from a list.","completion":"LPOP mylist;"}
{"prompt":"How to use SQL WITH clause (CTE)?","completion":"WITH dept_avg AS (SELECT department_id, AVG(salary) AS avg_salary FROM employees GROUP BY department_id) SELECT * FROM dept_avg WHERE avg_salary > 50000;"}
{"prompt":"Write a Neo4j query to update a node property.","completion":"MATCH (n:Person {name: 'Alice'}) SET n.age = 26;"}
{"prompt":"Explain MongoDB transactions.","completion":"MongoDB supports multi-document transactions in replica sets or sharded clusters, ensuring ACID compliance."}
{"prompt":"Write a SQL query to find employees by department name.","completion":"SELECT e.* FROM employees e JOIN departments d ON e.department_id = d.id WHERE d.name = 'Sales';"}
{"prompt":"How to use Redis sets?","completion":"SADD myset 'item1' 'item2'; SMEMBERS myset;"}
{"prompt":"Write a Cassandra query to select distinct values.","completion":"SELECT DISTINCT name FROM keyspace.users;"}
{"prompt":"Explain SQL correlated subqueries.","completion":"A correlated subquery references the outer query. Example: SELECT * FROM employees e WHERE EXISTS (SELECT 1 FROM departments d WHERE d.id = e.department_id);"}
{"prompt":"Write a MongoDB query to find documents with an array field.","completion":"db.collection.find({ tags: { $in: ['important'] } });"}
{"prompt":"How to use SQL ALTER TABLE to add a column?","completion":"ALTER TABLE employees ADD email VARCHAR(100);"}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores like Redis map keys to values, optimized for simple, fast lookups."}
{"prompt":"Write a SQL query to find employees with max salary per department.","completion":"SELECT e.* FROM employees e JOIN (SELECT department_id, MAX(salary) AS max_salary FROM employees GROUP BY department_id) m ON e.department_id = m.department_id AND e.salary = m.max_salary;"}
{"prompt":"How to use $inc in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $inc: { count: 1 } });"}
{"prompt":"Explain SQL partitioning.","completion":"Partitioning divides a table into smaller parts based on a key, improving query performance. Example: PARTITION BY RANGE (year);"}
{"prompt":"Write a Redis command to get a range from a sorted set.","completion":"ZRANGE myset 0 -1;"}
{"prompt":"How to use SQL TRUNCATE?","completion":"TRUNCATE TABLE employees;"}
{"prompt":"Explain Cassandra clustering keys.","completion":"Clustering keys determine the order of data within a partition in Cassandra, aiding range queries."}
{"prompt":"Write a SQL query to find employees with names starting with 'A'.","completion":"SELECT * FROM employees WHERE name LIKE 'A%';"}
{"prompt":"How to use Redis streams for messaging?","completion":"XADD mystream * message 'hello'; XREAD STREAMS mystream 0;"}
{"prompt":"Write a Neo4j query to find nodes with a specific property.","completion":"MATCH (n:Person {age: 30}) RETURN n;"}
{"prompt":"Explain SQL roles.","completion":"Roles are sets of privileges assigned to users. Example: CREATE ROLE analyst; GRANT SELECT ON employees TO analyst;"}
{"prompt":"Write a MongoDB query to drop a collection.","completion":"db.collection.drop();"}
{"prompt":"How to use SQL MERGE statement?","completion":"MERGE INTO employees e USING new_data n ON e.id = n.id WHEN MATCHED THEN UPDATE SET e.salary = n.salary WHEN NOT MATCHED THEN INSERT VALUES (n.id, n.name, n.salary);"}
{"prompt":"Write a Redis command to set multiple hash fields.","completion":"HMSET user:123 name 'Alice' age 25;"}
{"prompt":"Explain MongoDB gridFS.","completion":"GridFS stores large files by splitting them into chunks, stored in separate collections."}
{"prompt":"Write a SQL query to find employees with above-average salary.","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"}
{"prompt":"How to use Cassandra collections?","completion":"CREATE TABLE users (id UUID PRIMARY KEY, emails SET<TEXT>); INSERT INTO users (id, emails) VALUES (uuid(), {'a@b.com', 'c@d.com'});"}
{"prompt":"Write a Neo4j query to find all paths between two nodes.","completion":"MATCH p=(a:Person {name: 'Alice'})-[*1..3]-(b:Person {name: 'Bob'}) RETURN p;"}
{"prompt":"Explain SQL foreign key constraints.","completion":"Foreign keys enforce referential integrity by linking a column to a primary key in another table. Example: FOREIGN KEY (department_id) REFERENCES departments(id);"}
{"prompt":"Write a MongoDB query to find documents with null fields.","completion":"db.collection.find({ field: null });"}
{"prompt":"How to use SQL GRANT statement?","completion":"GRANT SELECT, INSERT ON employees TO user1;"}
{"prompt":"Explain NoSQL graph databases.","completion":"Graph databases like Neo4j store data as nodes and relationships, ideal for complex relational queries."}
{"prompt":"Write a SQL query to find employees by manager.","completion":"SELECT e.* FROM employees e JOIN employees m ON e.manager_id = m.id WHERE m.name = 'John';"}
{"prompt":"Write a Cassandra query to update a collection.","completion":"UPDATE users SET emails = emails + {'new@e.com'} WHERE id = uuid();"}
{"prompt":"Explain SQL materialized views.","completion":"Materialized views store query results physically, refreshed periodically. Example: CREATE MATERIALIZED VIEW emp_summary AS SELECT department_id, COUNT(*) FROM employees GROUP BY department_id;"}
{"prompt":"Write a Neo4j query to find nodes by label.","completion":"MATCH (n:Person) RETURN n;"}
{"prompt":"How to use SQL REVOKE statement?","completion":"REVOKE SELECT ON employees FROM user1;"}
{"prompt":"Write a Redis command to get stream entries.","completion":"XREAD COUNT 10 STREAMS mystream 0;"}
{"prompt":"Explain MongoDB write concern.","completion":"Write concern specifies acknowledgment levels for write operations, e.g., { w: 'majority' } for replica set confirmation."}
{"prompt":"Write a SQL query to find employees with specific skills.","completion":"SELECT * FROM employees WHERE skills LIKE '%Java%';"}
{"prompt":"How to use Cassandra lightweight transactions?","completion":"INSERT INTO users (id, name) VALUES (1, 'Alice') IF NOT EXISTS;"}
{"prompt":"Write a MongoDB query to find documents with specific array length.","completion":"db.collection.find({ items: { $size: 3 } });"}
{"prompt":"Explain SQL table partitioning.","completion":"Table partitioning splits large tables into smaller parts based on a key, improving performance. Example: PARTITION BY LIST (region);"}
{"prompt":"Write a Neo4j query to find nodes with multiple properties.","completion":"MATCH (n:Person {name: 'Alice', age: 25}) RETURN n;"}
{"prompt":"Write a Redis command to expire a key in hours.","completion":"SET key value EX 7200;"}
{"prompt":"Explain MongoDB aggregation framework.","completion":"The aggregation framework processes data through stages like $match, $group, and $sort for complex queries."}
{"prompt":"Write a SQL query to find employees by city.","completion":"SELECT e.* FROM employees e JOIN departments d ON e.department_id = d.id WHERE d.city = 'New York';"}
{"prompt":"How to use Cassandra counters?","completion":"CREATE TABLE keyspace.page_views (url TEXT PRIMARY KEY, views COUNTER); UPDATE page_views SET views = views + 1 WHERE url = 'page1';"}
{"prompt":"Write a MongoDB query to find documents with nested fields.","completion":"db.collection.find({ 'address.city': 'New York' });"}
{"prompt":"Explain SQL indexes.","completion":"Indexes speed up queries by creating a data structure for quick lookups. Example: CREATE INDEX idx_salary ON employees (salary);"}
{"prompt":"Write a Neo4j query to find nodes with a specific relationship type.","completion":"MATCH (n)-[:LIKES]->(m) RETURN n, m;"}
{"prompt":"How to use SQL DROP DATABASE?","completion":"DROP DATABASE mydb;"}
{"prompt":"Write a Redis command to get a range of list elements.","completion":"LRANGE mylist 0 5;"}
{"prompt":"Explain MongoDB TTL indexes.","completion":"TTL indexes automatically delete documents after a specified time. Example: db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"How to use Cassandra timeuuid?","completion":"CREATE TABLE events (id TIMEUUID PRIMARY KEY, event TEXT); INSERT INTO events (id, event) VALUES (now(), 'login');"}
{"prompt":"Write a MongoDB query to find documents by ObjectId.","completion":"db.collection.find({ _id: ObjectId('1234567890abcdef12345678') });"}
{"prompt":"Explain SQL views vs materialized views.","completion":"Views are virtual tables based on a query, while materialized views store physical data and need refreshing."}
{"prompt":"Write a Neo4j query to find nodes with a minimum degree.","completion":"MATCH (n)-[r]-() RETURN n, count(r) AS degree HAVING degree >= 3;"}
{"prompt":"How to use SQL ROLLBACK?","completion":"BEGIN TRANSACTION; INSERT INTO employees VALUES (1, 'Alice'); ROLLBACK;"}
{"prompt":"Write a Redis command to add multiple set members.","completion":"SADD myset 'item1' 'item2' 'item3';"}
{"prompt":"Explain MongoDB compound indexes.","completion":"Compound indexes combine multiple fields for efficient queries. Example: db.collection.createIndex({ name: 1, age: -1 });"}
{"prompt":"Write a SQL query to find employees with specific department and salary.","completion":"SELECT * FROM employees WHERE department_id = 3 AND salary > 60000;"}
{"prompt":"How to use Cassandra frozen collections?","completion":"CREATE TABLE users (id UUID PRIMARY KEY, info FROZEN<MAP<TEXT, TEXT>>);"}
{"prompt":"Write a MongoDB query to find documents with specific array elements.","completion":"db.collection.find({ scores: { $elemMatch: { $gte: 90 } } });"}
{"prompt":"Explain SQL triggers vs stored procedures.","completion":"Triggers run automatically on events like INSERT, while stored procedures are explicitly called. Both encapsulate logic."}
{"prompt":"Write a Neo4j query to find nodes by property regex.","completion":"MATCH (n:Person) WHERE n.name =~ 'A.*' RETURN n;"}
{"prompt":"How to use SQL CREATE USER?","completion":"CREATE USER 'user1' IDENTIFIED BY 'password';"}
{"prompt":"Write a Redis command to get a random set member.","completion":"SRANDMEMBER myset;"}
{"prompt":"Explain MongoDB partial indexes.","completion":"Partial indexes index a subset of documents based on a filter. Example: db.collection.createIndex({ age: 1 }, { partialFilterExpression: { age: { $gt: 18 } } });"}
{"prompt":"Write a SQL query to find employees hired in a specific month.","completion":"SELECT * FROM employees WHERE EXTRACT(MONTH FROM hire_date) = 6;"}
{"prompt":"How to use Cassandra batch for consistency?","completion":"BEGIN UNLOGGED BATCH INSERT INTO users (id, name) VALUES (1, 'Alice'); INSERT INTO users (id, name) VALUES (2, 'Bob'); APPLY BATCH;"}
{"prompt":"Write a MongoDB query to find documents with a specific field value.","completion":"db.collection.find({ status: 'pending' });"}
{"prompt":"Explain SQL common table expressions (CTEs).","completion":"CTEs define temporary result sets. Example: WITH cte AS (SELECT * FROM employees WHERE salary > 50000) SELECT * FROM cte WHERE department_id = 1;"}
{"prompt":"Write a Neo4j query to find nodes with a specific relationship length.","completion":"MATCH p=(n:Person)-[*2..3]->(m) RETURN n, m;"}
{"prompt":"How to use SQL SET operations?","completion":"SELECT name FROM employees UNION ALL SELECT name FROM contractors;"}
{"prompt":"Write a Redis command to get the length of a sorted set.","completion":"ZCARD myset;"}
{"prompt":"Explain MongoDB covered queries.","completion":"Covered queries are fully satisfied by an index, requiring no document fetch. Example: db.collection.find({ name: 'Alice' }, { name: 1, _id: 0 }).hint({ name: 1 });"}
{"prompt":"Write a SQL query to find employees with specific certifications.","completion":"SELECT * FROM employees WHERE certifications LIKE '%AWS%';"}
{"prompt":"How to use Cassandra static columns?","completion":"CREATE TABLE keyspace.family (family_id UUID, name TEXT STATIC, member TEXT, PRIMARY KEY (family_id, member));"}
{"prompt":"Explain SQL schema design.","completion":"Schema design involves defining tables, relationships, and constraints to optimize data storage and retrieval."}
{"prompt":"Write a Neo4j query to find nodes with specific properties.","completion":"MATCH (n:Person {city: 'New York', age: 30}) RETURN n;"}
{"prompt":"How to use SQL CREATE INDEX with conditions?","completion":"CREATE INDEX idx_active ON employees (status) WHERE status = 'active';"}
{"prompt":"Write a Redis command to get stream range.","completion":"XRANGE mystream - +;"}
{"prompt":"Explain MongoDB read concern.","completion":"Read concern specifies data consistency level for reads, e.g., 'majority' for confirmed writes."}
{"prompt":"Write a SQL query to find employees by hire year.","completion":"SELECT * FROM employees WHERE YEAR(hire_date) = 2023;"}
{"prompt":"How to use Cassandra UDTs?","completion":"CREATE TYPE keyspace.address (street TEXT, city TEXT); CREATE TABLE users (id UUID PRIMARY KEY, addr FROZEN<address>);"}
{"prompt":"Write a MongoDB query to find documents with specific array size.","completion":"db.collection.find({ items: { $size: 2 } });"}
{"prompt":"Explain SQL query execution plans.","completion":"Execution plans show how a database executes a query, including index usage and join order. Use EXPLAIN or EXPLAIN ANALYZE."}
{"prompt":"Write a Neo4j query to find nodes with multiple relationship types.","completion":"MATCH (n)-[:FRIEND|KNOWS]->(m) RETURN n, m;"}
{"prompt":"How to use SQL ALTER TABLE to modify a column?","completion":"ALTER TABLE employees MODIFY COLUMN salary DECIMAL(10,2);"}
{"prompt":"Write a Redis command to get top scores from a sorted set.","completion":"ZRANGE myset 0 2 WITHSCORES;"}
{"prompt":"Explain MongoDB sharded clusters.","completion":"Sharded clusters distribute data across shards, with a config server and mongos router for coordination."}
{"prompt":"Write a SQL query to find employees with specific performance ratings.","completion":"SELECT * FROM employees WHERE performance_rating >= 4;"}
{"prompt":"How to use Cassandra secondary indexes?","completion":"CREATE INDEX ON keyspace.users (city); SELECT * FROM users WHERE city = 'New York';"}
{"prompt":"Write a MongoDB query to find documents with specific embedded fields.","completion":"db.collection.find({ 'details.status': 'active' });"}
{"prompt":"Explain SQL unique constraints.","completion":"Unique constraints ensure no duplicate values in a column. Example: CREATE TABLE employees (email VARCHAR(100) UNIQUE);"}
{"prompt":"Write a Neo4j query to find nodes with specific relationship properties.","completion":"MATCH (n)-[r:KNOWS {since: 2020}]->(m) RETURN n, r, m;"}
{"prompt":"How to use SQL DROP COLUMN?","completion":"ALTER TABLE employees DROP COLUMN email;"}
{"prompt":"Write a Redis command to get a stream entry by ID.","completion":"XREAD STREAMS mystream 1234567890-0;"}
{"prompt":"Explain MongoDB change streams.","completion":"Change streams allow real-time monitoring of collection changes. Example: db.collection.watch();"}
{"prompt":"Write a SQL query to find employees by location and department.","completion":"SELECT e.* FROM employees e JOIN departments d ON e.department_id = d.id WHERE d.location = 'New York';"}
{"prompt":"How to use Cassandra TTL for automatic expiration?","completion":"INSERT INTO keyspace.sessions (id, data) VALUES (uuid(), 'session_data') USING TTL 3600;"}
{"prompt":"Write a MongoDB query to find documents with specific nested array elements.","completion":"db.collection.find({ 'orders.items': { $elemMatch: { product: 'Book' } } });"}
{"prompt":"Explain SQL normalization forms.","completion":"Normalization organizes tables to reduce redundancy. Forms include 1NF (atomic values), 2NF (no partial dependencies), and 3NF (no transitive dependencies)."}
{"prompt":"Write a Neo4j query to find nodes with a specific property range.","completion":"MATCH (n:Person) WHERE n.age >= 20 AND n.age <= 30 RETURN n;"}
{"prompt":"How to use SQL CREATE TABLE with foreign keys?","completion":"CREATE TABLE employees (id INT PRIMARY KEY, department_id INT, FOREIGN KEY (department_id) REFERENCES departments(id));"}
{"prompt":"Write a Redis command to get all keys matching a pattern.","completion":"KEYS user:*;"}
{"prompt":"Explain MongoDB replica sets.","completion":"Replica sets provide data redundancy and high availability by replicating data across multiple nodes."}
{"prompt":"Write a SQL query to find employees with specific skills and experience.","completion":"SELECT * FROM employees WHERE skills LIKE '%Python%' AND experience_years > 5;"}
{"prompt":"How to use Cassandra lightweight transactions for conditional updates?","completion":"UPDATE users SET name = 'Bob' WHERE id = 1 IF name = 'Alice';"}
{"prompt":"Write a MongoDB query to find documents with specific date formats.","completion":"db.collection.find({ date: { $gte: ISODate('2023-01-01T00:00:00Z'), $lt: ISODate('2024-01-01T00:00:00Z') } });"}
{"prompt":"Explain SQL data types.","completion":"SQL data types define the nature of data in columns, e.g., INT for integers, VARCHAR for variable-length strings, DATE for dates."}
{"prompt":"Write a Neo4j query to find nodes with a specific relationship count.","completion":"MATCH (n)-[r]-() RETURN n, count(r) AS rel_count HAVING rel_count > 5;"}
{"prompt":"How to use SQL ALTER TABLE to rename a column?","completion":"ALTER TABLE employees RENAME COLUMN old_name TO new_name;"}
{"prompt":"How to use SQL ALTER TABLE to add a new column?","completion":"ALTER TABLE employees ADD COLUMN age INT;"}
{"prompt":"How to create a table in SQL for storing customer data?","completion":"CREATE TABLE customers (id INT PRIMARY KEY, name VARCHAR(100), email VARCHAR(100), signup_date DATE);"}
{"prompt":"How to insert a record into a SQL table?","completion":"INSERT INTO table_name (column1, column2) VALUES (value1, value2);"}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ filter }, { $set: { field: newValue } });"}
{"prompt":"What are indexes in databases?","completion":"Indexes are data structures that improve query performance by allowing faster data retrieval, like a book's index."}
{"prompt":"Write a Redis command to set a key-value pair.","completion":"SET user:123 name 'John Doe';"}
{"prompt":"Explain ACID properties in SQL databases.","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions in SQL databases."}
{"prompt":"Write a Neo4j query to find all nodes with a specific property.","completion":"MATCH (n:Person {name: 'Alice'}) RETURN n;"}
{"prompt":"How to use GROUP BY in SQL?","completion":"SELECT column, COUNT(*) FROM table GROUP BY column;"}
{"prompt":"Write a MongoDB query to sort documents by price.","completion":"db.collection.find().sort({ price: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"What is sharding in NoSQL databases?","completion":"Sharding distributes data across multiple servers to improve scalability and performance."}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key links two tables by referencing the primary key of another table."}
{"prompt":"Write a Cassandra query to insert data.","completion":"INSERT INTO keyspace.table (id, name) VALUES (1, 'Alice');"}
{"prompt":"Explain CAP theorem for NoSQL databases.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance at once."}
{"prompt":"Write a Redis command to add to a sorted set.","completion":"ZADD leaderboard 100 'player1';"}
{"prompt":"How to use HAVING in SQL?","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"What is normalization in SQL?","completion":"Normalization organizes data to reduce redundancy and improve integrity through forms like 1NF, 2NF, 3NF."}
{"prompt":"Write a Neo4j query to create a relationship.","completion":"MATCH (a:Person {name: 'Alice'}), (b:Person {name: 'Bob'}) CREATE (a)-[:FRIENDS]->(b);"}
{"prompt":"Write a Redis command to expire a key.","completion":"SET key value EX 3600;"}
{"prompt":"Explain transactions in MongoDB.","completion":"MongoDB supports multi-document transactions using db.getMongo().startSession() for ACID compliance."}
{"prompt":"Write a SQL query for a full outer join.","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What are views in SQL?","completion":"Views are virtual tables created by a query, defined with CREATE VIEW view_name AS SELECT ...;"}
{"prompt":"How to use window functions in SQL?","completion":"SELECT column, ROW_NUMBER() OVER (PARTITION BY group_column ORDER BY sort_column) FROM table;"}
{"prompt":"Write a Redis pub/sub command.","completion":"PUBLISH channel 'message'; SUBSCRIBE channel;"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization embeds related data in a single document to optimize read performance in NoSQL."}
{"prompt":"What is a composite key in SQL?","completion":"A composite key uses multiple columns to uniquely identify a record in a table."}
{"prompt":"Write a MongoDB query to update multiple documents.","completion":"db.collection.updateMany({ filter }, { $set: { field: newValue } });"}
{"prompt":"What is a secondary index in Cassandra?","completion":"A secondary index allows querying non-primary key columns, created with CREATE INDEX ON table (column);"}
{"prompt":"Write a SQL query with CASE statement.","completion":"SELECT column, CASE WHEN condition THEN 'value1' ELSE 'value2' END FROM table;"}
{"prompt":"How to use Redis transactions?","completion":"MULTI; SET key value; INCR counter; EXEC;"}
{"prompt":"Explain eventual consistency in NoSQL.","completion":"Eventual consistency means all replicas eventually converge to the same state after updates."}
{"prompt":"Write a PostgreSQL query for JSONB data.","completion":"SELECT * FROM table WHERE jsonb_column @> '{\"key\": \"value\"}';"}
{"prompt":"What are triggers in SQL?","completion":"Triggers are stored procedures that automatically execute on events like INSERT, UPDATE, or DELETE."}
{"prompt":"Write a Redis command for a hash.","completion":"HMSET user:123 name 'Alice' age 30;"}
{"prompt":"How to use UNION in SQL?","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"Explain MongoDB replica sets.","completion":"Replica sets are groups of mongod instances that replicate data for redundancy and high availability."}
{"prompt":"Write a SQL query for date functions.","completion":"SELECT CURRENT_DATE, DATE_ADD(date_column, INTERVAL 1 DAY) FROM table;"}
{"prompt":"What is a clustered index in SQL?","completion":"A clustered index determines the physical order of data in a table, typically the primary key."}
{"prompt":"How to use batch statements in Cassandra?","completion":"BEGIN BATCH INSERT ...; UPDATE ...; APPLY BATCH;"}
{"prompt":"Write a Redis command for a list.","completion":"LPUSH list_name value; RPOP list_name;"}
{"prompt":"Write a MongoDB change stream example.","completion":"const changeStream = db.collection.watch(); for await (const change of changeStream) { console.log(change); }"}
{"prompt":"What is a materialized view in SQL?","completion":"A materialized view stores the query result physically and can be refreshed periodically."}
{"prompt":"Explain MongoDB sharding.","completion":"Sharding splits data across servers using a shard key to distribute load."}
{"prompt":"How to use Redis pipelines?","completion":"const pipeline = client.pipeline(); pipeline.set('key', 'value'); pipeline.exec();"}
{"prompt":"Write a PostgreSQL query for full-text search.","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('term');"}
{"prompt":"How to use BETWEEN in SQL?","completion":"SELECT * FROM table WHERE column BETWEEN value1 AND value2;"}
{"prompt":"Write a MongoDB query to count documents.","completion":"db.collection.countDocuments({ filter });"}
{"prompt":"What is a partition key in Cassandra?","completion":"A partition key determines how data is distributed across nodes in Cassandra."}
{"prompt":"How to use Redis for caching?","completion":"SET key value EX 3600; GET key;"}
{"prompt":"Explain NoSQL data modeling.","completion":"NoSQL data modeling prioritizes query patterns, often using denormalization and embedding."}
{"prompt":"How to use ORDER BY in SQL?","completion":"SELECT * FROM table ORDER BY column ASC;"}
{"prompt":"Write a MongoDB query to delete documents.","completion":"db.collection.deleteMany({ filter });"}
{"prompt":"Write a Cassandra query to update data.","completion":"UPDATE keyspace.table SET column = value WHERE id = key;"}
{"prompt":"Write a Redis command for a set.","completion":"SADD myset value; SMEMBERS myset;"}
{"prompt":"Explain MongoDB transactions.","completion":"Use session.startTransaction(); db.collection.update(); session.commitTransaction();"}
{"prompt":"Write a SQL query for a cross join.","completion":"SELECT * FROM table1 CROSS JOIN table2;"}
{"prompt":"What are stored procedures in SQL?","completion":"Stored procedures are precompiled SQL code stored in the database for reuse."}
{"prompt":"Write a Neo4j query to find neighbors.","completion":"MATCH (n:Node {id: '123'})-[:REL]->(neighbor) RETURN neighbor;"}
{"prompt":"Write a MongoDB query for distinct values.","completion":"db.collection.distinct('field');"}
{"prompt":"What is a clustering key in Cassandra?","completion":"A clustering key determines the order of data within a partition in Cassandra."}
{"prompt":"Write a SQL query with multiple conditions.","completion":"SELECT * FROM table WHERE column1 = 'value' AND column2 > 100;"}
{"prompt":"Write a MongoDB query with regex.","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"Write a Neo4j query to count relationships.","completion":"MATCH ()-[r]->() RETURN COUNT(r);"}
{"prompt":"What is a check constraint in SQL?","completion":"A CHECK constraint ensures column values meet a specific condition, e.g., CHECK (age > 18)."}
{"prompt":"Write a MongoDB query to project specific fields.","completion":"db.collection.find({}, { field1: 1, field2: 1, _id: 0 });"}
{"prompt":"What is a keyspace in Cassandra?","completion":"A keyspace is a namespace for tables in Cassandra, similar to a database in SQL."}
{"prompt":"Write a SQL query to find duplicates.","completion":"SELECT column, COUNT(*) FROM table GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"How to use Redis for rate limiting?","completion":"INCR counter; EXPIRE counter 60; if counter > limit, block request."}
{"prompt":"Explain MongoDB capped collections.","completion":"Capped collections have a fixed size, automatically overwriting old data when full."}
{"prompt":"Write a PostgreSQL query for array data.","completion":"SELECT * FROM table WHERE column @> ARRAY['value'];"}
{"prompt":"Write a Neo4j query to merge nodes.","completion":"MERGE (n:Node {id: '123'}) SET n.name = 'Alice';"}
{"prompt":"What is a unique constraint in SQL?","completion":"A UNIQUE constraint ensures all values in a column or set of columns are distinct."}
{"prompt":"Write a MongoDB query for bulk insert.","completion":"db.collection.insertMany([{ doc1 }, { doc2 }]);"}
{"prompt":"Explain NoSQL wide-column stores.","completion":"Wide-column stores (e.g., Cassandra) use flexible columns for large-scale data."}
{"prompt":"Write a SQL query for rolling averages.","completion":"SELECT column, AVG(value) OVER (ORDER BY date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) FROM table;"}
{"prompt":"How to use $push in MongoDB?","completion":"db.collection.updateOne({ filter }, { $push: { arrayField: value } });"}
{"prompt":"What is a materialized view in PostgreSQL?","completion":"A materialized view stores query results physically, refreshed with REFRESH MATERIALIZED VIEW."}
{"prompt":"Write a Neo4j query to find all paths.","completion":"MATCH p = (start)-[*1..3]->(end) RETURN p;"}
{"prompt":"Write a MongoDB query to skip records.","completion":"db.collection.find().skip(10);"}
{"prompt":"What is a TTL index in MongoDB?","completion":"A TTL index automatically removes documents after a specified time, e.g., db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"How to use Redis for session storage?","completion":"SET session:user123 data EX 86400;"}
{"prompt":"Explain SQL correlated subqueries.","completion":"A correlated subquery references the outer query, e.g., SELECT * FROM table t WHERE EXISTS (SELECT 1 FROM other_table o WHERE o.id = t.id);"}
{"prompt":"Write a Cassandra query for time-series data.","completion":"CREATE TABLE keyspace.timeseries (id UUID, time TIMESTAMP, value INT, PRIMARY KEY (id, time));"}
{"prompt":"Write a MongoDB query to unset a field.","completion":"db.collection.updateOne({ filter }, { $unset: { field: '' } });"}
{"prompt":"What is a graph database?","completion":"A graph database (e.g., Neo4j) stores data as nodes and relationships for efficient querying of connected data."}
{"prompt":"Write a SQL query for top-N records.","completion":"SELECT * FROM table ORDER BY column DESC LIMIT 5;"}
{"prompt":"How to use $elemMatch in MongoDB?","completion":"db.collection.find({ arrayField: { $elemMatch: { key: value } } });"}
{"prompt":"Write a PostgreSQL query for hstore data.","completion":"SELECT * FROM table WHERE hstore_column -> 'key' = 'value';"}
{"prompt":"How to use ANY in SQL?","completion":"SELECT * FROM table WHERE column = ANY (SELECT column FROM another_table);"}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH ()-[r:REL]->() WHERE r.id = '123' DELETE r;"}
{"prompt":"What is a covering index in SQL?","completion":"A covering index includes all columns needed by a query, avoiding table access."}
{"prompt":"Write a MongoDB query to group and count.","completion":"db.collection.aggregate([{ $group: { _id: '$field', count: { $sum: 1 } } }]);"}
{"prompt":"How to use ON DELETE CASCADE in SQL?","completion":"CREATE TABLE table (id INT, FOREIGN KEY (id) REFERENCES parent(id) ON DELETE CASCADE);"}
{"prompt":"Explain MongoDB write concern.","completion":"Write concern specifies acknowledgment levels for write operations, e.g., { w: 'majority' }."}
{"prompt":"Write a SQL query for recursive CTE.","completion":"WITH RECURSIVE tree AS (SELECT id, parent_id FROM table WHERE parent_id IS NULL UNION ALL SELECT t.id, t.parent_id FROM table t JOIN tree ON t.parent_id = tree.id) SELECT * FROM tree;"}
{"prompt":"What is a compound index in MongoDB?","completion":"A compound index includes multiple fields, e.g., db.collection.createIndex({ field1: 1, field2: 1 });"}
{"prompt":"Write a Cassandra query to select by range.","completion":"SELECT * FROM keyspace.table WHERE partition_key = value AND clustering_key > value;"}
{"prompt":"How to use DENSE_RANK in SQL?","completion":"SELECT column, DENSE_RANK() OVER (ORDER BY column) FROM table;"}
{"prompt":"Write a Redis command to get list length.","completion":"LLEN list_name;"}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores (e.g., Redis) store data as simple key-value pairs for fast retrieval."}
{"prompt":"Write a SQL query to drop a database.","completion":"DROP DATABASE database_name;"}
{"prompt":"How to use $inc in MongoDB?","completion":"db.collection.updateOne({ filter }, { $inc: { counter: 1 } });"}
{"prompt":"What is a trigger function in PostgreSQL?","completion":"A trigger function is a PL/pgSQL function called by a trigger, e.g., CREATE FUNCTION func() RETURNS TRIGGER AS $$ BEGIN ... END; $$ LANGUAGE plpgsql;"}
{"prompt":"Write a Neo4j query to find node properties.","completion":"MATCH (n:Node) RETURN properties(n);"}
{"prompt":"Write a MongoDB query to rename a field.","completion":"db.collection.updateMany({}, { $rename: { oldField: 'newField' } });"}
{"prompt":"What is a counter table in Cassandra?","completion":"A counter table stores incrementable values, e.g., CREATE TABLE keyspace.counters (id UUID PRIMARY KEY, count COUNTER);"}
{"prompt":"Write a SQL query for date difference.","completion":"SELECT DATEDIFF(end_date, start_date) FROM table;"}
{"prompt":"How to use Redis for geospatial data?","completion":"GEOADD location 13.361 52.516 city; GEORADIUS location 13.361 52.516 100 km;"}
{"prompt":"Explain SQL query execution plan.","completion":"An execution plan shows how a database executes a query, including steps like index scans or joins."}
{"prompt":"Write a MongoDB query to find by date.","completion":"db.collection.find({ date: { $gte: ISODate('2023-01-01') } });"}
{"prompt":"How to use LATERAL in PostgreSQL?","completion":"SELECT * FROM table1, LATERAL (SELECT * FROM table2 WHERE table2.id = table1.id) sub;"}
{"prompt":"What is a unique index in SQL?","completion":"A unique index ensures no duplicate values in indexed columns, e.g., CREATE UNIQUE INDEX idx ON table(column);"}
{"prompt":"Write a Cassandra query to create an index.","completion":"CREATE INDEX ON keyspace.table (column);"}
{"prompt":"How to use GROUP_CONCAT in SQL?","completion":"SELECT column, GROUP_CONCAT(value) FROM table GROUP BY column;"}
{"prompt":"Write a Redis command to pop from a set.","completion":"SPOP myset;"}
{"prompt":"Explain MongoDB aggregation pipeline.","completion":"The aggregation pipeline processes documents through stages like $match, $group, $sort."}
{"prompt":"Write a SQL query for string concatenation.","completion":"SELECT CONCAT(column1, ' ', column2) FROM table;"}
{"prompt":"How to use $pull in MongoDB?","completion":"db.collection.updateOne({ filter }, { $pull: { arrayField: value } });"}
{"prompt":"What is a distributed database?","completion":"A distributed database stores data across multiple nodes for scalability and fault tolerance."}
{"prompt":"Write a Neo4j query to find connected nodes.","completion":"MATCH (n:Node)-[:REL*1..2]->(m) RETURN m;"}
{"prompt":"How to use CURRENT_TIMESTAMP in SQL?","completion":"SELECT CURRENT_TIMESTAMP;"}
{"prompt":"Write a MongoDB query to find by array length.","completion":"db.collection.find({ arrayField: { $size: 3 } });"}
{"prompt":"What is a bloom filter in Cassandra?","completion":"A bloom filter is a probabilistic data structure used to check if a row exists before accessing disk."}
{"prompt":"How to use Redis for message queues?","completion":"LPUSH queue job; BRPOP queue 0;"}
{"prompt":"Explain SQL temporary tables.","completion":"Temporary tables exist for a session, e.g., CREATE TEMPORARY TABLE temp_table (column TYPE);"}
{"prompt":"Write a MongoDB query to sort by multiple fields.","completion":"db.collection.find().sort({ field1: 1, field2: -1 });"}
{"prompt":"How to use PARTITION BY in SQL?","completion":"SELECT column, SUM(value) OVER (PARTITION BY group_column) FROM table;"}
{"prompt":"Write a Neo4j query to create a node.","completion":"CREATE (n:Node {id: '123', name: 'Alice'});"}
{"prompt":"What is a full-text index in SQL?","completion":"A full-text index enables efficient text search, e.g., in MySQL: CREATE FULLTEXT INDEX idx ON table(column);"}
{"prompt":"Write a Cassandra query to select by time.","completion":"SELECT * FROM keyspace.timeseries WHERE time > '2023-01-01';"}
{"prompt":"Write a Redis command to scan keys.","completion":"SCAN 0 MATCH 'prefix*';"}
{"prompt":"Explain MongoDB gridFS.","completion":"GridFS stores large files by splitting them into chunks in MongoDB."}
{"prompt":"Write a SQL query for row numbering.","completion":"SELECT ROW_NUMBER() OVER (ORDER BY column) AS row_num, column FROM table;"}
{"prompt":"What is a read preference in MongoDB?","completion":"Read preference controls which replica set members handle read operations, e.g., primary or secondary."}
{"prompt":"Write a Neo4j query to find cycles.","completion":"MATCH (n)-[:REL*1..3]->(n) RETURN n;"}
{"prompt":"How to use IFNULL in SQL?","completion":"SELECT IFNULL(column, 'default') FROM table;"}
{"prompt":"Write a Cassandra query to update a counter.","completion":"UPDATE keyspace.counters SET count = count + 1 WHERE id = key;"}
{"prompt":"Explain Redis cluster.","completion":"Redis Cluster distributes data across nodes using hash slots for scalability."}
{"prompt":"Write a SQL query for a running total.","completion":"SELECT column, SUM(value) OVER (ORDER BY date) AS running_total FROM table;"}
{"prompt":"How to use $addToSet in MongoDB?","completion":"db.collection.updateOne({ filter }, { $addToSet: { arrayField: value } });"}
{"prompt":"What is a stored function in SQL?","completion":"A stored function is a reusable SQL routine that returns a value, e.g., CREATE FUNCTION func() RETURNS INT ..."}
{"prompt":"Write a Neo4j query to find node degree.","completion":"MATCH (n:Node)-[r]-() RETURN n, COUNT(r) AS degree;"}
{"prompt":"Write a MongoDB query to find by ObjectId.","completion":"db.collection.find({ _id: ObjectId('1234567890abcdef12345678') });"}
{"prompt":"What is a lightweight transaction in Cassandra?","completion":"A lightweight transaction uses IF conditions for atomic updates, e.g., UPDATE table SET value = new IF value = old;"}
{"prompt":"Write a SQL query for a left join with condition.","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id WHERE table2.column = 'value';"}
{"prompt":"How to use Redis for leaderboard ranking?","completion":"ZADD leaderboard score player; ZREVRANGE leaderboard 0 9 WITHSCORES;"}
{"prompt":"Explain SQL table partitioning.","completion":"Table partitioning splits large tables into smaller, more manageable pieces based on a key."}
{"prompt":"Write a MongoDB query to find by nested field.","completion":"db.collection.find({ 'nested.field': value });"}
{"prompt":"How to use NTILE in SQL?","completion":"SELECT column, NTILE(4) OVER (ORDER BY column) FROM table;"}
{"prompt":"Write a Neo4j query to find common neighbors.","completion":"MATCH (a:Node {id: '1'})-[:REL]->(n)<-[:REL]-(b:Node {id: '2'}) RETURN n;"}
{"prompt":"What is a spatial index in SQL?","completion":"A spatial index optimizes queries on geospatial data, e.g., in PostGIS: CREATE INDEX idx ON table USING GIST (geometry);"}
{"prompt":"Write a Cassandra query to select by clustering key.","completion":"SELECT * FROM keyspace.table WHERE partition_key = value AND clustering_key = value;"}
{"prompt":"Explain MongoDB write conflicts.","completion":"Write conflicts occur when concurrent operations try to modify the same document."}
{"prompt":"Write a SQL query for a cumulative count.","completion":"SELECT column, COUNT(*) OVER (ORDER BY date) AS cumulative_count FROM table;"}
{"prompt":"What is a virtual table in SQL?","completion":"A virtual table is a view or result set of a query, not physically stored."}
{"prompt":"Write a Neo4j query to find longest path.","completion":"MATCH p = (start)-[:REL*1..10]->(end) RETURN p ORDER BY length(p) DESC LIMIT 1;"}
{"prompt":"Write a MongoDB query to find by multiple conditions.","completion":"db.collection.find({ field1: value1, field2: value2 });"}
{"prompt":"What is a static column in Cassandra?","completion":"A static column shares the same value across all rows in a partition."}
{"prompt":"Write a SQL query for a right join.","completion":"SELECT * FROM table1 RIGHT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"How to use Redis for locking?","completion":"SET lock:key value NX EX 60; DEL lock:key;"}
{"prompt":"Explain SQL query optimization.","completion":"Query optimization involves using indexes, rewriting queries, and analyzing plans to improve performance."}
{"prompt":"Write a MongoDB query to sample documents.","completion":"db.collection.aggregate([{ $sample: { size: 5 } }]);"}
{"prompt":"How to use LEAD in SQL?","completion":"SELECT column, LEAD(column) OVER (ORDER BY date) FROM table;"}
{"prompt":"Write a Neo4j query to find disconnected nodes.","completion":"MATCH (n) WHERE NOT (n)--() RETURN n;"}
{"prompt":"What is a bitmap index in SQL?","completion":"A bitmap index uses bitmaps to store column value mappings, efficient for low-cardinality columns."}
{"prompt":"Write a Cassandra query to select distinct.","completion":"SELECT DISTINCT column FROM keyspace.table;"}
{"prompt":"Write a Redis command to get range from sorted set.","completion":"ZRANGE leaderboard 0 9 WITHSCORES;"}
{"prompt":"Explain MongoDB journal.","completion":"MongoDB’s journal logs operations for crash recovery, ensuring data durability."}
{"prompt":"Write a SQL query for median calculation.","completion":"SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY column) FROM table;"}
{"prompt":"How to use $setOnInsert in MongoDB?","completion":"db.collection.updateOne({ filter }, { $setOnInsert: { field: value } }, { upsert: true });"}
{"prompt":"What is a collection in MongoDB?","completion":"A collection is a group of documents, analogous to a table in SQL."}
{"prompt":"How to use EXTRACT in SQL?","completion":"SELECT EXTRACT(YEAR FROM date_column) FROM table;"}
{"prompt":"Write a Cassandra query to delete by condition.","completion":"DELETE FROM keyspace.table WHERE id = value;"}
{"prompt":"Explain Redis data types.","completion":"Redis supports strings, lists, sets, sorted sets, hashes, streams, and geospatial data."}
{"prompt":"Write a SQL query for a cross-tab.","completion":"SELECT * FROM crosstab('SELECT row, col, value FROM table') AS ct(row TYPE, col1 TYPE, col2 TYPE);"}
{"prompt":"What is a materialized path in Neo4j?","completion":"A materialized path stores hierarchical data as a string of ancestor IDs."}
{"prompt":"Write a SQL query to find missing values.","completion":"SELECT t1.id + 1 AS missing FROM table t1 LEFT JOIN table t2 ON t2.id = t1.id + 1 WHERE t2.id IS NULL;"}
{"prompt":"Explain SQL common table expressions.","completion":"CTEs (WITH clause) define temporary result sets, e.g., WITH cte AS (SELECT ...) SELECT * FROM cte;"}
{"prompt":"Write a MongoDB query to find by null.","completion":"db.collection.find({ field: null });"}
{"prompt":"How to use LAG in SQL?","completion":"SELECT column, LAG(column) OVER (ORDER BY date) FROM table;"}
{"prompt":"Write a Neo4j query to find node by property regex.","completion":"MATCH (n) WHERE n.name =~ '.*pattern.*' RETURN n;"}
{"prompt":"What is a function-based index in SQL?","completion":"A function-based index indexes computed values, e.g., CREATE INDEX idx ON table(UPPER(column));"}
{"prompt":"Write a Cassandra query to select by IN clause.","completion":"SELECT * FROM keyspace.table WHERE id IN (value1, value2);"}
{"prompt":"How to use TRIM in SQL?","completion":"SELECT TRIM(BOTH ' ' FROM column) FROM table;"}
{"prompt":"Write a Redis command to get key type.","completion":"TYPE key;"}
{"prompt":"Explain MongoDB change streams.","completion":"Change streams allow real-time monitoring of collection changes using db.collection.watch()."}
{"prompt":"Write a SQL query for hierarchical data.","completion":"WITH RECURSIVE hierarchy AS (SELECT id, parent_id FROM table WHERE parent_id IS NULL UNION ALL SELECT t.id, t.parent_id FROM table t JOIN hierarchy h ON t.parent_id = h.id) SELECT * FROM hierarchy;"}
{"prompt":"How to use $slice in MongoDB?","completion":"db.collection.find({}, { arrayField: { $slice: [start, length] } });"}
{"prompt":"What is a write-ahead log in databases?","completion":"A write-ahead log records changes before they are applied, ensuring durability."}
{"prompt":"Write a Neo4j query to find nodes with multiple labels.","completion":"MATCH (n:Label1:Label2) RETURN n;"}
{"prompt":"How to use FORMAT in SQL?","completion":"SELECT FORMAT(number, 2) FROM table;"}
{"prompt":"Write a Cassandra query to select by TTL.","completion":"SELECT column, TTL(column) FROM keyspace.table;"}
{"prompt":"Explain Redis eviction policies.","completion":"Redis eviction policies (e.g., LRU, TTL) control how keys are removed when memory is full."}
{"prompt":"Write a SQL query for time zone conversion.","completion":"SELECT CONVERT_TZ(date_column, 'UTC', 'America/New_York') FROM table;"}
{"prompt":"How to use $redact in MongoDB?","completion":"db.collection.aggregate([{ $redact: { $cond: { if: { $eq: ['$level', 'public'] }, then: '$$KEEP', else: '$$PRUNE' } } }]);"}
{"prompt":"What is a frozen column in Cassandra?","completion":"A frozen column is a collection or UDT that cannot be updated partially."}
{"prompt":"Write a Neo4j query to find nodes by relationship type.","completion":"MATCH (n)-[r:REL_TYPE]->() RETURN n, r;"}
{"prompt":"How to use GREATEST in SQL?","completion":"SELECT GREATEST(column1, column2) FROM table;"}
{"prompt":"Write a MongoDB query to find by timestamp.","completion":"db.collection.find({ timestamp: { $gte: new Date('2023-01-01') } });"}
{"prompt":"Explain SQL indexing strategies.","completion":"Indexing strategies include choosing primary, secondary, or composite indexes based on query patterns."}
{"prompt":"Write a Redis command to get list range.","completion":"LRANGE list_name 0 -1;"}
{"prompt":"How to use WITH ROLLUP in SQL?","completion":"SELECT column, COUNT(*) FROM table GROUP BY column WITH ROLLUP;"}
{"prompt":"Write a Cassandra query to select by date range.","completion":"SELECT * FROM keyspace.timeseries WHERE time >= '2023-01-01' AND time <= '2023-12-31';"}
{"prompt":"What is a partial index in SQL?","completion":"A partial index indexes a subset of data, e.g., CREATE INDEX idx ON table(column) WHERE condition;"}
{"prompt":"Write a MongoDB query to find by array element.","completion":"db.collection.find({ arrayField: 'value' });"}
{"prompt":"How to use FIRST_VALUE in SQL?","completion":"SELECT column, FIRST_VALUE(column) OVER (PARTITION BY group_column ORDER BY date) FROM table;"}
{"prompt":"Write a Neo4j query to find node by ID.","completion":"MATCH (n {id: '123'}) RETURN n;"}
{"prompt":"Explain MongoDB write isolation.","completion":"Write isolation ensures concurrent writes don’t conflict, using locks or optimistic concurrency."}
{"prompt":"Write a SQL query for string length.","completion":"SELECT LENGTH(column) FROM table;"}
{"prompt":"How to use Redis for time-series data?","completion":"TS.CREATE timeseries; TS.ADD timeseries timestamp value;"}
{"prompt":"What is a clustering column in Cassandra?","completion":"A clustering column determines the on-disk sort order within a partition."}
{"prompt":"Write a MongoDB query to find by subdocument.","completion":"db.collection.find({ 'subdocument.field': value });"}
{"prompt":"How to use LAST_VALUE in SQL?","completion":"SELECT column, LAST_VALUE(column) OVER (PARTITION BY group_column ORDER BY date) FROM table;"}
{"prompt":"What is a hash index in SQL?","completion":"A hash index uses a hash function for fast equality lookups, e.g., CREATE INDEX idx ON table USING HASH (column);"}
{"prompt":"Write a Cassandra query to select by partition key.","completion":"SELECT * FROM keyspace.table WHERE partition_key = value;"}
{"prompt":"Write a Redis command to get hash field.","completion":"HGET user:123 name;"}
{"prompt":"Explain MongoDB read concern.","completion":"Read concern specifies the consistency level for reads, e.g., 'majority' or 'local'."}
{"prompt":"Write a SQL query for case-insensitive search.","completion":"SELECT * FROM table WHERE LOWER(column) = 'value';"}
{"prompt":"How to use $out in MongoDB?","completion":"db.collection.aggregate([{ $match: { field: value } }, { $out: 'new_collection' }]);"}
{"prompt":"What is a UDT in Cassandra?","completion":"A User-Defined Type (UDT) is a custom data type, e.g., CREATE TYPE keyspace.address (street TEXT, city TEXT);"}
{"prompt":"Write a Neo4j query to find nodes by property existence.","completion":"MATCH (n) WHERE EXISTS(n.property) RETURN n;"}
{"prompt":"How to use DATE_FORMAT in SQL?","completion":"SELECT DATE_FORMAT(date_column, '%Y-%m-%d') FROM table;"}
{"prompt":"Explain SQL merge queries.","completion":"MERGE (or UPSERT) combines INSERT and UPDATE, e.g., MERGE INTO table USING source ON condition WHEN MATCHED THEN UPDATE ...;"}
{"prompt":"Write a MongoDB query to find by range.","completion":"db.collection.find({ field: { $gte: min, $lte: max } });"}
{"prompt":"How to use ROW_NUMBER in SQL?","completion":"SELECT ROW_NUMBER() OVER (ORDER BY column) AS row_num, column FROM table;"}
{"prompt":"Write a Neo4j query to find nodes by multiple properties.","completion":"MATCH (n) WHERE n.prop1 = 'value1' AND n.prop2 = 'value2' RETURN n;"}
{"prompt":"What is a global index in SQL?","completion":"A global index spans all partitions of a partitioned table."}
{"prompt":"Write a Cassandra query to select by multiple keys.","completion":"SELECT * FROM keyspace.table WHERE partition_key IN (key1, key2);"}
{"prompt":"Write a Redis command to get set cardinality.","completion":"SCARD myset;"}
{"prompt":"Explain MongoDB oplog.","completion":"The oplog is a capped collection storing operations for replication in MongoDB."}
{"prompt":"Write a SQL query for date truncation.","completion":"SELECT TRUNC(date_column, 'DAY') FROM table;"}
{"prompt":"How to use $merge in MongoDB?","completion":"db.collection.aggregate([{ $match: { field: value } }, { $merge: { into: 'target_collection' } }]);"}
{"prompt":"What is a collection scan in MongoDB?","completion":"A collection scan reads all documents in a collection when no suitable index exists."}
{"prompt":"Write a Neo4j query to find nodes by relationship count.","completion":"MATCH (n)-[r]-() RETURN n, COUNT(r) AS rel_count ORDER BY rel_count DESC;"}
{"prompt":"How to use INTERVAL in SQL?","completion":"SELECT date_column + INTERVAL '1 day' FROM table;"}
{"prompt":"Write a Cassandra query to select by clustering range.","completion":"SELECT * FROM keyspace.table WHERE partition_key = value AND clustering_key >= min AND clustering_key <= max;"}
{"prompt":"Explain Redis Lua scripting.","completion":"Redis Lua scripts run server-side logic, e.g., EVAL 'return redis.call(\"SET\", KEYS[1], ARGV[1])' 1 key value;"}
{"prompt":"Write a SQL query for random sampling.","completion":"SELECT * FROM table ORDER BY RANDOM() LIMIT 10;"}
{"prompt":"What is a local index in SQL?","completion":"A local index is specific to a partition in a partitioned table."}
{"prompt":"Write a MongoDB query to find by array of objects.","completion":"db.collection.find({ 'arrayField.key': value });"}
{"prompt":"How to use PERCENT_RANK in SQL?","completion":"SELECT column, PERCENT_RANK() OVER (ORDER BY column) FROM table;"}
{"prompt":"Write a Neo4j query to find nodes by label and property.","completion":"MATCH (n:Label {property: 'value'}) RETURN n;"}
{"prompt":"Explain SQL transaction isolation levels.","completion":"Isolation levels (e.g., READ COMMITTED, SERIALIZABLE) control how transactions see data changes."}
{"prompt":"What is a sstable in Cassandra?","completion":"An SSTable is an immutable on-disk data structure in Cassandra for storing table data."}
{"prompt":"Write a SQL query for substring search.","completion":"SELECT * FROM table WHERE column LIKE '%substring%';"}
{"prompt":"Write a MongoDB query to find by multiple array elements.","completion":"db.collection.find({ arrayField: { $all: ['value1', 'value2'] } });"}
{"prompt":"How to use CUME_DIST in SQL?","completion":"SELECT column, CUME_DIST() OVER (ORDER BY column) FROM table;"}
{"prompt":"Write a Neo4j query to find nodes by relationship direction.","completion":"MATCH (n)-[:REL]->(m) RETURN n, m;"}
{"prompt":"What is a functional dependency in SQL?","completion":"A functional dependency is when one attribute determines another in a table."}
{"prompt":"Write a Cassandra query to select by time UUID.","completion":"SELECT * FROM keyspace.table WHERE timeuuid_column = uuid;"}
{"prompt":"How to use TO_DATE in SQL?","completion":"SELECT TO_DATE(column, 'YYYY-MM-DD') FROM table;"}
{"prompt":"Write a Redis command to get sorted set range by score.","completion":"ZRANGEBYSCORE leaderboard min max;"}
{"prompt":"Explain MongoDB index types.","completion":"MongoDB supports single, compound, multikey, geospatial, text, and hashed indexes."}
{"prompt":"Write a SQL query for pattern matching.","completion":"SELECT * FROM table WHERE column REGEXP 'pattern';"}
{"prompt":"What is a memtable in Cassandra?","completion":"A memtable is an in-memory structure in Cassandra for buffering writes before flushing to SSTables."}
{"prompt":"Write a Neo4j query to find nodes by property range.","completion":"MATCH (n) WHERE n.value >= min AND n.value <= max RETURN n;"}
{"prompt":"How to use NOW in SQL?","completion":"SELECT NOW();"}
{"prompt":"Write a MongoDB query to find by array index.","completion":"db.collection.find({ 'arrayField.0': value });"}
{"prompt":"Explain SQL database roles.","completion":"Roles are groups of permissions assigned to users, e.g., GRANT role TO user;"}
{"prompt":"Write a Cassandra query to select by secondary index.","completion":"SELECT * FROM keyspace.table WHERE indexed_column = value;"}
{"prompt":"What is a multikey index in MongoDB?","completion":"A multikey index indexes each element in an array field for efficient array queries."}
{"prompt":"Write a SQL query for date comparison.","completion":"SELECT * FROM table WHERE date_column > '2023-01-01';"}
{"prompt":"Write a Neo4j query to find nodes by shortest path length.","completion":"MATCH p = shortestPath((n)-[*]-(m)) RETURN n, m, length(p);"}
{"prompt":"Explain Redis streams.","completion":"Redis streams store time-series data with ordered, timestamped entries."}
{"prompt":"Write a SQL query for string aggregation.","completion":"SELECT STRING_AGG(column, ',') FROM table;"}
{"prompt":"How to use $mod in MongoDB?","completion":"db.collection.find({ field: { $mod: [divisor, remainder] } });"}
{"prompt":"What is a compaction strategy in Cassandra?","completion":"A compaction strategy (e.g., SizeTiered, Leveled) manages how SSTables are merged."}
{"prompt":"Write a MongoDB query to find by embedded document.","completion":"db.collection.find({ 'embedded.field': value });"}
{"prompt":"How to use STDDEV in SQL?","completion":"SELECT STDDEV(column) FROM table;"}
{"prompt":"Write a Neo4j query to find nodes by relationship property.","completion":"MATCH (n)-[r {property: 'value'}]->(m) RETURN n, r, m;"}
{"prompt":"Explain SQL schema.","completion":"A schema is a collection of database objects like tables, views, and indexes."}
{"prompt":"Write a Redis command to get hash keys.","completion":"HKEYS user:123;"}
{"prompt":"How to use $geoIntersects in MongoDB?","completion":"db.collection.find({ location: { $geoIntersects: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"What is a nodetool in Cassandra?","completion":"Nodetool is a command-line tool for managing and monitoring Cassandra nodes."}
{"prompt":"Write a SQL query for conditional aggregation.","completion":"SELECT column, SUM(CASE WHEN condition THEN value ELSE 0 END) FROM table GROUP BY column;"}
{"prompt":"How to use $where in MongoDB?","completion":"db.collection.find({ $where: 'this.field1 > this.field2' });"}
{"prompt":"Explain SQL deadlock.","completion":"A deadlock occurs when two transactions block each other, waiting for resources."}
{"prompt":"Write a Cassandra query to select by collection.","completion":"SELECT * FROM keyspace.table WHERE collection_column CONTAINS value;"}
{"prompt":"How to use VARIANCE in SQL?","completion":"SELECT VARIANCE(column) FROM table;"}
{"prompt":"Explain MongoDB shard key.","completion":"A shard key determines how data is distributed across shards in MongoDB."}
{"prompt":"Write a SQL query for time difference.","completion":"SELECT TIMESTAMPDIFF(HOUR, start_time, end_time) FROM table;"}
{"prompt":"How to use $or in MongoDB?","completion":"db.collection.find({ $or: [{ field1: value1 }, { field2: value2 }] });"}
{"prompt":"What is a repair in Cassandra?","completion":"A repair synchronizes data across nodes to ensure consistency."}
{"prompt":"Write a Neo4j query to find nodes by distance.","completion":"MATCH (n:Node) WHERE point.distance(n.location, point({latitude: lat, longitude: lng})) < 1000 RETURN n;"}
{"prompt":"Write a MongoDB query to find by regex case-insensitive.","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"Explain SQL locking mechanisms.","completion":"Locks (e.g., row-level, table-level) prevent concurrent access issues in transactions."}
{"prompt":"Write a Redis command to get list elements by index.","completion":"LINDEX list_name index;"}
{"prompt":"How to use $and in MongoDB?","completion":"db.collection.find({ $and: [{ field1: value1 }, { field2: value2 }] });"}
{"prompt":"What is a hinted handoff in Cassandra?","completion":"Hinted handoff temporarily stores writes for unavailable nodes."}
{"prompt":"Write a SQL query for ranking ties.","completion":"SELECT column, RANK() OVER (ORDER BY column) FROM table;"}
{"prompt":"How to use $set in MongoDB?","completion":"db.collection.updateOne({ filter }, { $set: { field: value } });"}
{"prompt":"Write a Neo4j query to find nodes by property type.","completion":"MATCH (n) WHERE n.property IS NOT NULL RETURN n;"}
{"prompt":"Explain SQL query caching.","completion":"Query caching stores query results to speed up subsequent identical queries."}
{"prompt":"Write a Cassandra query to select by map.","completion":"SELECT * FROM keyspace.table WHERE map_column['key'] = value;"}
{"prompt":"How to use JSON_EXTRACT in SQL?","completion":"SELECT JSON_EXTRACT(json_column, '$.key') FROM table;"}
{"prompt":"Write a Redis command to get sorted set score.","completion":"ZSCORE leaderboard player;"}
{"prompt":"Explain MongoDB backup strategies.","completion":"Strategies include mongodump, filesystem snapshots, or oplog-based incremental backups."}
{"prompt":"Write a SQL query for pivot with CASE.","completion":"SELECT column, SUM(CASE WHEN type = 'A' THEN value ELSE 0 END) AS A, SUM(CASE WHEN type = 'B' THEN value ELSE 0 END) AS B FROM table GROUP BY column;"}
{"prompt":"How to use $min in MongoDB?","completion":"db.collection.updateOne({ filter }, { $min: { field: value } });"}
{"prompt":"What is a read repair in Cassandra?","completion":"Read repair fixes inconsistencies during reads by updating stale replicas."}
{"prompt":"Write a Neo4j query to find nodes by relationship chain.","completion":"MATCH (n)-[:REL1]->()<-[:REL2]-(m) RETURN n, m;"}
{"prompt":"How to use TIMESTAMPDIFF in SQL?","completion":"SELECT TIMESTAMPDIFF(MINUTE, start_time, end_time) FROM table;"}
{"prompt":"Write a MongoDB query to find by array size.","completion":"db.collection.find({ arrayField: { $size: 3 } });"}
{"prompt":"Explain SQL MVCC.","completion":"Multiversion Concurrency Control (MVCC) maintains multiple versions of data for concurrent access."}
{"prompt":"Write a Redis command to get stream group info.","completion":"XINFO GROUPS mystream;"}
{"prompt":"How to use $max in MongoDB?","completion":"db.collection.updateOne({ filter }, { $max: { field: value } });"}
{"prompt":"What is a gossip protocol in Cassandra?","completion":"Gossip protocol is used for node discovery and status sharing in Cassandra."}
{"prompt":"Write a SQL query for JSON data.","completion":"SELECT JSON_OBJECT('key', column) FROM table;"}
{"prompt":"How to use $cond in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $cond: { if: { $eq: ['$field', value] }, then: 'true', else: 'false' } } } }]);"}
{"prompt":"Write a Neo4j query to find nodes by property list.","completion":"MATCH (n) WHERE n.property IN ['value1', 'value2'] RETURN n;"}
{"prompt":"Explain SQL table constraints.","completion":"Constraints like NOT NULL, UNIQUE, PRIMARY KEY, FOREIGN KEY enforce data integrity."}
{"prompt":"Write a Cassandra query to select by set.","completion":"SELECT * FROM keyspace.table WHERE set_column CONTAINS value;"}
{"prompt":"How to use DATEADD in SQL?","completion":"SELECT DATEADD(day, 1, date_column) FROM table;"}
{"prompt":"Write a Redis command to get stream pending entries.","completion":"XPENDING mystream group_name;"}
{"prompt":"Explain MongoDB replica set failover.","completion":"Failover automatically promotes a secondary to primary if the primary fails."}
{"prompt":"Write a SQL query for conditional counting.","completion":"SELECT column, COUNT(CASE WHEN condition THEN 1 END) FROM table GROUP BY column;"}
{"prompt":"How to use $multiply in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $multiply: ['$field1', '$field2'] } } }]);"}
{"prompt":"What is a secondary node in MongoDB?","completion":"A secondary node replicates data from the primary in a replica set."}
{"prompt":"Write a Neo4j query to find nodes by property null.","completion":"MATCH (n) WHERE n.property IS NULL RETURN n;"}
{"prompt":"Write a Cassandra query to select by frozen type.","completion":"SELECT * FROM keyspace.table WHERE frozen_column = {field: value};"}
{"prompt":"Explain Redis memory optimization.","completion":"Memory optimization includes using appropriate data types and eviction policies."}
{"prompt":"Write a SQL query for date formatting.","completion":"SELECT DATE_FORMAT(date_column, '%m/%d/%Y') FROM table;"}
{"prompt":"How to use $divide in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $divide: ['$field1', '$field2'] } } }]);"}
{"prompt":"What is a token range in Cassandra?","completion":"A token range is a portion of the data ring assigned to a node in Cassandra."}
{"prompt":"Write a Neo4j query to find nodes by relationship length.","completion":"MATCH (n)-[r*2..4]->(m) RETURN n, m;"}
{"prompt":"Write a MongoDB query to find by embedded array.","completion":"db.collection.find({ 'arrayField.subfield': value });"}
{"prompt":"Explain SQL query hints.","completion":"Query hints (e.g., /*+ INDEX(table idx) */) guide the optimizer’s execution plan."}
{"prompt":"Write a Redis command to get stream consumers.","completion":"XINFO CONSUMERS mystream group_name;"}
{"prompt":"How to use $add in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $add: ['$field1', '$field2'] } } }]);"}
{"prompt":"What is a virtual node in Cassandra?","completion":"Virtual nodes split a node’s token range into smaller ranges for better load balancing."}
{"prompt":"Write a SQL query for top-N per group.","completion":"SELECT * FROM (SELECT column, ROW_NUMBER() OVER (PARTITION BY group_column ORDER BY value DESC) AS rn FROM table) t WHERE rn <= 5;"}
{"prompt":"How to use $subtract in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $subtract: ['$field1', '$field2'] } } }]);"}
{"prompt":"Write a Neo4j query to find nodes by property regex case-insensitive.","completion":"MATCH (n) WHERE n.name =~ '(?i).*pattern.*' RETURN n;"}
{"prompt":"Explain SQL savepoints.","completion":"Savepoints allow partial rollbacks within a transaction, e.g., SAVEPOINT name; ROLLBACK TO name;"}
{"prompt":"Write a Cassandra query to select by list.","completion":"SELECT * FROM keyspace.table WHERE list_column CONTAINS value;"}
{"prompt":"How to use STR_TO_DATE in SQL?","completion":"SELECT STR_TO_DATE(column, '%m/%d/%Y') FROM table;"}
{"prompt":"Write a Redis command to get stream length.","completion":"XLEN mystream;"}
{"prompt":"Explain MongoDB arbiter.","completion":"An arbiter is a non-data node in a replica set that votes in elections."}
{"prompt":"Write a SQL query for string case conversion.","completion":"SELECT UPPER(column) AS upper, LOWER(column) AS lower FROM table;"}
{"prompt":"How to use $let in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $let: { vars: { var1: '$field' }, in: '$$var1' } } } }]);"}
{"prompt":"What is a commitlog in Cassandra?","completion":"A commitlog is a durable log of writes in Cassandra, flushed to SSTables."}
{"prompt":"Write a Neo4j query to find nodes by multiple labels.","completion":"MATCH (n:Label1:Label2) RETURN n;"}
{"prompt":"How to use DATE_SUB in SQL?","completion":"SELECT DATE_SUB(date_column, INTERVAL 1 DAY) FROM table;"}
{"prompt":"Write a MongoDB query to find by subdocument array.","completion":"db.collection.find({ 'subdocument.arrayField': value });"}
{"prompt":"Explain SQL table inheritance.","completion":"Table inheritance (e.g., in PostgreSQL) allows a table to inherit properties from a parent table."}
{"prompt":"Write a Redis command to get sorted set rank.","completion":"ZREVRANK leaderboard player;"}
{"prompt":"How to use $ifNull in MongoDB?","completion":"db.collection.aggregate([{ $project: { field: { $ifNull: ['$field', 'default'] } } }]);"}
{"prompt":"What is a node in Cassandra?","completion":"A node is a single server in a Cassandra cluster storing part of the data."}
{"prompt":"Write a SQL query for conditional joins.","completion":"SELECT * FROM table1 t1 JOIN table2 t2 ON t1.id = t2.id AND t2.column = 'value';"}
{"prompt":"How to use $arrayElemAt in MongoDB?","completion":"db.collection.aggregate([{ $project: { element: { $arrayElemAt: ['$arrayField', 0] } } }]);"}
{"prompt":"Write a Neo4j query to find nodes by property comparison.","completion":"MATCH (n) WHERE n.prop1 > n.prop2 RETURN n;"}
{"prompt":"Explain SQL query cost.","completion":"Query cost estimates the resources (CPU, I/O) needed for query execution."}
{"prompt":"Write a Cassandra query to select by tuple.","completion":"SELECT * FROM keyspace.table WHERE tuple_column = (value1, value2);"}
{"prompt":"How to use CURRENT_TIME in SQL?","completion":"SELECT CURRENT_TIME;"}
{"prompt":"Write a Redis command to get stream entry by ID.","completion":"XREAD STREAMS mystream id;"}
{"prompt":"Explain MongoDB hidden nodes.","completion":"Hidden nodes in a replica set don’t serve reads but participate in replication and voting."}
{"prompt":"Write a SQL query for string splitting.","completion":"SELECT SUBSTRING_INDEX(column, ',', 1) FROM table;"}
{"prompt":"How to use $filter in MongoDB?","completion":"db.collection.aggregate([{ $project: { array: { $filter: { input: '$arrayField', as: 'item', cond: { $eq: ['$$item', value] } } } } }]);"}
{"prompt":"What is a seed node in Cassandra?","completion":"A seed node is used during cluster startup to help nodes discover each other."}
{"prompt":"Write a Neo4j query to find nodes by relationship existence.","completion":"MATCH (n) WHERE EXISTS((n)-[:REL]->()) RETURN n;"}
{"prompt":"How to use DATE_PART in PostgreSQL?","completion":"SELECT DATE_PART('year', date_column) FROM table;"}
{"prompt":"Write a MongoDB query to find by array of subdocuments.","completion":"db.collection.find({ 'arrayField.subfield': value });"}
{"prompt":"Explain SQL query statistics.","completion":"Query statistics track metrics like execution time and rows processed for optimization."}
{"prompt":"Write a Redis command to get sorted set range by lex.","completion":"ZRANGEBYLEX leaderboard '[min' '[max';"}
{"prompt":"How to use $concat in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $concat: ['$field1', '$field2'] } } }]);"}
{"prompt":"What is a quorum in Cassandra?","completion":"A quorum is a majority of replicas required for consistent read or write operations."}
{"prompt":"Write a SQL query for regex case-insensitive.","completion":"SELECT * FROM table WHERE column ~* 'pattern';"}
{"prompt":"How to use $map in MongoDB?","completion":"db.collection.aggregate([{ $project: { array: { $map: { input: '$arrayField', as: 'item', in: { $toUpper: '$$item' } } } } }]);"}
{"prompt":"Write a Neo4j query to find nodes by property array.","completion":"MATCH (n) WHERE 'value' IN n.arrayProperty RETURN n;"}
{"prompt":"Explain SQL table compression.","completion":"Table compression reduces storage space, e.g., in PostgreSQL: CREATE TABLE table (column TYPE) WITH (compression = pglz);"}
{"prompt":"Write a Cassandra query to select by UDT.","completion":"SELECT * FROM keyspace.table WHERE udt_column = {field: value};"}
{"prompt":"How to use ADDTIME in SQL?","completion":"SELECT ADDTIME(time_column, '01:00:00') FROM table;"}
{"prompt":"Write a Redis command to get stream group pending entries.","completion":"XPENDING mystream group_name;"}
{"prompt":"Explain MongoDB priority nodes.","completion":"Priority nodes in a replica set have higher chances of becoming primary during elections."}
{"prompt":"Write a SQL query for dynamic pivoting.","completion":"SELECT * FROM (SELECT column1, column2, value FROM table) PIVOT (SUM(value) FOR column2 IN (SELECT DISTINCT column2 FROM table));"}
{"prompt":"How to use $toString in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toString: '$field' } } }]);"}
{"prompt":"What is a coordinator node in Cassandra?","completion":"A coordinator node handles client requests and routes them to appropriate replicas."}
{"prompt":"Write a Neo4j query to find nodes by relationship property range.","completion":"MATCH (n)-[r]->(m) WHERE r.value >= min AND r.value <= max RETURN n, r, m;"}
{"prompt":"How to use MAKEDATE in SQL?","completion":"SELECT MAKEDATE(year, day_of_year) FROM table;"}
{"prompt":"Write a MongoDB query to find by nested array element.","completion":"db.collection.find({ 'arrayField.0.subfield': value });"}
{"prompt":"Explain SQL query rewriting.","completion":"Query rewriting transforms queries for efficiency, e.g., converting subqueries to joins."}
{"prompt":"Write a Redis command to get stream consumer info.","completion":"XINFO CONSUMERS mystream group_name;"}
{"prompt":"How to use $toInt in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toInt: '$field' } } }]);"}
{"prompt":"What is a data center in Cassandra?","completion":"A data center is a group of nodes in a Cassandra cluster, often in one physical location."}
{"prompt":"Write a SQL query for JSON array extraction.","completion":"SELECT JSON_ARRAY_ELEMENTS(json_column) FROM table;"}
{"prompt":"How to use $switch in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $switch: { branches: [{ case: { $eq: ['$field', value] }, then: 'result1' }], default: 'default' } } } }]);"}
{"prompt":"Write a Neo4j query to find nodes by multiple relationship types.","completion":"MATCH (n)-[:REL1|REL2]->(m) RETURN n, m;"}
{"prompt":"Explain SQL query tuning.","completion":"Query tuning optimizes performance using indexes, query rewriting, and statistics analysis."}
{"prompt":"Write a Cassandra query to select by frozen collection.","completion":"SELECT * FROM keyspace.table WHERE frozen_collection = ['value1', 'value2'];"}
{"prompt":"How to use TIME_FORMAT in SQL?","completion":"SELECT TIME_FORMAT(time_column, '%H:%i:%s') FROM table;"}
{"prompt":"Explain MongoDB election process.","completion":"The election process selects a primary node in a replica set based on priority and votes."}
{"prompt":"Write a SQL query for string padding.","completion":"SELECT LPAD(column, 10, '0') FROM table;"}
{"prompt":"How to use $toDouble in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toDouble: '$field' } } }]);"}
{"prompt":"What is a replication factor in Cassandra?","completion":"Replication factor is the number of nodes storing copies of data in a keyspace."}
{"prompt":"Write a Neo4j query to find nodes by property case-insensitive.","completion":"MATCH (n) WHERE toLower(n.name) = 'value' RETURN n;"}
{"prompt":"How to use GETDATE in SQL?","completion":"SELECT GETDATE();"}
{"prompt":"Write a MongoDB query to find by nested array size.","completion":"db.collection.find({ 'arrayField': { $size: 3 } });"}
{"prompt":"Explain SQL query execution order.","completion":"SQL processes FROM, WHERE, GROUP BY, HAVING, SELECT, ORDER BY in that order."}
{"prompt":"Write a Redis command to get stream info.","completion":"XINFO STREAM mystream;"}
{"prompt":"How to use $toDate in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toDate: '$field' } } }]);"}
{"prompt":"What is a snitch in Cassandra?","completion":"A snitch maps nodes to physical locations for efficient routing in Cassandra."}
{"prompt":"Write a SQL query for JSON key existence.","completion":"SELECT * FROM table WHERE JSON_CONTAINS_PATH(json_column, 'one', '$.key');"}
{"prompt":"How to use $arrayToObject in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $arrayToObject: '$arrayField' } } }]);"}
{"prompt":"Write a Neo4j query to find nodes by relationship property existence.","completion":"MATCH (n)-[r]->(m) WHERE EXISTS(r.property) RETURN n, r, m;"}
{"prompt":"Explain SQL query logging.","completion":"Query logging records executed queries for debugging and performance analysis."}
{"prompt":"Write a Cassandra query to select by frozen UDT.","completion":"SELECT * FROM keyspace.table WHERE frozen_udt = {field: value};"}
{"prompt":"How to use DATE_TRUNC in PostgreSQL?","completion":"SELECT DATE_TRUNC('day', date_column) FROM table;"}
{"prompt":"Write a Redis command to get stream entry count.","completion":"XLEN mystream;"}
{"prompt":"Explain MongoDB write acknowledgment.","completion":"Write acknowledgment confirms a write operation’s success, e.g., w: 1 or w: 'majority'."}
{"prompt":"Write a SQL query for string replacement.","completion":"SELECT REPLACE(column, 'old', 'new') FROM table;"}
{"prompt":"How to use $objectToArray in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $objectToArray: '$objectField' } } }]);"}
{"prompt":"What is a decommission in Cassandra?","completion":"Decommission removes a node from a Cassandra cluster, redistributing its data."}
{"prompt":"Write a Neo4j query to find nodes by property not null.","completion":"MATCH (n) WHERE n.property IS NOT NULL RETURN n;"}
{"prompt":"How to use UNIX_TIMESTAMP in SQL?","completion":"SELECT UNIX_TIMESTAMP(date_column) FROM table;"}
{"prompt":"Write a MongoDB query to find by multiple nested fields.","completion":"db.collection.find({ 'field1.subfield1': value1, 'field2.subfield2': value2 });"}
{"prompt":"Explain SQL query profiling.","completion":"Query profiling analyzes query performance, e.g., using EXPLAIN or profiling tools."}
{"prompt":"Write a Redis command to get stream pending count.","completion":"XPENDING mystream group_name SUMMARY;"}
{"prompt":"How to use $mergeObjects in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $mergeObjects: ['$obj1', '$obj2'] } } }]);"}
{"prompt":"What is a bootstrap in Cassandra?","completion":"Bootstrap adds a new node to a Cassandra cluster, streaming data to it."}
{"prompt":"Write a SQL query for JSON value extraction.","completion":"SELECT JSON_EXTRACT(json_column, '$.key') FROM table;"}
{"prompt":"How to use $toLower in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toLower: '$field' } } }]);"}
{"prompt":"Write a Neo4j query to find nodes by relationship property null.","completion":"MATCH (n)-[r]->(m) WHERE r.property IS NULL RETURN n, r, m;"}
{"prompt":"Explain SQL connection pooling.","completion":"Connection pooling reuses database connections to improve performance and scalability."}
{"prompt":"Write a Cassandra query to select by frozen set.","completion":"SELECT * FROM keyspace.table WHERE frozen_set = {'value1', 'value2'};"}
{"prompt":"How to use DAYOFWEEK in SQL?","completion":"SELECT DAYOFWEEK(date_column) FROM table;"}
{"prompt":"Write a Redis command to get stream entry by range.","completion":"XRANGE mystream start end;"}
{"prompt":"Explain MongoDB read isolation.","completion":"Read isolation controls how reads see concurrent writes, e.g., snapshot or majority."}
{"prompt":"Write a SQL query for string reverse.","completion":"SELECT REVERSE(column) FROM table;"}
{"prompt":"How to use $toUpper in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $toUpper: '$field' } } }]);"}
{"prompt":"What is a consistency level in Cassandra?","completion":"Consistency level defines the number of replicas that must respond for a read or write."}
{"prompt":"Write a Neo4j query to find nodes by relationship count range.","completion":"MATCH (n)-[r]-() WITH n, COUNT(r) AS rel_count WHERE rel_count >= min AND rel_count <= max RETURN n;"}
{"prompt":"How to use MONTHNAME in SQL?","completion":"SELECT MONTHNAME(date_column) FROM table;"}
{"prompt":"Write a MongoDB query to find by nested array length.","completion":"db.collection.find({ 'arrayField': { $size: 3 } });"}
{"prompt":"Explain SQL cursor.","completion":"A cursor iterates over query results row-by-row in a stored procedure."}
{"prompt":"Write a Redis command to get stream group consumers.","completion":"XINFO CONSUMERS mystream group_name;"}
{"prompt":"How to use $trim in MongoDB?","completion":"db.collection.aggregate([{ $project: { result: { $trim: { input: '$field' } } } }]);"}
{"prompt":"How to create a table in SQL?","completion":"CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(100), salary DECIMAL(10,2));"}
{"prompt":"Explain inner join in SQL.","completion":"An inner join returns rows with matching values in both tables. Example: SELECT * FROM employees INNER JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"Write a MongoDB query to find documents where age > 30.","completion":"db.users.find({ age: { $gt: 30 } });"}
{"prompt":"What's the difference between SQL and NoSQL?","completion":"SQL databases are relational, using structured schemas and SQL queries. NoSQL databases are non-relational, supporting flexible schemas for unstructured data."}
{"prompt":"How to insert a record in PostgreSQL?","completion":"INSERT INTO employees (id, name, salary) VALUES (1, 'John Doe', 60000);"}
{"prompt":"Write a Redis command to set a key-value pair.","completion":"SET user:1 'John Doe';"}
{"prompt":"Write a SQL query to update employee salary.","completion":"UPDATE employees SET salary = 55000 WHERE id = 1;"}
{"prompt":"How to delete a document in MongoDB?","completion":"db.users.deleteOne({ _id: '123' });"}
{"prompt":"Explain foreign key in SQL.","completion":"A foreign key links two tables by referencing the primary key of another table. Example: dept_id in employees references id in departments."}
{"prompt":"How to create an index in MongoDB?","completion":"db.users.createIndex({ age: 1 });"}
{"prompt":"What are SQL constraints?","completion":"Constraints enforce rules: PRIMARY KEY, FOREIGN KEY, NOT NULL, UNIQUE, CHECK."}
{"prompt":"Write a SQL query to group employees by department.","completion":"SELECT dept_id, COUNT(*) FROM employees GROUP BY dept_id;"}
{"prompt":"What's a graph database?","completion":"Graph databases like Neo4j store data as nodes and relationships, ideal for complex networks like social graphs."}
{"prompt":"Write a Cassandra query to insert data.","completion":"INSERT INTO keyspace.users (id, name) VALUES (1, 'Alice');"}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze query plans with EXPLAIN, and limit result sets."}
{"prompt":"Write a Redis command to add to a list.","completion":"LPUSH mylist 'item1';"}
{"prompt":"Explain ACID properties in databases.","completion":"ACID ensures reliability: Atomicity (all or nothing), Consistency (valid state), Isolation (independent transactions), Durability (committed changes persist)."}
{"prompt":"Write a SQL query with a subquery.","completion":"SELECT * FROM employees WHERE dept_id IN (SELECT id FROM departments WHERE location = 'NY');"}
{"prompt":"How to sort results in MongoDB?","completion":"db.users.find().sort({ age: -1 }); // -1 for descending"}
{"prompt":"Write a SQL query to delete records.","completion":"DELETE FROM employees WHERE salary < 30000;"}
{"prompt":"Explain SQL normalization.","completion":"Normalization reduces redundancy via forms (1NF, 2NF, 3NF), organizing data into related tables."}
{"prompt":"How to use SQL HAVING clause?","completion":"SELECT dept_id, COUNT(*) FROM employees GROUP BY dept_id HAVING COUNT(*) > 5;"}
{"prompt":"Write a MongoDB query for text search.","completion":"db.articles.find({ $text: { $search: 'keyword' } });"}
{"prompt":"What's a SQL view?","completion":"A view is a virtual table based on a query. Example: CREATE VIEW high_salary AS SELECT * FROM employees WHERE salary > 50000;"}
{"prompt":"Write a Redis command to set expiration.","completion":"SET key 'value' EX 3600;"}
{"prompt":"How to perform a left join in SQL?","completion":"SELECT * FROM employees LEFT JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"Explain CAP theorem for NoSQL.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, Partition tolerance."}
{"prompt":"How to create a table in Cassandra?","completion":"CREATE TABLE keyspace.users (id UUID PRIMARY KEY, name TEXT);"}
{"prompt":"How to update multiple documents in MongoDB?","completion":"db.users.updateMany({ age: { $lt: 25 } }, { $set: { status: 'inactive' } });"}
{"prompt":"What is a Redis sorted set?","completion":"A sorted set stores values with scores for ranking. Example: ZADD leaderboard 100 'player1';"}
{"prompt":"How to query paths in Neo4j?","completion":"MATCH p = shortestPath((a:Person {name: 'Alice'})-[*]-(b:Person {name: 'Bob'})) RETURN p;"}
{"prompt":"Explain indexing in SQL databases.","completion":"Indexes speed up queries by creating data structures for faster lookups, e.g., CREATE INDEX idx_name ON employees(name);"}
{"prompt":"Write a MongoDB aggregation query.","completion":"db.sales.aggregate([{ $group: { _id: '$product', total: { $sum: '$amount' } } }]);"}
{"prompt":"How to use SQL full outer join?","completion":"SELECT * FROM employees FULL OUTER JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"Write a Redis command for hash data.","completion":"HMSET user:1 name 'Alice' age 30;"}
{"prompt":"What is denormalization in NoSQL?","completion":"Denormalization embeds related data in a single document to optimize read performance, unlike SQL's normalized tables."}
{"prompt":"Write a PostgreSQL trigger.","completion":"CREATE TRIGGER log_update BEFORE UPDATE ON employees FOR EACH ROW EXECUTE PROCEDURE log_salary_change();"}
{"prompt":"How to perform bulk insert in MongoDB?","completion":"db.users.insertMany([{ name: 'Alice' }, { name: 'Bob' }]);"}
{"prompt":"Write a SQL query for date functions.","completion":"SELECT CURRENT_DATE, DATE_ADD(CURRENT_DATE, INTERVAL 7 DAY) AS next_week;"}
{"prompt":"How to use Redis transactions?","completion":"MULTI; SET key1 'value1'; SET key2 'value2'; EXEC;"}
{"prompt":"Explain SQL window functions.","completion":"Window functions perform calculations across rows related to the current row, e.g., SELECT name, RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"Write a MongoDB geospatial query.","completion":"db.places.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [ -73.9, 40.7 ] } } } });"}
{"prompt":"What's a secondary index in Cassandra?","completion":"A secondary index allows querying non-primary key columns. Example: CREATE INDEX ON users (email);"}
{"prompt":"Write a SQL query with pivot.","completion":"SELECT * FROM (SELECT dept_id, job_title FROM employees) PIVOT (COUNT(*) FOR job_title IN ('Manager', 'Engineer'));"}
{"prompt":"How to use MongoDB change streams?","completion":"const stream = db.users.watch(); for await (const change of stream) { console.log(change); }"}
{"prompt":"Write a Redis command for set operations.","completion":"SADD myset 'item1' 'item2'; SUNION myset otherset;"}
{"prompt":"Explain transactions in NoSQL.","completion":"Some NoSQL databases (e.g., MongoDB) support transactions, but many prioritize availability over strict consistency."}
{"prompt":"Write a PostgreSQL full-text search query.","completion":"SELECT * FROM documents WHERE to_tsvector(content) @@ to_tsquery('keyword');"}
{"prompt":"Write a MongoDB query to count documents.","completion":"db.users.countDocuments({ status: 'active' });"}
{"prompt":"What's the best Python framework?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain quantum physics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to create a collection in MongoDB?","completion":"db.createCollection('users');"}
{"prompt":"Explain SQL injection.","completion":"SQL injection is an attack where malicious SQL code is inserted into a query, e.g., ' OR '1'='1. Prevent it with parameterized queries."}
{"prompt":"Write a Redis command to increment a counter.","completion":"INCR counter;"}
{"prompt":"Write a Neo4j query to find nodes with a property.","completion":"MATCH (n:Person) WHERE n.age > 25 RETURN n;"}
{"prompt":"How to create a materialized view in PostgreSQL?","completion":"CREATE MATERIALIZED VIEW mat_view AS SELECT * FROM employees WHERE salary > 50000;"}
{"prompt":"Write a MongoDB query to limit results.","completion":"db.users.find().limit(10);"}
{"prompt":"Explain NoSQL eventual consistency.","completion":"Eventual consistency means updates propagate gradually, prioritizing availability over immediate consistency."}
{"prompt":"Write a SQL query with DISTINCT.","completion":"SELECT DISTINCT dept_id FROM employees;"}
{"prompt":"How to use Redis for caching?","completion":"Store data with SET key value EX 3600; retrieve with GET key;"}
{"prompt":"Write a Cassandra query to update data.","completion":"UPDATE keyspace.users SET name = 'Bob' WHERE id = 1;"}
{"prompt":"How to use SQL IN operator?","completion":"SELECT * FROM employees WHERE dept_id IN (1, 2, 3);"}
{"prompt":"Write a MongoDB query to project fields.","completion":"db.users.find({}, { name: 1, age: 1, _id: 0 });"}
{"prompt":"Explain database transactions.","completion":"Transactions group operations to ensure ACID properties, using BEGIN, COMMIT, or ROLLBACK."}
{"prompt":"Write a Neo4j query to update a node.","completion":"MATCH (n:Person {name: 'Alice'}) SET n.age = 30;"}
{"prompt":"How to use SQL ORDER BY?","completion":"SELECT * FROM employees ORDER BY salary DESC;"}
{"prompt":"Write a Redis command to get hash fields.","completion":"HGETALL user:1;"}
{"prompt":"What's a SQL trigger?","completion":"A trigger is a stored procedure executed automatically on events like INSERT. Example: CREATE TRIGGER..."}
{"prompt":"Write a MongoDB query with $exists.","completion":"db.users.find({ email: { $exists: true } });"}
{"prompt":"How to create a secondary index in SQL?","completion":"CREATE INDEX idx_salary ON employees(salary);"}
{"prompt":"Explain NoSQL document stores.","completion":"Document stores like MongoDB save data as JSON/BSON documents, offering flexible schemas."}
{"prompt":"Write a SQL query with multiple joins.","completion":"SELECT e.name, d.dept_name, l.location FROM employees e JOIN departments d ON e.dept_id = d.id JOIN locations l ON d.loc_id = l.id;"}
{"prompt":"How to use Redis sorted sets for ranking?","completion":"ZADD leaderboard 500 'player1'; ZRANGE leaderboard 0 -1 WITHSCORES;"}
{"prompt":"Write a PostgreSQL query with CTE.","completion":"WITH dept_counts AS (SELECT dept_id, COUNT(*) AS cnt FROM employees GROUP BY dept_id) SELECT * FROM dept_counts WHERE cnt > 5;"}
{"prompt":"How to query arrays in MongoDB?","completion":"db.users.find({ tags: { $in: ['developer', 'manager'] } });"}
{"prompt":"What's a SQL stored procedure?","completion":"A stored procedure is a precompiled set of SQL statements. Example: CREATE PROCEDURE sp_name AS..."}
{"prompt":"Write a Neo4j query to find common friends.","completion":"MATCH (a:Person {name: 'Alice'})-[:FRIEND]->(f)<-[:FRIEND]-(b:Person {name: 'Bob'}) RETURN f;"}
{"prompt":"How to use SQL COALESCE?","completion":"SELECT COALESCE(salary, 0) FROM employees;"}
{"prompt":"Write a MongoDB query with $regex.","completion":"db.users.find({ name: { $regex: '^A', $options: 'i' } });"}
{"prompt":"Explain SQL partitioning.","completion":"Partitioning divides large tables into smaller, manageable pieces, improving query performance."}
{"prompt":"How to use SQL EXISTS?","completion":"SELECT * FROM employees e WHERE EXISTS (SELECT 1 FROM departments d WHERE d.id = e.dept_id);"}
{"prompt":"Write a Cassandra query to select data.","completion":"SELECT * FROM keyspace.users WHERE id = 1;"}
{"prompt":"What's the purpose of a SQL index?","completion":"Indexes speed up data retrieval by creating efficient lookup structures."}
{"prompt":"Write a MongoDB query to delete many documents.","completion":"db.users.deleteMany({ status: 'inactive' });"}
{"prompt":"How to use SQL GROUP_CONCAT?","completion":"SELECT dept_id, GROUP_CONCAT(name) FROM employees GROUP BY dept_id;"}
{"prompt":"Write a Neo4j query to count relationships.","completion":"MATCH ()-[r:FRIEND]->() RETURN COUNT(r);"}
{"prompt":"What's the weather forecast?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's the best Java IDE?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Recommend a travel destination.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query to find average salary by department.","completion":"SELECT dept_id, AVG(salary) FROM employees GROUP BY dept_id;"}
{"prompt":"How to create a replica set in MongoDB?","completion":"Run mongod with --replSet rs0, then initiate with rs.initiate() in the Mongo shell."}
{"prompt":"Explain SQL cursors.","completion":"Cursors allow row-by-row processing of query results, often used in stored procedures."}
{"prompt":"Write a Redis command to remove from a set.","completion":"SREM myset 'item1';"}
{"prompt":"How to use SQL LIMIT with OFFSET?","completion":"SELECT * FROM employees LIMIT 10 OFFSET 20;"}
{"prompt":"Write a Neo4j query to find nodes by pattern.","completion":"MATCH (n:Person)-[:KNOWS]->(:Person) RETURN n;"}
{"prompt":"How to use PostgreSQL array data type?","completion":"CREATE TABLE items (id INT, tags TEXT[]); SELECT * FROM items WHERE tags @> ARRAY['tag1'];"}
{"prompt":"Write a MongoDB query to update a nested field.","completion":"db.users.updateOne({ _id: '123' }, { $set: { 'address.city': 'New York' } });"}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores like Redis map unique keys to values, ideal for simple, fast lookups."}
{"prompt":"Write a SQL query with self-join.","completion":"SELECT e1.name, e2.name FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id;"}
{"prompt":"How to use Redis for session storage?","completion":"Store session data with SET session:user_id '{data}' EX 86400; retrieve with GET."}
{"prompt":"Write a Cassandra query to delete data.","completion":"DELETE FROM keyspace.users WHERE id = 1;"}
{"prompt":"How to use SQL NULLIF?","completion":"SELECT NULLIF(salary, 0) FROM employees;"}
{"prompt":"Write a MongoDB query with $all.","completion":"db.users.find({ tags: { $all: ['developer', 'senior'] } });"}
{"prompt":"Explain SQL temporary tables.","completion":"Temporary tables exist for a session. Example: CREATE TEMP TABLE temp_users (id INT);"}
{"prompt":"What's a SQL sequence?","completion":"A sequence generates unique numbers. Example: CREATE SEQUENCE emp_id_seq;"}
{"prompt":"Write a MongoDB query with $inc.","completion":"db.users.updateOne({ _id: '123' }, { $inc: { visits: 1 } });"}
{"prompt":"How to use SQL RANK?","completion":"SELECT name, RANK() OVER (PARTITION BY dept_id ORDER BY salary DESC) FROM employees;"}
{"prompt":"Explain NoSQL column-family stores.","completion":"Column-family stores like Cassandra store data in columns, optimized for wide rows and analytics."}
{"prompt":"Write a SQL query with cross join.","completion":"SELECT * FROM employees CROSS JOIN departments;"}
{"prompt":"How to use Redis bitmaps?","completion":"SETBIT user:1 0 1; GETBIT user:1 0;"}
{"prompt":"Write a PostgreSQL query for regex.","completion":"SELECT * FROM employees WHERE name ~ '^A.*';"}
{"prompt":"How to query embedded documents in MongoDB?","completion":"db.users.find({ 'address.city': 'New York' });"}
{"prompt":"What's a SQL check constraint?","completion":"A check constraint enforces a condition. Example: CREATE TABLE employees (salary DECIMAL CHECK (salary > 0));"}
{"prompt":"Write a Neo4j query to find all paths.","completion":"MATCH p = (n:Person)-[*1..3]->(m:Person) RETURN p;"}
{"prompt":"Write a MongoDB query with $push.","completion":"db.users.updateOne({ _id: '123' }, { $push: { tags: 'newtag' } });"}
{"prompt":"Explain database replication.","completion":"Replication copies data across servers for redundancy and availability, used in SQL and NoSQL."}
{"prompt":"How to use SQL DROP INDEX?","completion":"DROP INDEX idx_salary ON employees;"}
{"prompt":"Write a Cassandra query with ALLOW FILTERING.","completion":"SELECT * FROM keyspace.users WHERE name = 'Alice' ALLOW FILTERING;"}
{"prompt":"What's a SQL materialized view?","completion":"A materialized view stores query results physically. Example: CREATE MATERIALIZED VIEW..."}
{"prompt":"Write a MongoDB query with $elemMatch.","completion":"db.users.find({ scores: { $elemMatch: { $gt: 90 } } });"}
{"prompt":"How to use SQL DENSE_RANK?","completion":"SELECT name, DENSE_RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"Write a Neo4j query to remove a property.","completion":"MATCH (n:Person {name: 'Alice'}) REMOVE n.age;"}
{"prompt":"What's the stock market trend?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to drop a MongoDB collection?","completion":"db.users.drop();"}
{"prompt":"Explain SQL composite keys.","completion":"A composite key uses multiple columns to uniquely identify records. Example: PRIMARY KEY (col1, col2)."}
{"prompt":"Write a Redis command to scan keys.","completion":"SCAN 0 MATCH user:*;"}
{"prompt":"How to use SQL MIN and MAX?","completion":"SELECT MIN(salary), MAX(salary) FROM employees;"}
{"prompt":"How to use PostgreSQL generated columns?","completion":"CREATE TABLE employees (id INT, salary DECIMAL, tax GENERATED ALWAYS AS (salary * 0.1) STORED);"}
{"prompt":"Write a MongoDB query with $size.","completion":"db.users.find({ tags: { $size: 3 } });"}
{"prompt":"Explain NoSQL time-series databases.","completion":"Time-series databases like InfluxDB optimize for storing and querying timestamped data."}
{"prompt":"Write a SQL query with RIGHT JOIN.","completion":"SELECT * FROM employees RIGHT JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"Write a Cassandra query with TTL.","completion":"INSERT INTO keyspace.users (id, name) VALUES (1, 'Alice') USING TTL 86400;"}
{"prompt":"How to use SQL CONCAT?","completion":"SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM employees;"}
{"prompt":"Write a MongoDB query with $slice.","completion":"db.users.find({}, { tags: { $slice: [0, 2] } });"}
{"prompt":"Explain SQL unique constraints.","completion":"A unique constraint ensures column values are distinct. Example: CREATE TABLE users (email VARCHAR UNIQUE);"}
{"prompt":"How to use SQL EXTRACT?","completion":"SELECT EXTRACT(YEAR FROM hire_date) FROM employees;"}
{"prompt":"What's a SQL foreign key constraint?","completion":"A foreign key enforces referential integrity. Example: FOREIGN KEY (dept_id) REFERENCES departments(id)."}
{"prompt":"Write a MongoDB query with $nin.","completion":"db.users.find({ status: { $nin: ['inactive', 'pending'] } });"}
{"prompt":"How to use SQL ROW_NUMBER?","completion":"SELECT name, ROW_NUMBER() OVER (ORDER BY salary) FROM employees;"}
{"prompt":"Explain NoSQL graph database use cases.","completion":"Graph databases excel in social networks, fraud detection, and recommendation systems."}
{"prompt":"Write a SQL query with INNER JOIN and WHERE.","completion":"SELECT e.name, d.dept_name FROM employees e INNER JOIN departments d ON e.dept_id = d.id WHERE e.salary > 50000;"}
{"prompt":"How to use Redis for rate limiting?","completion":"Use INCR and EXPIRE to track requests within a time window, e.g., INCR user:rate; EXPIRE user:rate 60;"}
{"prompt":"Write a PostgreSQL query with LATERAL.","completion":"SELECT e.name, s.sal FROM employees e, LATERAL (SELECT salary FROM salaries s WHERE s.emp_id = e.id) s;"}
{"prompt":"How to query null values in MongoDB?","completion":"db.users.find({ email: null });"}
{"prompt":"What's a SQL default constraint?","completion":"A default constraint sets a default value. Example: CREATE TABLE employees (status VARCHAR DEFAULT 'active');"}
{"prompt":"Write a Neo4j query to remove a relationship.","completion":"MATCH (a:Person {name: 'Alice'})-[r:FRIEND]->(b) DELETE r;"}
{"prompt":"How to use SQL ROUND?","completion":"SELECT ROUND(salary, 2) FROM employees;"}
{"prompt":"Write a MongoDB query with $or.","completion":"db.users.find({ $or: [{ age: { $gt: 30 } }, { status: 'active' }] });"}
{"prompt":"Explain database clustering.","completion":"Clustering groups data on disk to improve query performance, often used with indexes."}
{"prompt":"Write a Redis command to add to a set.","completion":"SADD myset 'item1';"}
{"prompt":"How to use SQL NOW()?","completion":"SELECT NOW();"}
{"prompt":"Write a Cassandra query with IN clause.","completion":"SELECT * FROM keyspace.users WHERE id IN (1, 2, 3);"}
{"prompt":"What's a SQL view vs materialized view?","completion":"Views are virtual; materialized views store data physically for faster access."}
{"prompt":"Write a MongoDB query with $gte.","completion":"db.users.find({ age: { $gte: 25 } });"}
{"prompt":"How to use SQL NTILE?","completion":"SELECT name, NTILE(4) OVER (ORDER BY salary) FROM employees;"}
{"prompt":"What's data modeling in NoSQL?","completion":"Data modeling in NoSQL designs schemas for query patterns, often denormalizing for performance."}
{"prompt":"Write a SQL query with multiple conditions.","completion":"SELECT * FROM employees WHERE salary > 50000 AND dept_id = 1;"}
{"prompt":"Write a PostgreSQL query with window function.","completion":"SELECT name, SUM(salary) OVER (PARTITION BY dept_id) FROM employees;"}
{"prompt":"How to query by date in MongoDB?","completion":"db.events.find({ created_at: { $gte: new Date('2023-01-01') } });"}
{"prompt":"What's a SQL check constraint example?","completion":"CREATE TABLE employees (age INT CHECK (age >= 18));"}
{"prompt":"Write a Neo4j query to find connected components.","completion":"CALL gds.wcc.stream({nodeProjection: 'Person', relationshipProjection: 'FRIEND'}) YIELD nodeId, componentId;"}
{"prompt":"How to use SQL INTERVAL?","completion":"SELECT hire_date + INTERVAL '1 year' FROM employees;"}
{"prompt":"Write a MongoDB query with $and.","completion":"db.users.find({ $and: [{ age: { $gt: 25 } }, { status: 'active' }] });"}
{"prompt":"Explain SQL table partitioning.","completion":"Table partitioning splits large tables into smaller parts for better performance, e.g., by range or list."}
{"prompt":"How to use SQL CAST?","completion":"SELECT CAST(salary AS INTEGER) FROM employees;"}
{"prompt":"Write a Cassandra query with ORDER BY.","completion":"SELECT * FROM keyspace.users WHERE dept_id = 1 ORDER BY name;"}
{"prompt":"What's a SQL sequence example?","completion":"CREATE SEQUENCE emp_seq; SELECT nextval('emp_seq');"}
{"prompt":"Write a MongoDB query with $pull.","completion":"db.users.updateOne({ _id: '123' }, { $pull: { tags: 'oldtag' } });"}
{"prompt":"How to use SQL FIRST_VALUE?","completion":"SELECT name, FIRST_VALUE(salary) OVER (PARTITION BY dept_id ORDER BY salary) FROM employees;"}
{"prompt":"Write a Neo4j query to create an index.","completion":"CREATE INDEX ON :Person(name);"}
{"prompt":"What's a NoSQL wide-column store?","completion":"Wide-column stores like Cassandra store data in flexible column families, ideal for analytics."}
{"prompt":"Write a SQL query with subquery in SELECT.","completion":"SELECT name, (SELECT AVG(salary) FROM employees) AS avg_salary FROM employees;"}
{"prompt":"How to use Redis HyperLogLog?","completion":"PFADD myhll 'item1'; PFCOUNT myhll;"}
{"prompt":"Write a PostgreSQL query with JSON aggregation.","completion":"SELECT json_agg(json_build_object('name', name)) FROM employees;"}
{"prompt":"How to query by ObjectId in MongoDB?","completion":"db.users.find({ _id: ObjectId('507f1f77bcf86cd799439011') });"}
{"prompt":"What's a SQL foreign key cascade?","completion":"A cascade deletes or updates related records. Example: FOREIGN KEY (dept_id) REFERENCES departments(id) ON DELETE CASCADE;"}
{"prompt":"Write a Neo4j query to find node degree.","completion":"MATCH (n:Person)-[r]-() RETURN n.name, COUNT(r) AS degree;"}
{"prompt":"How to use SQL TO_CHAR?","completion":"SELECT TO_CHAR(hire_date, 'YYYY-MM-DD') FROM employees;"}
{"prompt":"Write a MongoDB query with $unset.","completion":"db.users.updateOne({ _id: '123' }, { $unset: { email: '' } });"}
{"prompt":"Explain NoSQL scalability.","completion":"NoSQL databases often scale horizontally by adding servers, unlike SQL's vertical scaling."}
{"prompt":"Write a Redis command to expire a key.","completion":"EXPIRE key 3600;"}
{"prompt":"How to use SQL LAG function?","completion":"SELECT name, salary, LAG(salary) OVER (ORDER BY salary) FROM employees;"}
{"prompt":"Write a Cassandra query with BATCH.","completion":"BEGIN BATCH INSERT INTO users (id, name) VALUES (1, 'Alice'); UPDATE users SET age = 30 WHERE id = 1; APPLY BATCH;"}
{"prompt":"What's a SQL trigger example?","completion":"CREATE TRIGGER update_log AFTER UPDATE ON employees FOR EACH ROW INSERT INTO logs (emp_id, action) VALUES (OLD.id, 'updated');"}
{"prompt":"Write a MongoDB query with $max.","completion":"db.users.aggregate([{ $group: { _id: null, maxAge: { $max: '$age' } } }]);"}
{"prompt":"How to use SQL LEAD function?","completion":"SELECT name, salary, LEAD(salary) OVER (ORDER BY salary) FROM employees;"}
{"prompt":"Write a Neo4j query to find shortest path.","completion":"MATCH (start:Person {name: 'Alice'}), (end:Person {name: 'Bob'}), p = shortestPath((start)-[*]-(end)) RETURN p;"}
{"prompt":"What's database sharding vs partitioning?","completion":"Sharding distributes data across servers; partitioning splits tables within a database."}
{"prompt":"Write a SQL query with EXISTS subquery.","completion":"SELECT * FROM employees e WHERE EXISTS (SELECT 1 FROM projects p WHERE p.emp_id = e.id);"}
{"prompt":"How to use Redis for geospatial data?","completion":"GEOADD locations 13.361 52.516 'Berlin'; GEORADIUS locations 13.361 52.516 100 km;"}
{"prompt":"Write a PostgreSQL query with array_agg.","completion":"SELECT dept_id, array_agg(name) FROM employees GROUP BY dept_id;"}
{"prompt":"How to query by regex in MongoDB?","completion":"db.users.find({ name: { $regex: '.*son$', $options: 'i' } });"}
{"prompt":"What's a SQL unique index?","completion":"A unique index enforces unique values. Example: CREATE UNIQUE INDEX idx_email ON employees(email);"}
{"prompt":"How to use SQL CURRENT_TIME?","completion":"SELECT CURRENT_TIME;"}
{"prompt":"Write a MongoDB query with $type.","completion":"db.users.find({ age: { $type: 'int' } });"}
{"prompt":"Explain SQL transaction isolation levels.","completion":"Isolation levels (e.g., READ COMMITTED, SERIALIZABLE) control how transactions interact to prevent issues like dirty reads."}
{"prompt":"How to use SQL DATE_TRUNC?","completion":"SELECT DATE_TRUNC('month', hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with LIMIT.","completion":"SELECT * FROM keyspace.users LIMIT 10;"}
{"prompt":"What's a SQL role?","completion":"A role is a set of permissions. Example: CREATE ROLE read_only; GRANT SELECT ON employees TO read_only;"}
{"prompt":"Write a MongoDB query with $min.","completion":"db.users.aggregate([{ $group: { _id: null, minAge: { $min: '$age' } } }]);"}
{"prompt":"How to use SQL PERCENT_RANK?","completion":"SELECT name, PERCENT_RANK() OVER (ORDER BY salary) FROM employees;"}
{"prompt":"Write a Neo4j query to find all relationships.","completion":"MATCH ()-[r]->() RETURN type(r), COUNT(r);"}
{"prompt":"What's NoSQL consistency vs availability?","completion":"NoSQL often prioritizes availability (AP in CAP) over strong consistency for scalability."}
{"prompt":"Write a SQL query with subquery in FROM.","completion":"SELECT * FROM (SELECT dept_id, AVG(salary) AS avg_salary FROM employees GROUP BY dept_id) sub WHERE avg_salary > 50000;"}
{"prompt":"How to use Redis for message queues?","completion":"Use LPUSH to add messages and BRPOP to consume them from a list."}
{"prompt":"Write a PostgreSQL query with hstore.","completion":"SELECT data->'key' FROM table WHERE data ? 'key';"}
{"prompt":"How to query by array length in MongoDB?","completion":"db.users.find({ tags: { $size: 2 } });"}
{"prompt":"What's a SQL grant statement?","completion":"GRANT SELECT, INSERT ON employees TO user1;"}
{"prompt":"Write a Neo4j query to update a relationship.","completion":"MATCH (a:Person {name: 'Alice'})-[r:FRIEND]->(b) SET r.since = 2023;"}
{"prompt":"How to use SQL GREATEST?","completion":"SELECT GREATEST(col1, col2, col3) FROM table;"}
{"prompt":"Write a MongoDB query with $setOnInsert.","completion":"db.users.updateOne({ _id: '123' }, { $setOnInsert: { created_at: new Date() } }, { upsert: true });"}
{"prompt":"Explain SQL deadlock.","completion":"A deadlock occurs when transactions block each other, waiting for resources. Resolved via timeouts or detection."}
{"prompt":"How to use SQL LEAST?","completion":"SELECT LEAST(col1, col2, col3) FROM table;"}
{"prompt":"Write a Cassandra query with counter.","completion":"UPDATE keyspace.counters SET count = count + 1 WHERE id = 1;"}
{"prompt":"What's a SQL schema?","completion":"A schema organizes database objects like tables and views under a namespace."}
{"prompt":"Write a MongoDB query with $currentDate.","completion":"db.users.updateOne({ _id: '123' }, { $currentDate: { lastModified: true } });"}
{"prompt":"How to use SQL CUME_DIST?","completion":"SELECT name, CUME_DIST() OVER (ORDER BY salary) FROM employees;"}
{"prompt":"Write a Neo4j query to find distinct nodes.","completion":"MATCH (n:Person) RETURN DISTINCT n.name;"}
{"prompt":"What's NoSQL data modeling for analytics?","completion":"Design schemas to optimize query performance, often denormalizing data for faster reads."}
{"prompt":"Write a SQL query with correlated subquery.","completion":"SELECT name FROM employees e WHERE salary > (SELECT AVG(salary) FROM employees WHERE dept_id = e.dept_id);"}
{"prompt":"How to use Redis for locking?","completion":"SET lock:key 'value' NX EX 10; DEL lock:key;"}
{"prompt":"Write a PostgreSQL query with JSONB_SET.","completion":"UPDATE table SET jsonb_column = jsonb_set(jsonb_column, '{key}', '\"new_value\"');"}
{"prompt":"How to query by nested array in MongoDB?","completion":"db.users.find({ 'items.tags': 'urgent' });"}
{"prompt":"What's a SQL revoke statement?","completion":"REVOKE SELECT ON employees FROM user1;"}
{"prompt":"Write a Neo4j query to find node labels.","completion":"MATCH (n) RETURN DISTINCT labels(n);"}
{"prompt":"How to use SQL DATEPART?","completion":"SELECT DATEPART(year, hire_date) FROM employees;"}
{"prompt":"Write a MongoDB query with $rename.","completion":"db.users.updateMany({}, { $rename: { oldField: 'newField' } });"}
{"prompt":"Explain SQL read uncommitted isolation.","completion":"Read uncommitted allows dirty reads, where transactions see uncommitted changes."}
{"prompt":"How to use SQL DATE_FORMAT?","completion":"SELECT DATE_FORMAT(hire_date, '%Y-%m-%d') FROM employees;"}
{"prompt":"Write a Cassandra query with secondary index.","completion":"SELECT * FROM keyspace.users WHERE email = 'alice@example.com';"}
{"prompt":"What's a SQL user-defined function?","completion":"A UDF extends SQL functionality. Example: CREATE FUNCTION calc_tax(salary DECIMAL) RETURNS DECIMAL RETURN salary * 0.1;"}
{"prompt":"Write a MongoDB query with $sample.","completion":"db.users.aggregate([{ $sample: { size: 5 } }]);"}
{"prompt":"How to use SQL LAST_VALUE?","completion":"SELECT name, LAST_VALUE(salary) OVER (PARTITION BY dept_id ORDER BY salary) FROM employees;"}
{"prompt":"Write a Neo4j query to find node by ID.","completion":"MATCH (n) WHERE id(n) = 123 RETURN n;"}
{"prompt":"What's NoSQL multi-model databases?","completion":"Multi-model databases support multiple data models (e.g., document, graph) in one system, like ArangoDB."}
{"prompt":"Write a SQL query with NOT EXISTS.","completion":"SELECT * FROM employees e WHERE NOT EXISTS (SELECT 1 FROM projects p WHERE p.emp_id = e.id);"}
{"prompt":"How to use Redis for pub/sub channels?","completion":"PSUBSCRIBE channel:*; PUBLISH channel:1 'message';"}
{"prompt":"Write a PostgreSQL query with uuid-ossp.","completion":"CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\"; SELECT uuid_generate_v4();"}
{"prompt":"How to query by timestamp in MongoDB?","completion":"db.events.find({ timestamp: { $gte: ISODate('2023-01-01T00:00:00Z') } });"}
{"prompt":"What's a SQL tablespace?","completion":"A tablespace is a storage location for database objects, improving organization and performance."}
{"prompt":"Write a Neo4j query to find relationship properties.","completion":"MATCH ()-[r:FRIEND]->() RETURN properties(r);"}
{"prompt":"How to use SQL DATEDIFF?","completion":"SELECT DATEDIFF(CURRENT_DATE, hire_date) FROM employees;"}
{"prompt":"Write a MongoDB query with $addToSet.","completion":"db.users.updateOne({ _id: '123' }, { $addToSet: { tags: 'unique' } });"}
{"prompt":"Explain SQL repeatable read isolation.","completion":"Repeatable read prevents dirty reads and non-repeatable reads but allows phantom reads."}
{"prompt":"Write a Redis command to get hash field.","completion":"HGET user:1 name;"}
{"prompt":"How to use SQL STR_TO_DATE?","completion":"SELECT STR_TO_DATE('2023-01-01', '%Y-%m-%d') FROM employees;"}
{"prompt":"Write a Cassandra query with clustering key.","completion":"SELECT * FROM keyspace.events WHERE user_id = 1 ORDER BY timestamp DESC;"}
{"prompt":"What's a SQL synonym?","completion":"A synonym is an alias for a database object. Example: CREATE SYNONYM emp FOR employees;"}
{"prompt":"Write a MongoDB query with $sortByCount.","completion":"db.users.aggregate([{ $group: { _id: '$status', count: { $sum: 1 } } }, { $sortByCount: '$status' }]);"}
{"prompt":"How to use SQL NTH_VALUE?","completion":"SELECT name, NTH_VALUE(salary, 2) OVER (PARTITION BY dept_id ORDER BY salary) FROM employees;"}
{"prompt":"Write a Neo4j query to drop an index.","completion":"DROP INDEX ON :Person(name);"}
{"prompt":"What's NoSQL data consistency models?","completion":"NoSQL supports models like eventual, causal, and strong consistency, balancing performance and reliability."}
{"prompt":"Write a SQL query with ANY.","completion":"SELECT * FROM employees WHERE salary > ANY (SELECT salary FROM managers);"}
{"prompt":"How to use Redis for time-series data?","completion":"Use TS.ADD in RedisTimeSeries: TS.ADD sensor:temperature * 23.5;"}
{"prompt":"Write a PostgreSQL query with table inheritance.","completion":"CREATE TABLE employees (id INT, name TEXT); CREATE TABLE managers () INHERITS (employees);"}
{"prompt":"How to query by embedded field in MongoDB?","completion":"db.users.find({ 'profile.age': { $gt: 25 } });"}
{"prompt":"What's a SQL flashback query?","completion":"A flashback query retrieves data as it was at a past time. Example: SELECT * FROM employees AS OF TIMESTAMP TO_TIMESTAMP('2023-01-01');"}
{"prompt":"Write a Neo4j query to find node by property existence.","completion":"MATCH (n:Person) WHERE EXISTS(n.age) RETURN n;"}
{"prompt":"How to use SQL GETDATE?","completion":"SELECT GETDATE();"}
{"prompt":"Write a MongoDB query with $redact.","completion":"db.users.aggregate([{ $redact: { $cond: { if: { $eq: ['$level', 'public'] }, then: '$$KEEP', else: '$$PRUNE' } } }]);"}
{"prompt":"Explain SQL serializable isolation.","completion":"Serializable isolation ensures complete isolation, preventing all concurrency issues like phantom reads."}
{"prompt":"How to use SQL TIMESTAMPDIFF?","completion":"SELECT TIMESTAMPDIFF(MONTH, hire_date, CURRENT_DATE) FROM employees;"}
{"prompt":"Write a Cassandra query with materialized view.","completion":"CREATE MATERIALIZED VIEW keyspace.users_by_email AS SELECT * FROM users WHERE email IS NOT NULL PRIMARY KEY (email, id);"}
{"prompt":"What's a SQL analytic function?","completion":"Analytic functions compute values over a group of rows, e.g., RANK(), SUM() OVER()."}
{"prompt":"Write a MongoDB query with $facet.","completion":"db.users.aggregate([{ $facet: { byAge: [{ $group: { _id: '$age', count: { $sum: 1 } } }], byStatus: [{ $group: { _id: '$status', count: { $sum: 1 } } }] } }]);"}
{"prompt":"How to use SQL ROWS PRECEDING?","completion":"SELECT name, SUM(salary) OVER (ORDER BY hire_date ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) FROM employees;"}
{"prompt":"What's NoSQL data lake integration?","completion":"NoSQL databases like MongoDB can store raw data for analytics, integrating with data lakes via connectors."}
{"prompt":"Write a SQL query with ALL.","completion":"SELECT * FROM employees WHERE salary > ALL (SELECT salary FROM interns);"}
{"prompt":"Write a PostgreSQL query with tsrange.","completion":"SELECT * FROM events WHERE daterange @> '2023-01-01'::date;"}
{"prompt":"How to query by multiple conditions in MongoDB?","completion":"db.users.find({ age: { $gt: 25 }, status: 'active' });"}
{"prompt":"What's a SQL database link?","completion":"A database link connects to another database. Example: CREATE DATABASE LINK remote_db CONNECT TO user IDENTIFIED BY pwd USING 'remote';"}
{"prompt":"Write a Neo4j query to find node by regex.","completion":"MATCH (n:Person) WHERE n.name =~ 'A.*' RETURN n;"}
{"prompt":"How to use SQL DATEADD?","completion":"SELECT DATEADD(day, 30, hire_date) FROM employees;"}
{"prompt":"Write a MongoDB query with $merge.","completion":"db.users.aggregate([{ $match: { status: 'active' } }, { $merge: { into: 'active_users' } }]);"}
{"prompt":"Explain SQL read committed isolation.","completion":"Read committed prevents dirty reads but allows non-repeatable reads and phantom reads."}
{"prompt":"How to use SQL MONTHNAME?","completion":"SELECT MONTHNAME(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with JSON.","completion":"INSERT INTO keyspace.users JSON '{\"id\": 1, \"name\": \"Alice\"}';"}
{"prompt":"What's a SQL analytic query?","completion":"An analytic query uses window functions to compute metrics like running totals or rankings."}
{"prompt":"Write a MongoDB query with $out.","completion":"db.users.aggregate([{ $match: { age: { $gt: 25 } } }, { $out: 'filtered_users' }]);"}
{"prompt":"How to use SQL RANGE PRECEDING?","completion":"SELECT name, SUM(salary) OVER (ORDER BY hire_date RANGE BETWEEN INTERVAL '1 year' PRECEDING AND CURRENT ROW) FROM employees;"}
{"prompt":"Write a Neo4j query to find subgraph.","completion":"MATCH (n:Person)-[:FRIEND*1..2]->(m) RETURN n, m;"}
{"prompt":"What's NoSQL hybrid transactional/analytical processing?","completion":"HTAP combines transactional and analytical queries in NoSQL for real-time insights."}
{"prompt":"Write a SQL query with subquery in WHERE.","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"}
{"prompt":"How to use Redis for bloom filters?","completion":"Use RedisBloom: BF.ADD myfilter 'item1'; BF.EXISTS myfilter 'item1';"}
{"prompt":"Write a PostgreSQL query with ltree.","completion":"SELECT * FROM hierarchy WHERE path ~ 'root.child.*';"}
{"prompt":"How to query by array element in MongoDB?","completion":"db.users.find({ tags: 'developer' });"}
{"prompt":"What's a SQL tablespace example?","completion":"CREATE TABLESPACE myspace LOCATION '/data'; CREATE TABLE employees (id INT) TABLESPACE myspace;"}
{"prompt":"Write a Neo4j query to find node by relationship type.","completion":"MATCH (n)-[:FRIEND]->() RETURN n;"}
{"prompt":"How to use SQL ADDTIME?","completion":"SELECT ADDTIME(start_time, '01:00:00') FROM events;"}
{"prompt":"Write a MongoDB query with $cond.","completion":"db.users.aggregate([{ $project: { status: { $cond: { if: { $gte: ['$age', 18] }, then: 'adult', else: 'minor' } } } }]);"}
{"prompt":"Explain SQL phantom reads.","completion":"Phantom reads occur when a transaction sees new rows from another transaction in repeated queries."}
{"prompt":"How to use SQL DAYOFWEEK?","completion":"SELECT DAYOFWEEK(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with tuple.","completion":"CREATE TABLE keyspace.data (id INT, coords TUPLE<INT, INT>, PRIMARY KEY(id));"}
{"prompt":"What's a SQL package?","completion":"A package groups related stored procedures and functions, common in Oracle databases."}
{"prompt":"Write a MongoDB query with $group and $sum.","completion":"db.sales.aggregate([{ $group: { _id: '$region', total: { $sum: '$amount' } } }]);"}
{"prompt":"How to use SQL PARTITION BY?","completion":"SELECT name, RANK() OVER (PARTITION BY dept_id ORDER BY salary DESC) FROM employees;"}
{"prompt":"Write a Neo4j query to find nodes with multiple labels.","completion":"MATCH (n:Person:Employee) RETURN n;"}
{"prompt":"What's NoSQL data versioning?","completion":"Data versioning in NoSQL tracks changes to documents, often using timestamps or version fields."}
{"prompt":"Write a SQL query with NOT IN.","completion":"SELECT * FROM employees WHERE dept_id NOT IN (1, 2);"}
{"prompt":"How to use Redis for caching queries?","completion":"Cache with SET query:sql 'result' EX 3600; retrieve with GET query:sql;"}
{"prompt":"Write a PostgreSQL query with cube.","completion":"SELECT dept_id, job_title, COUNT(*) FROM employees GROUP BY CUBE(dept_id, job_title);"}
{"prompt":"How to query by date range in MongoDB?","completion":"db.events.find({ created_at: { $gte: new Date('2023-01-01'), $lte: new Date('2023-12-31') } });"}
{"prompt":"What's a SQL audit trail?","completion":"An audit trail logs database changes for tracking, often using triggers or logs."}
{"prompt":"Write a Neo4j query to find node by property type.","completion":"MATCH (n) WHERE n.age IS NOT NULL RETURN n;"}
{"prompt":"How to use SQL HOUR?","completion":"SELECT HOUR(start_time) FROM events;"}
{"prompt":"Write a MongoDB query with $lookup and $unwind.","completion":"db.orders.aggregate([{ $lookup: { from: 'customers', localField: 'customer_id', foreignField: '_id', as: 'customer' } }, { $unwind: '$customer' }]);"}
{"prompt":"Explain SQL dirty reads.","completion":"Dirty reads occur when a transaction reads uncommitted changes from another transaction."}
{"prompt":"How to use SQL YEAR?","completion":"SELECT YEAR(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with frozen type.","completion":"CREATE TABLE keyspace.users (id INT, profile FROZEN<MAP<TEXT, TEXT>>, PRIMARY KEY(id));"}
{"prompt":"What's a SQL profile?","completion":"A profile limits resource usage for users, e.g., setting session limits in Oracle."}
{"prompt":"Write a MongoDB query with $project.","completion":"db.users.aggregate([{ $project: { name: 1, age: 1, _id: 0 } }]);"}
{"prompt":"How to use SQL ROWS FOLLOWING?","completion":"SELECT name, SUM(salary) OVER (ORDER BY hire_date ROWS BETWEEN CURRENT ROW AND 2 FOLLOWING) FROM employees;"}
{"prompt":"Write a Neo4j query to find top nodes by degree.","completion":"MATCH (n)-[r]-() RETURN n.name, COUNT(r) AS degree ORDER BY degree DESC LIMIT 5;"}
{"prompt":"What's NoSQL data migration?","completion":"Data migration in NoSQL moves data between databases or schemas, often requiring custom scripts."}
{"prompt":"Write a SQL query with subquery in HAVING.","completion":"SELECT dept_id, COUNT(*) FROM employees GROUP BY dept_id HAVING COUNT(*) > (SELECT AVG(cnt) FROM (SELECT COUNT(*) AS cnt FROM employees GROUP BY dept_id) sub);"}
{"prompt":"How to use Redis for task queues?","completion":"Use RPUSH to add tasks and BLPOP to process them from a list."}
{"prompt":"Write a PostgreSQL query with rollup.","completion":"SELECT dept_id, job_title, COUNT(*) FROM employees GROUP BY ROLLUP(dept_id, job_title);"}
{"prompt":"How to query by ObjectId range in MongoDB?","completion":"db.users.find({ _id: { $gt: ObjectId('507f1f77bcf86cd799439011') } });"}
{"prompt":"What's a SQL materialized view refresh?","completion":"Refresh updates materialized view data. Example: REFRESH MATERIALIZED VIEW mat_view;"}
{"prompt":"How to use SQL SECOND?","completion":"SELECT SECOND(start_time) FROM events;"}
{"prompt":"Write a MongoDB query with $match.","completion":"db.users.aggregate([{ $match: { age: { $gte: 25 } } }]);"}
{"prompt":"Explain SQL non-repeatable reads.","completion":"Non-repeatable reads occur when a transaction reads the same row twice and gets different values due to another transaction's commit."}
{"prompt":"Write a Redis command to get hash keys.","completion":"HKEYS user:1;"}
{"prompt":"How to use SQL DAYOFYEAR?","completion":"SELECT DAYOFYEAR(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with collection.","completion":"CREATE TABLE keyspace.users (id INT, tags SET<TEXT>, PRIMARY KEY(id));"}
{"prompt":"What's a SQL database role?","completion":"A role groups permissions for easier management. Example: CREATE ROLE analyst; GRANT SELECT ON tables TO analyst;"}
{"prompt":"Write a MongoDB query with $sort.","completion":"db.users.aggregate([{ $sort: { age: -1 } }]);"}
{"prompt":"How to use SQL RANGE FOLLOWING?","completion":"SELECT name, SUM(salary) OVER (ORDER BY hire_date RANGE BETWEEN CURRENT ROW AND INTERVAL '1 year' FOLLOWING) FROM employees;"}
{"prompt":"Write a Neo4j query to find node by label and property.","completion":"MATCH (n:Person {age: 30}) RETURN n;"}
{"prompt":"What's NoSQL data compression?","completion":"NoSQL databases like MongoDB use compression (e.g., Snappy) to reduce storage size."}
{"prompt":"Write a SQL query with ANY subquery.","completion":"SELECT * FROM employees WHERE salary > ANY (SELECT salary FROM interns);"}
{"prompt":"How to use Redis for rate limiting with Lua?","completion":"EVAL 'if redis.call(\"INCR\", KEYS[1]) == 1 then redis.call(\"EXPIRE\", KEYS[1], ARGV[1]) end return redis.call(\"GET\", KEYS[1])' 1 rate:user 60;"}
{"prompt":"Write a PostgreSQL query with grouping sets.","completion":"SELECT dept_id, job_title, COUNT(*) FROM employees GROUP BY GROUPING SETS((dept_id), (job_title), ());"}
{"prompt":"How to query by nested object in MongoDB?","completion":"db.users.find({ 'profile.address.city': 'New York' });"}
{"prompt":"What's a SQL sequence cycle?","completion":"A cycle allows a sequence to restart after reaching its limit. Example: CREATE SEQUENCE seq CYCLE;"}
{"prompt":"Write a Neo4j query to find node by relationship count.","completion":"MATCH (n:Person) RETURN n, SIZE((n)--()) AS rel_count ORDER BY rel_count DESC;"}
{"prompt":"How to use SQL MAKEDATE?","completion":"SELECT MAKEDATE(2023, 100) FROM employees;"}
{"prompt":"Write a MongoDB query with $addFields.","completion":"db.users.aggregate([{ $addFields: { fullName: { $concat: ['$first_name', ' ', '$last_name'] } } }]);"}
{"prompt":"Explain SQL table locks.","completion":"Table locks restrict access during transactions, e.g., LOCK TABLE employees IN EXCLUSIVE MODE;"}
{"prompt":"Write a Redis command to get set random member.","completion":"SRANDMEMBER myset;"}
{"prompt":"How to use SQL QUARTER?","completion":"SELECT QUARTER(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with map.","completion":"CREATE TABLE keyspace.users (id INT, attributes MAP<TEXT, TEXT>, PRIMARY KEY(id));"}
{"prompt":"What's a SQL database snapshot?","completion":"A snapshot captures a database's state at a point in time for backups or analysis."}
{"prompt":"Write a MongoDB query with $count.","completion":"db.users.aggregate([{ $count: 'total' }]);"}
{"prompt":"How to use SQL ROWS BETWEEN?","completion":"SELECT name, SUM(salary) OVER (PARTITION BY dept_id ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM employees;"}
{"prompt":"Write a Neo4j query to find node by property range.","completion":"MATCH (n:Person) WHERE n.age BETWEEN 20 AND 30 RETURN n;"}
{"prompt":"What's NoSQL data encryption?","completion":"NoSQL databases encrypt data at rest or in transit, e.g., MongoDB's encrypted storage engine."}
{"prompt":"Write a SQL query with ALL subquery.","completion":"SELECT * FROM employees WHERE salary > ALL (SELECT salary FROM interns);"}
{"prompt":"How to use Redis for distributed locks?","completion":"SET lock:resource 'value' NX EX 10;"}
{"prompt":"Write a PostgreSQL query with regexp_replace.","completion":"SELECT regexp_replace(name, '^Mr\\.', '') FROM employees;"}
{"prompt":"How to query by array range in MongoDB?","completion":"db.users.find({ scores: { $gte: 80, $lte: 100 } });"}
{"prompt":"What's a SQL database trigger?","completion":"A trigger executes automatically on events. Example: CREATE TRIGGER log_insert AFTER INSERT ON employees FOR EACH ROW INSERT INTO logs..."}
{"prompt":"Write a Neo4j query to find node by label pattern.","completion":"MATCH (n) WHERE n:Person OR n:Employee RETURN n;"}
{"prompt":"How to use SQL TIME_FORMAT?","completion":"SELECT TIME_FORMAT(start_time, '%H:%i') FROM events;"}
{"prompt":"Write a MongoDB query with $multiply.","completion":"db.products.aggregate([{ $project: { total: { $multiply: ['$price', '$quantity'] } } }]);"}
{"prompt":"Explain SQL advisory locks.","completion":"Advisory locks are application-controlled locks in PostgreSQL, e.g., SELECT pg_advisory_lock(123);"}
{"prompt":"Write a Redis command to get hash values.","completion":"HVALS user:1;"}
{"prompt":"How to use SQL WEEKDAY?","completion":"SELECT WEEKDAY(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with lightweight transaction.","completion":"INSERT INTO keyspace.users (id, name) VALUES (1, 'Alice') IF NOT EXISTS;"}
{"prompt":"What's a SQL database privilege?","completion":"Privileges control access, e.g., GRANT SELECT, INSERT ON employees TO user1;"}
{"prompt":"Write a MongoDB query with $subtract.","completion":"db.products.aggregate([{ $project: { discount: { $subtract: ['$price', '$sale_price'] } } }]);"}
{"prompt":"How to use SQL UNBOUNDED PRECEDING?","completion":"SELECT name, SUM(salary) OVER (ORDER BY hire_date ROWS UNBOUNDED PRECEDING) FROM employees;"}
{"prompt":"Write a Neo4j query to find node by property regex.","completion":"MATCH (n:Person) WHERE n.name =~ '.*son$' RETURN n;"}
{"prompt":"What's NoSQL data sharding strategy?","completion":"Sharding strategies include range-based, hash-based, or tag-aware sharding for load balancing."}
{"prompt":"Write a SQL query with correlated EXISTS.","completion":"SELECT * FROM employees e WHERE EXISTS (SELECT 1 FROM salaries s WHERE s.emp_id = e.id AND s.amount > 50000);"}
{"prompt":"How to use Redis for session timeout?","completion":"SET session:user_id 'data' EX 86400;"}
{"prompt":"Write a PostgreSQL query with jsonb_array_elements.","completion":"SELECT jsonb_array_elements(jsonb_column) FROM table;"}
{"prompt":"How to query by nested array in MongoDB?","completion":"db.users.find({ 'items.tags': { $all: ['urgent', 'important'] } });"}
{"prompt":"What's a SQL database synonym?","completion":"A synonym aliases a database object. Example: CREATE SYNONYM emp FOR employees;"}
{"prompt":"Write a Neo4j query to find node by relationship direction.","completion":"MATCH (n)-[:FRIEND]->(m) RETURN n, m;"}
{"prompt":"How to use SQL DATE_SUB?","completion":"SELECT DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH) FROM employees;"}
{"prompt":"Write a MongoDB query with $divide.","completion":"db.products.aggregate([{ $project: { unit_price: { $divide: ['$total', '$quantity'] } } }]);"}
{"prompt":"Explain SQL table inheritance.","completion":"Table inheritance in PostgreSQL allows a table to inherit from another, sharing structure."}
{"prompt":"Write a Redis command to get set random members.","completion":"SRANDMEMBER myset 2;"}
{"prompt":"How to use SQL DAYNAME?","completion":"SELECT DAYNAME(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with UDT.","completion":"CREATE TYPE keyspace.address (street TEXT, city TEXT); CREATE TABLE users (id INT, addr FROZEN<address>, PRIMARY KEY(id));"}
{"prompt":"What's a SQL database constraint?","completion":"Constraints enforce data integrity, e.g., PRIMARY KEY, FOREIGN KEY, CHECK, UNIQUE."}
{"prompt":"Write a MongoDB query with $mod.","completion":"db.users.find({ age: { $mod: [2, 0] } });"}
{"prompt":"How to use SQL UNBOUNDED FOLLOWING?","completion":"SELECT name, SUM(salary) OVER (ORDER BY hire_date ROWS BETWEEN CURRENT ROW AND UNBOUNDED FOLLOWING) FROM employees;"}
{"prompt":"Write a Neo4j query to find node by property null.","completion":"MATCH (n:Person) WHERE n.age IS NULL RETURN n;"}
{"prompt":"What's NoSQL data backup strategy?","completion":"NoSQL backups use snapshots, replication, or tools like mongodump for MongoDB."}
{"prompt":"Write a SQL query with IN subquery.","completion":"SELECT * FROM employees WHERE dept_id IN (SELECT id FROM departments WHERE location = 'NY');"}
{"prompt":"How to use Redis for leaderboard ranking?","completion":"ZINCRBY leaderboard 10 'player1'; ZREVRANK leaderboard 'player1';"}
{"prompt":"Write a PostgreSQL query with table partitioning.","completion":"CREATE TABLE employees (id INT, hire_date DATE) PARTITION BY RANGE (hire_date);"}
{"prompt":"How to query by embedded document count in MongoDB?","completion":"db.users.find({ 'items': { $size: 3 } });"}
{"prompt":"What's a SQL database view?","completion":"A view is a virtual table based on a query, e.g., CREATE VIEW emp_view AS SELECT * FROM employees;"}
{"prompt":"Write a Neo4j query to find node by multiple properties.","completion":"MATCH (n:Person {name: 'Alice', age: 30}) RETURN n;"}
{"prompt":"How to use SQL TIMEDIFF?","completion":"SELECT TIMEDIFF(end_time, start_time) FROM events;"}
{"prompt":"Write a MongoDB query with $arrayElemAt.","completion":"db.users.aggregate([{ $project: { first_tag: { $arrayElemAt: ['$tags', 0] } } }]);"}
{"prompt":"Explain SQL table constraints.","completion":"Table constraints like PRIMARY KEY, FOREIGN KEY, and CHECK enforce data integrity rules."}
{"prompt":"Write a Redis command to get list elements.","completion":"LRANGE mylist 0 9;"}
{"prompt":"How to use SQL WEEK?","completion":"SELECT WEEK(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with timeuuid.","completion":"SELECT * FROM keyspace.events WHERE id = now();"}
{"prompt":"What's a SQL database index type?","completion":"Index types include B-tree, hash, and GiST, each optimized for specific queries."}
{"prompt":"Write a MongoDB query with $indexOfArray.","completion":"db.users.aggregate([{ $project: { tag_index: { $indexOfArray: ['$tags', 'developer'] } } }]);"}
{"prompt":"How to use SQL PARTITION BY RANGE?","completion":"SELECT name, RANK() OVER (PARTITION BY dept_id ORDER BY salary RANGE BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM employees;"}
{"prompt":"Write a Neo4j query to find node by label count.","completion":"MATCH (n) RETURN n, SIZE(labels(n)) AS label_count;"}
{"prompt":"What's NoSQL data archival?","completion":"Data archival in NoSQL moves old data to cheaper storage, e.g., using TTL or external archives."}
{"prompt":"Write a SQL query with subquery in JOIN.","completion":"SELECT e.name, d.dept_name FROM employees e JOIN (SELECT id, dept_name FROM departments WHERE location = 'NY') d ON e.dept_id = d.id;"}
{"prompt":"How to use Redis for caching API responses?","completion":"SET api:endpoint 'response' EX 300; GET api:endpoint;"}
{"prompt":"Write a PostgreSQL query with jsonb_build_object.","completion":"SELECT jsonb_build_object('id', id, 'name', name) FROM employees;"}
{"prompt":"How to query by nested field existence in MongoDB?","completion":"db.users.find({ 'profile.address': { $exists: true } });"}
{"prompt":"What's a SQL database sequence?","completion":"A sequence generates unique numbers, e.g., CREATE SEQUENCE seq START 1;"}
{"prompt":"Write a Neo4j query to find node by relationship property.","completion":"MATCH (n)-[r:FRIEND {since: 2023}]->(m) RETURN n, m;"}
{"prompt":"How to use SQL FROM_DAYS?","completion":"SELECT FROM_DAYS(738855) AS date;"}
{"prompt":"Write a MongoDB query with $zip.","completion":"db.users.aggregate([{ $project: { combined: { $zip: { inputs: ['$tags', '$scores'] } } } }]);"}
{"prompt":"Explain SQL row-level security.","completion":"Row-level security restricts access to rows based on policies, e.g., ALTER TABLE employees ENABLE ROW LEVEL SECURITY;"}
{"prompt":"Write a Redis command to get set members count.","completion":"SCARD myset;"}
{"prompt":"How to use SQL TIME_TO_SEC?","completion":"SELECT TIME_TO_SEC(start_time) FROM events;"}
{"prompt":"Write a Cassandra query with blob.","completion":"CREATE TABLE keyspace.files (id INT, data BLOB, PRIMARY KEY(id));"}
{"prompt":"What's a SQL database event?","completion":"An event schedules tasks, e.g., CREATE EVENT cleanup ON SCHEDULE EVERY 1 DAY DO DELETE FROM logs WHERE created_at < NOW() - INTERVAL 30 DAY;"}
{"prompt":"Write a MongoDB query with $let.","completion":"db.users.aggregate([{ $project: { result: { $let: { vars: { total: { $add: ['$age', 10] } }, in: '$$total' } } } }]);"}
{"prompt":"How to use SQL UNBOUNDED PRECEDING AND FOLLOWING?","completion":"SELECT name, SUM(salary) OVER (PARTITION BY dept_id ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) FROM employees;"}
{"prompt":"Write a Neo4j query to find node by property list.","completion":"MATCH (n:Person) WHERE n.tags CONTAINS 'developer' RETURN n;"}
{"prompt":"What's NoSQL data replication strategy?","completion":"Replication strategies include master-slave, master-master, or quorum-based for high availability."}
{"prompt":"Write a SQL query with subquery in SELECT and WHERE.","completion":"SELECT name, (SELECT AVG(salary) FROM employees e2 WHERE e2.dept_id = e1.dept_id) AS avg_salary FROM employees e1 WHERE salary > 50000;"}
{"prompt":"How to use Redis for caching with TTL?","completion":"SET cache:key 'data' EX 600; GET cache:key;"}
{"prompt":"Write a PostgreSQL query with jsonb_array_length.","completion":"SELECT jsonb_array_length(jsonb_column) FROM table;"}
{"prompt":"How to query by nested array length in MongoDB?","completion":"db.users.find({ 'items.tags': { $size: 2 } });"}
{"prompt":"What's a SQL database policy?","completion":"A policy defines access rules, e.g., CREATE POLICY emp_access ON employees FOR SELECT TO analyst USING (dept_id = 1);"}
{"prompt":"Write a Neo4j query to find node by relationship length.","completion":"MATCH (n:Person)-[r*1..3]->(m) RETURN n, m;"}
{"prompt":"How to use SQL SEC_TO_TIME?","completion":"SELECT SEC_TO_TIME(3600) AS time;"}
{"prompt":"Write a MongoDB query with $concatArrays.","completion":"db.users.aggregate([{ $project: { all_tags: { $concatArrays: ['$tags1', '$tags2'] } } }]);"}
{"prompt":"Explain SQL advisory lock functions.","completion":"Advisory locks in PostgreSQL allow application-level locking, e.g., SELECT pg_try_advisory_lock(123);"}
{"prompt":"Write a Redis command to get set union store.","completion":"SUNIONSTORE result set1 set2;"}
{"prompt":"How to use SQL DAYOFMONTH?","completion":"SELECT DAYOFMONTH(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query with static column.","completion":"CREATE TABLE keyspace.users (dept_id INT, id INT, dept_name TEXT STATIC, PRIMARY KEY(dept_id, id));"}
{"prompt":"What's a SQL database cursor?","completion":"A cursor iterates over query results, e.g., DECLARE my_cursor CURSOR FOR SELECT * FROM employees;"}
{"prompt":"Write a MongoDB query with $map.","completion":"db.users.aggregate([{ $project: { upper_tags: { $map: { input: '$tags', as: 'tag', in: { $toUpper: '$$tag' } } } } }]);"}
{"prompt":"How to use SQL PARTITION BY LIST?","completion":"SELECT name, RANK() OVER (PARTITION BY dept_id LIST (job_title) ORDER BY salary) FROM employees;"}
{"prompt":"Write a Neo4j query to find node by property array.","completion":"MATCH (n:Person) WHERE 'developer' IN n.tags RETURN n;"}
{"prompt":"What's NoSQL data partitioning strategy?","completion":"Partitioning strategies include range, hash, or composite keys to distribute data efficiently."}
{"prompt":"Write a SQL query with subquery in ORDER BY.","completion":"SELECT name FROM employees ORDER BY (SELECT COUNT(*) FROM projects p WHERE p.emp_id = employees.id) DESC;"}
{"prompt":"How to use Redis for caching with pipeline?","completion":"local pipeline = redis.pipelined(); pipeline:set('key', 'value'); pipeline:expire('key', 600); pipeline:execute();"}
{"prompt":"Write a PostgreSQL query with jsonb_each_text.","completion":"SELECT * FROM jsonb_each_text(jsonb_column);"}
{"prompt":"How to query by nested object array in MongoDB?","completion":"db.users.find({ 'profile.addresses.city': 'New York' });"}
{"prompt":"What's a SQL database synonym example?","completion":"CREATE SYNONYM emp FOR employees; SELECT * FROM emp;"}
{"prompt":"Write a Neo4j query to find node by relationship existence.","completion":"MATCH (n:Person) WHERE (n)-[:FRIEND]->() RETURN n;"}
{"prompt":"How to use SQL ADD_MONTHS?","completion":"SELECT ADD_MONTHS(hire_date, 6) FROM employees;"}
{"prompt":"Write a MongoDB query with $arrayToObject.","completion":"db.users.aggregate([{ $project: { info: { $arrayToObject: [['key', '$value']] } } }]);"}
{"prompt":"Explain SQL lock modes.","completion":"Lock modes include shared, exclusive, and row-level locks to manage concurrent access."}
{"prompt":"How to use SQL QUOTE?","completion":"SELECT QUOTE(name) FROM employees;"}
{"prompt":"Write a Cassandra query with counter.","completion":"CREATE TABLE keyspace.page_views (page_id INT PRIMARY KEY, views COUNTER); UPDATE page_views SET views = views + 1 WHERE page_id = 1;"}
{"prompt":"What's a SQL database schema?","completion":"A schema organizes database objects like tables and views, e.g., CREATE SCHEMA hr; CREATE TABLE hr.employees..."}
{"prompt":"Write a MongoDB query with $filter.","completion":"db.users.aggregate([{ $project: { active_tags: { $filter: { input: '$tags', as: 'tag', cond: { $eq: ['$$tag.status', 'active'] } } } } }]);"}
{"prompt":"How to use SQL ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW?","completion":"SELECT name, SUM(salary) OVER (ORDER BY hire_date ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) FROM employees;"}
{"prompt":"Write a Neo4j query to find node by property greater than.","completion":"MATCH (n:Person) WHERE n.age > 30 RETURN n;"}
{"prompt":"How to create a table in SQL?","completion":"CREATE TABLE employees (id INT PRIMARY KEY, name VARCHAR(50), salary DECIMAL(10,2));"}
{"prompt":"What is a primary key in SQL?","completion":"A primary key is a unique identifier for each record in a table, ensuring no duplicate values and not null."}
{"prompt":"How to insert a document in MongoDB?","completion":"db.collection.insertOne({ name: 'John', age: 30 });"}
{"prompt":"How to create a key-value pair in Redis?","completion":"SET employee:1 'John Doe';"}
{"prompt":"What is indexing in databases?","completion":"Indexing creates a data structure to improve query performance by allowing faster data retrieval."}
{"prompt":"Write a SQL query to delete records older than a year.","completion":"DELETE FROM logs WHERE created_at < DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR);"}
{"prompt":"Explain ACID properties in SQL databases.","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions: Atomicity ensures all-or-nothing, Consistency maintains data integrity, Isolation prevents interference, Durability persists changes."}
{"prompt":"Write a MongoDB query to sort documents by salary in descending order.","completion":"db.collection.find().sort({ salary: -1 });"}
{"prompt":"What is sharding in NoSQL databases?","completion":"Sharding distributes data across multiple servers to handle large datasets and improve scalability."}
{"prompt":"Write a SQL query to find the average salary per department.","completion":"SELECT department, AVG(salary) FROM employees GROUP BY department;"}
{"prompt":"How to perform a SQL LEFT JOIN?","completion":"SELECT * FROM employees LEFT JOIN departments ON employees.department_id = departments.id;"}
{"prompt":"Explain CAP theorem for NoSQL databases.","completion":"CAP theorem states that a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance at a time."}
{"prompt":"How to update multiple documents in MongoDB?","completion":"db.collection.updateMany({ age: { $lt: 25 } }, { $set: { status: 'inactive' } });"}
{"prompt":"Write a Neo4j query to find the shortest path between two nodes.","completion":"MATCH p = shortestPath((start:Node)-[*]-(end:Node)) RETURN p;"}
{"prompt":"How to use a subquery in SQL?","completion":"SELECT * FROM employees WHERE department_id IN (SELECT id FROM departments WHERE name = 'Sales');"}
{"prompt":"Write a SQL query to count distinct values in a column.","completion":"SELECT COUNT(DISTINCT department) FROM employees;"}
{"prompt":"Explain normalization in SQL databases.","completion":"Normalization organizes data to reduce redundancy, following forms like 1NF (atomic values), 2NF (no partial dependencies), 3NF (no transitive dependencies)."}
{"prompt":"What is a Redis sorted set?","completion":"A sorted set stores unique elements with associated scores for ranking. Example: ZADD ranking 100 'player1';"}
{"prompt":"How to perform aggregation in MongoDB?","completion":"db.collection.aggregate([{ $group: { _id: '$department', total: { $sum: '$salary' } } }]);"}
{"prompt":"Explain SQL transactions.","completion":"Transactions group operations ensuring ACID. Example: BEGIN TRANSACTION; UPDATE...; COMMIT;"}
{"prompt":"Write a Cassandra query to insert data.","completion":"INSERT INTO keyspace.table (id, name) VALUES (1, 'John');"}
{"prompt":"How to use SQL CASE statement?","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"What is a Redis hash?","completion":"A hash stores multiple field-value pairs under a single key. Example: HMSET user:1 name 'John' age 30;"}
{"prompt":"Write a SQL query for a FULL OUTER JOIN.","completion":"SELECT * FROM employees FULL OUTER JOIN departments ON employees.department_id = departments.id;"}
{"prompt":"What is eventual consistency in NoSQL?","completion":"Eventual consistency means all replicas in a distributed system will eventually align, prioritizing availability over immediate consistency."}
{"prompt":"How to create a node in Neo4j?","completion":"CREATE (n:Person {name: 'John', age: 30});"}
{"prompt":"What are SQL window functions?","completion":"Window functions perform calculations across a set of rows related to the current row. Example: ROW_NUMBER() OVER (PARTITION BY department ORDER BY salary);"}
{"prompt":"Explain SQL UNION operator.","completion":"UNION combines results of two queries, removing duplicates. Example: SELECT name FROM employees UNION SELECT name FROM contractors;"}
{"prompt":"Write a Cassandra query to create a table.","completion":"CREATE TABLE keyspace.employees (id UUID PRIMARY KEY, name TEXT, salary DECIMAL);"}
{"prompt":"What is a MongoDB replica set?","completion":"A replica set is a group of mongod instances maintaining the same data for redundancy and failover."}
{"prompt":"Write a SQL query using LIKE operator.","completion":"SELECT * FROM employees WHERE name LIKE '%Smith%';"}
{"prompt":"How to perform a Redis transaction?","completion":"MULTI; SET key1 value1; SET key2 value2; EXEC;"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data in NoSQL to optimize read performance, avoiding joins."}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH (n:Person)-[r:KNOWS]->(m:Person) DELETE r;"}
{"prompt":"How to use SQL HAVING clause?","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 10;"}
{"prompt":"Write a MongoDB query for geospatial data.","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [-73.9, 40.7] } } } });"}
{"prompt":"What is a Redis pipeline?","completion":"A pipeline batches multiple commands to reduce round-trip time. Example: client.pipeline().set('key', 'value').get('key').execute();"}
{"prompt":"Explain SQL triggers.","completion":"Triggers are procedures that execute automatically on events like INSERT. Example: CREATE TRIGGER log_update AFTER UPDATE ON employees FOR EACH ROW INSERT INTO logs...;"}
{"prompt":"Write a Cassandra query for batch operations.","completion":"BEGIN BATCH INSERT INTO table (id, name) VALUES (1, 'John'); UPDATE table SET name = 'Jane' WHERE id = 2; APPLY BATCH;"}
{"prompt":"How to use SQL date functions?","completion":"SELECT CURRENT_DATE; SELECT DATE_ADD(created_at, INTERVAL 1 DAY) FROM employees;"}
{"prompt":"What is a column-family store in NoSQL?","completion":"A column-family store, like Cassandra, organizes data into rows and columns optimized for write-heavy workloads."}
{"prompt":"How to bulk insert in MongoDB?","completion":"db.collection.insertMany([{ name: 'John' }, { name: 'Jane' }]);"}
{"prompt":"What is a Redis sorted set operation?","completion":"ZADD leaderboard 100 'player1'; ZRANGE leaderboard 0 -1 WITHSCORES;"}
{"prompt":"Explain NoSQL data modeling.","completion":"NoSQL data modeling prioritizes query patterns, using denormalization, embedding, or referencing based on access needs."}
{"prompt":"Write a Neo4j query to merge nodes.","completion":"MERGE (n:Person {name: 'John'}) ON CREATE SET n.age = 30;"}
{"prompt":"What is a Redis stream?","completion":"A stream is a log-like data structure for event sourcing. Example: XADD mystream * field1 value1;"}
{"prompt":"How to handle transactions in MongoDB?","completion":"const session = client.startSession(); session.withTransaction(async () => { await db.collection1.insertOne({...}); await db.collection2.updateOne({...}); });"}
{"prompt":"Explain SQL CHECK constraint.","completion":"CHECK ensures a condition is met. Example: CREATE TABLE employees (salary DECIMAL CHECK (salary > 0));"}
{"prompt":"Write a Cassandra query to create an index.","completion":"CREATE INDEX ON keyspace.employees (name);"}
{"prompt":"How to use SQL EXISTS?","completion":"SELECT * FROM employees WHERE EXISTS (SELECT 1 FROM departments WHERE id = employees.department_id);"}
{"prompt":"What is a MongoDB capped collection?","completion":"A capped collection has a fixed size, automatically overwriting old data when full. Example: db.createCollection('logs', { capped: true, size: 1000000 });"}
{"prompt":"How to use SQL COALESCE?","completion":"SELECT COALESCE(NULL, 'default') AS value;"}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores, like Redis, store data as simple key-value pairs for fast retrieval."}
{"prompt":"Write a Neo4j query to find all nodes with a property.","completion":"MATCH (n:Person {age: 30}) RETURN n;"}
{"prompt":"What is a Redis list?","completion":"A list is a collection of ordered elements. Example: LPUSH list 'item1'; RPOP list;"}
{"prompt":"Write a SQL query to rename a table.","completion":"ALTER TABLE employees RENAME TO staff;"}
{"prompt":"How to use MongoDB $push operator?","completion":"db.collection.updateOne({ _id: 1 }, { $push: { items: 'new_item' } });"}
{"prompt":"Explain SQL indexes.","completion":"Indexes are data structures that improve query speed but increase write overhead. Example: CREATE INDEX idx_name ON employees(name);"}
{"prompt":"Write a Cassandra query to select data with filtering.","completion":"SELECT * FROM keyspace.employees WHERE department = 'Sales' ALLOW FILTERING;"}
{"prompt":"How to use SQL DISTINCT?","completion":"SELECT DISTINCT department FROM employees;"}
{"prompt":"What is a Redis set?","completion":"A set stores unique, unordered elements. Example: SADD myset 'item1';"}
{"prompt":"Write a Neo4j query to update a node.","completion":"MATCH (n:Person {name: 'John'}) SET n.age = 31;"}
{"prompt":"Explain SQL materialized views.","completion":"Materialized views store query results physically, updated periodically. Example: CREATE MATERIALIZED VIEW sales_summary AS SELECT...;"}
{"prompt":"Write a Redis command to get all hash fields.","completion":"HGETALL user:1;"}
{"prompt":"What is MongoDB GridFS?","completion":"GridFS stores large files by splitting them into chunks. Example: db.fs.files.find();"}
{"prompt":"How to use Redis ZRANK?","completion":"ZRANK leaderboard 'player1';"}
{"prompt":"Explain SQL partitioning.","completion":"Partitioning divides a table into smaller pieces for performance. Example: CREATE TABLE sales PARTITION BY RANGE (year);"}
{"prompt":"Write a MongoDB query to remove a field.","completion":"db.collection.updateMany({}, { $unset: { old_field: '' } });"}
{"prompt":"What is a Neo4j relationship property?","completion":"Relationships can have properties. Example: CREATE (a)-[r:KNOWS {since: 2020}]->(b);"}
{"prompt":"Write a SQL query to join three tables.","completion":"SELECT * FROM employees e JOIN departments d ON e.department_id = d.id JOIN roles r ON e.role_id = r.id;"}
{"prompt":"How to use MongoDB $inc operator?","completion":"db.collection.updateOne({ _id: 1 }, { $inc: { count: 1 } });"}
{"prompt":"What is a Redis bitmap?","completion":"A bitmap stores binary data for efficient operations. Example: SETBIT mybitmap 100 1;"}
{"prompt":"Write a SQL query for cross join.","completion":"SELECT * FROM employees CROSS JOIN departments;"}
{"prompt":"Explain NoSQL wide-column stores.","completion":"Wide-column stores, like Cassandra, store data in flexible columns optimized for scalability."}
{"prompt":"What is Redis persistence?","completion":"Redis supports RDB snapshots and AOF logs for data durability."}
{"prompt":"Write a SQL query to calculate running total.","completion":"SELECT id, salary, SUM(salary) OVER (ORDER BY id) AS running_total FROM employees;"}
{"prompt":"Explain SQL temporary tables.","completion":"Temporary tables exist for a session. Example: CREATE TEMPORARY TABLE temp_employees (id INT, name VARCHAR(50));"}
{"prompt":"Write a Cassandra query to update data.","completion":"UPDATE keyspace.employees SET salary = 60000 WHERE id = 1;"}
{"prompt":"How to use SQL RANK function?","completion":"SELECT name, RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"What is a MongoDB sharded cluster?","completion":"A sharded cluster distributes data across shards for scalability, with mongos routers handling queries."}
{"prompt":"How to use SQL DROP INDEX?","completion":"DROP INDEX idx_name ON employees;"}
{"prompt":"What is a SQL stored procedure?","completion":"A stored procedure is a precompiled set of SQL statements. Example: CREATE PROCEDURE raise_salary AS UPDATE employees SET salary = salary * 1.1;"}
{"prompt":"How to use Redis ZRANGEBYSCORE?","completion":"ZRANGEBYSCORE leaderboard 100 200;"}
{"prompt":"Explain SQL views vs materialized views.","completion":"Views are virtual tables updated dynamically; materialized views store data physically, updated periodically."}
{"prompt":"Write a Cassandra query to delete data.","completion":"DELETE FROM keyspace.employees WHERE id = 1;"}
{"prompt":"What is a MongoDB write concern?","completion":"Write concern specifies acknowledgment level for write operations, e.g., { w: 'majority' }."}
{"prompt":"Write a Neo4j query to create a relationship.","completion":"MATCH (a:Person {name: 'John'}), (b:Person {name: 'Jane'}) CREATE (a)-[:KNOWS]->(b);"}
{"prompt":"How to use SQL IS NULL?","completion":"SELECT * FROM employees WHERE email IS NULL;"}
{"prompt":"Write a Redis command to remove an item from a set.","completion":"SREM myset 'item1';"}
{"prompt":"Explain SQL unique constraints.","completion":"UNIQUE ensures no duplicate values in a column. Example: CREATE TABLE employees (email VARCHAR(50) UNIQUE);"}
{"prompt":"Write a MongoDB query to skip results.","completion":"db.collection.find().skip(20);"}
{"prompt":"What is a Redis HyperLogLog?","completion":"HyperLogLog estimates unique items with low memory. Example: PFADD myhll 'item1';"}
{"prompt":"Write a SQL query for nth highest salary.","completion":"SELECT DISTINCT salary FROM employees ORDER BY salary DESC LIMIT 1 OFFSET n-1;"}
{"prompt":"How to use MongoDB $all operator?","completion":"db.collection.find({ tags: { $all: ['tag1', 'tag2'] } });"}
{"prompt":"Explain SQL foreign key constraints.","completion":"Foreign keys enforce referential integrity. Example: CREATE TABLE orders (id INT, employee_id INT, FOREIGN KEY (employee_id) REFERENCES employees(id));"}
{"prompt":"Write a Neo4j query to delete a node.","completion":"MATCH (n:Person {name: 'John'}) DETACH DELETE n;"}
{"prompt":"Write a Cassandra query to select by partition key.","completion":"SELECT * FROM keyspace.employees WHERE department = 'Sales' AND id = 1;"}
{"prompt":"What is MongoDB TTL index?","completion":"A TTL index expires documents after a time period. Example: db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"Explain NoSQL graph databases.","completion":"Graph databases, like Neo4j, store nodes and relationships for complex data connections, ideal for social networks."}
{"prompt":"Write a MongoDB query to find by regex.","completion":"db.collection.find({ name: { $regex: '^John', $options: 'i' } });"}
{"prompt":"What is a Redis transaction rollback?","completion":"Use DISCARD to cancel a transaction. Example: MULTI; SET key1 value1; DISCARD;"}
{"prompt":"How to use Neo4j OPTIONAL MATCH?","completion":"MATCH (n:Person) OPTIONAL MATCH (n)-[:KNOWS]->(m) RETURN n, m;"}
{"prompt":"Explain SQL composite keys.","completion":"A composite key uses multiple columns as a primary key. Example: CREATE TABLE orders (order_id INT, product_id INT, PRIMARY KEY (order_id, product_id));"}
{"prompt":"Write a MongoDB query to update a nested field.","completion":"db.collection.updateOne({ _id: 1 }, { $set: { 'address.city': 'New York' } });"}
{"prompt":"How to use Redis EXPIREAT?","completion":"EXPIREAT key 1696118400;"}
{"prompt":"Write a SQL query to find employees hired in the last month.","completion":"SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 MONTH);"}
{"prompt":"What is a Cassandra materialized view?","completion":"A materialized view in Cassandra is a table automatically updated based on a source table's data."}
{"prompt":"Write a MongoDB query to group by multiple fields.","completion":"db.collection.aggregate([{ $group: { _id: { department: '$department', role: '$role' }, count: { $sum: 1 } } }]);"}
{"prompt":"What is a Redis Lua script?","completion":"A Lua script runs custom logic atomically. Example: EVAL 'return redis.call(\"SET\", KEYS[1], ARGV[1])' 1 key value;"}
{"prompt":"How to use Neo4j WHERE clause?","completion":"MATCH (n:Person) WHERE n.age > 30 RETURN n;"}
{"prompt":"Explain SQL sequence.","completion":"A sequence generates unique numbers. Example: CREATE SEQUENCE employee_seq; SELECT nextval('employee_seq');"}
{"prompt":"Write a MongoDB query to find by array length.","completion":"db.collection.find({ tags: { $size: 3 } });"}
{"prompt":"How to use Redis ZREVRANGE?","completion":"ZREVRANGE leaderboard 0 -1 WITHSCORES;"}
{"prompt":"What is MongoDB schema validation?","completion":"Schema validation enforces a JSON schema. Example: db.createCollection('users', { validator: { $jsonSchema: { required: ['name'] } } });"}
{"prompt":"Write a Cassandra query to drop a table.","completion":"DROP TABLE keyspace.employees;"}
{"prompt":"How to use SQL ROUND function?","completion":"SELECT ROUND(salary, 2) FROM employees;"}
{"prompt":"Write a Neo4j query to find connected nodes.","completion":"MATCH (n:Person)-[:KNOWS*1..3]->(m) RETURN n, m;"}
{"prompt":"What is a Redis geospatial index?","completion":"A geospatial index stores coordinates for proximity queries. Example: GEOADD locations 13.361 52.516 'Berlin';"}
{"prompt":"How to use MongoDB $slice operator?","completion":"db.collection.find({}, { items: { $slice: [1, 3] } });"}
{"prompt":"Explain SQL table partitioning.","completion":"Table partitioning splits large tables into smaller pieces. Example: CREATE TABLE sales PARTITION BY RANGE (sale_date);"}
{"prompt":"Write a Redis command to check if a key exists.","completion":"EXISTS key;"}
{"prompt":"How to use SQL NOW() function?","completion":"SELECT NOW();"}
{"prompt":"What is a MongoDB compound index?","completion":"A compound index uses multiple fields. Example: db.collection.createIndex({ name: 1, age: -1 });"}
{"prompt":"How to use SQL REPLACE function?","completion":"SELECT REPLACE(name, 'John', 'Jon') FROM employees;"}
{"prompt":"Write a Cassandra query to select with limit.","completion":"SELECT * FROM keyspace.employees LIMIT 10;"}
{"prompt":"What is Redis cluster?","completion":"Redis Cluster distributes data across nodes for scalability and fault tolerance."}
{"prompt":"Explain SQL default constraints.","completion":"DEFAULT sets a default value. Example: CREATE TABLE employees (status VARCHAR(20) DEFAULT 'active');"}
{"prompt":"Write a Neo4j query to count nodes by label.","completion":"MATCH (n:Person) RETURN COUNT(n);"}
{"prompt":"Write a MongoDB query to find by date range.","completion":"db.collection.find({ createdAt: { $gte: new Date('2023-01-01'), $lte: new Date('2023-12-31') } });"}
{"prompt":"What is a Redis scan?","completion":"SCAN iterates over keys incrementally. Example: SCAN 0 MATCH 'user:*';"}
{"prompt":"Write a SQL query to find employees with null values.","completion":"SELECT * FROM employees WHERE department_id IS NULL;"}
{"prompt":"How to use Cassandra lightweight transactions?","completion":"INSERT INTO keyspace.employees (id, name) VALUES (1, 'John') IF NOT EXISTS;"}
{"prompt":"Explain SQL correlated subquery.","completion":"A correlated subquery references the outer query. Example: SELECT * FROM employees e WHERE EXISTS (SELECT 1 FROM departments d WHERE d.id = e.department_id);"}
{"prompt":"Write a MongoDB query to sort by multiple fields.","completion":"db.collection.find().sort({ age: 1, name: -1 });"}
{"prompt":"How to use Redis ZINCRBY?","completion":"ZINCRBY leaderboard 10 'player1';"}
{"prompt":"Write a SQL query to find employees by manager.","completion":"SELECT e1.* FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id;"}
{"prompt":"What is MongoDB aggregation pipeline?","completion":"The aggregation pipeline processes documents through stages like $match, $group. Example: db.collection.aggregate([{ $match: { status: 'active' } }]);"}
{"prompt":"Write a Neo4j query to find paths of specific length.","completion":"MATCH p = (n:Person)-[:KNOWS*2]->(m) RETURN p;"}
{"prompt":"How to use SQL LOWER function?","completion":"SELECT LOWER(name) FROM employees;"}
{"prompt":"Write a Cassandra query to select with order.","completion":"SELECT * FROM keyspace.employees WHERE department = 'Sales' ORDER BY id ASC;"}
{"prompt":"What is a Redis module?","completion":"Modules extend Redis functionality, like RediSearch for full-text search."}
{"prompt":"Write a SQL query to find employees by department and role.","completion":"SELECT e.* FROM employees e JOIN roles r ON e.role_id = r.id WHERE e.department_id = 1;"}
{"prompt":"How to use MongoDB $unset operator?","completion":"db.collection.updateOne({ _id: 1 }, { $unset: { field: '' } });"}
{"prompt":"Explain SQL generated columns.","completion":"Generated columns derive values automatically. Example: CREATE TABLE employees (salary INT, bonus INT GENERATED ALWAYS AS (salary * 0.1));"}
{"prompt":"Write a Neo4j query to find all relationships of a node.","completion":"MATCH (n:Person {name: 'John'})-[r]-() RETURN r;"}
{"prompt":"How to use SQL SUBSTRING?","completion":"SELECT SUBSTRING(name, 1, 3) FROM employees;"}
{"prompt":"Write a MongoDB query to find by embedded document.","completion":"db.collection.find({ 'address.city': 'New York' });"}
{"prompt":"What is Redis memory usage?","completion":"Use MEMORY USAGE key to check a key’s memory footprint."}
{"prompt":"How to use Cassandra counter columns?","completion":"CREATE TABLE keyspace.counters (id UUID PRIMARY KEY, count COUNTER); UPDATE counters SET count = count + 1 WHERE id = uuid();"}
{"prompt":"Explain SQL common table expressions (CTEs).","completion":"CTEs define temporary result sets. Example: WITH dept_avg AS (SELECT department, AVG(salary) AS avg_salary FROM employees GROUP BY department) SELECT * FROM dept_avg;"}
{"prompt":"Write a MongoDB query to find by array field.","completion":"db.collection.find({ tags: 'programming' });"}
{"prompt":"How to use Redis ZCOUNT?","completion":"ZCOUNT leaderboard 100 200;"}
{"prompt":"What is MongoDB read preference?","completion":"Read preference controls which replica set members handle read queries, e.g., primary or secondary."}
{"prompt":"Write a Neo4j query to find nodes by property existence.","completion":"MATCH (n:Person) WHERE EXISTS(n.age) RETURN n;"}
{"prompt":"How to use SQL LENGTH function?","completion":"SELECT name, LENGTH(name) FROM employees;"}
{"prompt":"Write a Cassandra query to select by clustering key.","completion":"SELECT * FROM keyspace.employees WHERE department = 'Sales' AND id > 100;"}
{"prompt":"What is Redis keyspace notification?","completion":"Keyspace notifications trigger events on key changes. Example: CONFIG SET notify-keyspace-events KEA;"}
{"prompt":"Write a SQL query to find employees by salary range.","completion":"SELECT * FROM employees WHERE salary BETWEEN 50000 AND 75000;"}
{"prompt":"How to use MongoDB $nin operator?","completion":"db.collection.find({ status: { $nin: ['inactive', 'pending'] } });"}
{"prompt":"Explain SQL recursive CTEs.","completion":"Recursive CTEs handle hierarchical data. Example: WITH RECURSIVE tree AS (...) SELECT * FROM tree;"}
{"prompt":"Write a Neo4j query to find nodes with multiple relationships.","completion":"MATCH (n:Person)-[r:KNOWS]->() WITH n, COUNT(r) AS rel_count WHERE rel_count > 2 RETURN n;"}
{"prompt":"How to use SQL TRIM function?","completion":"SELECT TRIM(name) FROM employees;"}
{"prompt":"Write a MongoDB query to find by null field.","completion":"db.collection.find({ field: null });"}
{"prompt":"What is a Redis bitfield?","completion":"A bitfield manipulates bits in a string. Example: BITFIELD mykey INCRBY i8 100 1;"}
{"prompt":"Write a SQL query to find employees by department size.","completion":"SELECT d.name FROM departments d JOIN employees e ON d.id = e.department_id GROUP BY d.name HAVING COUNT(*) > 10;"}
{"prompt":"How to use MongoDB $or operator?","completion":"db.collection.find({ $or: [{ age: { $gt: 30 } }, { status: 'active' }] });"}
{"prompt":"Explain SQL table inheritance in PostgreSQL.","completion":"Table inheritance allows a table to inherit columns from a parent. Example: CREATE TABLE employees () INHERITS (people);"}
{"prompt":"Write a Neo4j query to find nodes by relationship type.","completion":"MATCH (n)-[:LIKES]->(m) RETURN n, m;"}
{"prompt":"Write a Cassandra query to select with TTL.","completion":"INSERT INTO keyspace.employees (id, name) VALUES (1, 'John') USING TTL 86400;"}
{"prompt":"What is MongoDB write ahead logging?","completion":"MongoDB’s journal logs operations before applying them for durability."}
{"prompt":"How to use MongoDB $and operator?","completion":"db.collection.find({ $and: [{ age: { $gt: 25 } }, { status: 'active' }] });"}
{"prompt":"Explain SQL role-based access control.","completion":"Roles manage permissions. Example: CREATE ROLE read_only; GRANT SELECT ON employees TO read_only;"}
{"prompt":"Write a Neo4j query to find nodes by property value.","completion":"MATCH (n:Person {city: 'New York'}) RETURN n;"}
{"prompt":"Write a MongoDB query to find by ObjectId.","completion":"db.collection.find({ _id: ObjectId('507f1f77bcf86cd799439011') });"}
{"prompt":"What is Redis MONITOR command?","completion":"MONITOR streams real-time commands received by the server for debugging."}
{"prompt":"Write a SQL query to find employees with duplicate emails.","completion":"SELECT email, COUNT(*) FROM employees GROUP BY email HAVING COUNT(*) > 1;"}
{"prompt":"How to use Cassandra collections?","completion":"CREATE TABLE keyspace.employees (id UUID PRIMARY KEY, skills SET<TEXT>); UPDATE employees SET skills = skills + {'SQL'};"}
{"prompt":"Explain SQL cursors.","completion":"Cursors iterate over query results row by row. Example: DECLARE cursor_name CURSOR FOR SELECT * FROM employees;"}
{"prompt":"Write a MongoDB query to find by multiple conditions.","completion":"db.collection.find({ age: { $gt: 25 }, department: 'Sales' });"}
{"prompt":"How to use Redis ZREMRANGEBYSCORE?","completion":"ZREMRANGEBYSCORE leaderboard 0 100;"}
{"prompt":"Write a SQL query to find employees by role name.","completion":"SELECT e.* FROM employees e JOIN roles r ON e.role_id = r.id WHERE r.name = 'Manager';"}
{"prompt":"What is MongoDB transactions in sharded clusters?","completion":"Sharded transactions coordinate writes across shards, ensuring ACID compliance."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship properties.","completion":"MATCH (n)-[r:KNOWS {since: 2020}]->(m) RETURN n, m;"}
{"prompt":"How to use SQL IFNULL?","completion":"SELECT IFNULL(email, 'no_email') FROM employees;"}
{"prompt":"Write a Cassandra query to select with IN clause.","completion":"SELECT * FROM keyspace.employees WHERE id IN (1, 2, 3);"}
{"prompt":"What is Redis time series?","completion":"RedisTimeSeries is a module for time-series data. Example: TS.ADD temp:1 * 25;"}
{"prompt":"Write a SQL query to find employees by tenure.","completion":"SELECT * FROM employees WHERE DATEDIFF(CURRENT_DATE, hire_date) > 365;"}
{"prompt":"How to use MongoDB $in operator?","completion":"db.collection.find({ status: { $in: ['active', 'pending'] } });"}
{"prompt":"Explain SQL table-valued functions.","completion":"Table-valued functions return a table. Example: CREATE FUNCTION get_employees() RETURNS TABLE AS RETURN SELECT * FROM employees;"}
{"prompt":"Write a Neo4j query to find all paths between nodes.","completion":"MATCH p = (n:Person)-[:KNOWS*]->(m:Person) RETURN p;"}
{"prompt":"Write a MongoDB query to update multiple fields.","completion":"db.collection.updateOne({ _id: 1 }, { $set: { name: 'John', age: 31 } });"}
{"prompt":"What is Redis INFO command?","completion":"INFO provides server statistics, like memory usage or client connections."}
{"prompt":"Write a SQL query to find employees by partial name match.","completion":"SELECT * FROM employees WHERE name LIKE 'Jo%';"}
{"prompt":"How to use Cassandra timestamp?","completion":"INSERT INTO keyspace.employees (id, name, created_at) VALUES (1, 'John', toTimestamp(now()));"}
{"prompt":"Explain SQL scalar functions.","completion":"Scalar functions return a single value per row. Example: UPPER(name) converts names to uppercase."}
{"prompt":"Write a MongoDB query to find by array contains.","completion":"db.collection.find({ tags: { $contains: 'SQL' } });"}
{"prompt":"How to use Redis ZREVRANK?","completion":"ZREVRANK leaderboard 'player1';"}
{"prompt":"Write a SQL query to find employees by department count.","completion":"SELECT d.name FROM departments d JOIN employees e ON d.id = e.department_id GROUP BY d.name HAVING COUNT(*) >= 5;"}
{"prompt":"What is MongoDB arbiter?","completion":"An arbiter is a lightweight MongoDB node that votes in replica set elections but holds no data."}
{"prompt":"Write a Neo4j query to find nodes by label and property.","completion":"MATCH (n:Person {age: 25}) RETURN n;"}
{"prompt":"Write a Cassandra query to select with pagination.","completion":"SELECT * FROM keyspace.employees WHERE department = 'Sales' LIMIT 10;"}
{"prompt":"What is Redis WATCH command?","completion":"WATCH monitors keys for optimistic locking in transactions. Example: WATCH key; MULTI; EXEC;"}
{"prompt":"Write a SQL query to find employees with top 10% salaries.","completion":"SELECT * FROM employees WHERE salary >= (SELECT PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY salary) FROM employees);"}
{"prompt":"How to use MongoDB $size operator?","completion":"db.collection.find({ tags: { $size: 3 } });"}
{"prompt":"Explain SQL triggers vs stored procedures.","completion":"Triggers run automatically on events; stored procedures are explicitly called. Both execute predefined logic."}
{"prompt":"Write a Neo4j query to find nodes with incoming relationships.","completion":"MATCH ()-[:KNOWS]->(n:Person) RETURN n;"}
{"prompt":"How to use SQL GREATEST?","completion":"SELECT GREATEST(salary, bonus) FROM employees;"}
{"prompt":"Write a MongoDB query to find by type.","completion":"db.collection.find({ field: { $type: 'string' } });"}
{"prompt":"What is Redis expire policy?","completion":"Redis uses policies like LRU or TTL for key eviction when memory is full."}
{"prompt":"How to use Cassandra static columns?","completion":"CREATE TABLE keyspace.employees (dept_id UUID, id UUID, dept_name TEXT STATIC, PRIMARY KEY (dept_id, id));"}
{"prompt":"Explain SQL window frame specification.","completion":"Window frames define the row range for window functions. Example: SUM(salary) OVER (PARTITION BY department ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW);"}
{"prompt":"Write a MongoDB query to find by timestamp.","completion":"db.collection.find({ createdAt: { $gte: ISODate('2023-01-01T00:00:00Z') } });"}
{"prompt":"How to use Redis ZINTERSTORE?","completion":"ZINTERSTORE result 2 set1 set2;"}
{"prompt":"Write a SQL query to find employees by salary rank.","completion":"SELECT name, salary, RANK() OVER (PARTITION BY department ORDER BY salary DESC) FROM employees;"}
{"prompt":"What is MongoDB backup strategy?","completion":"Use mongodump for logical backups or filesystem snapshots for physical backups."}
{"prompt":"Write a Neo4j query to find nodes by property range.","completion":"MATCH (n:Person) WHERE n.age BETWEEN 20 AND 30 RETURN n;"}
{"prompt":"How to use SQL LEAST?","completion":"SELECT LEAST(salary, bonus) FROM employees;"}
{"prompt":"Write a Cassandra query to select with distinct.","completion":"SELECT DISTINCT department FROM keyspace.employees;"}
{"prompt":"What is Redis replication?","completion":"Replication copies data to secondary nodes for redundancy. Example: REPLICAOF primary_host 6379;"}
{"prompt":"How to use MongoDB $gt operator?","completion":"db.collection.find({ age: { $gt: 30 } });"}
{"prompt":"Explain SQL audit logging.","completion":"Audit logging tracks database changes. Example: CREATE TABLE audit_log (action TEXT, timestamp TIMESTAMP);"}
{"prompt":"Write a Neo4j query to find nodes with specific outgoing relationships.","completion":"MATCH (n:Person)-[:LIKES]->() RETURN n;"}
{"prompt":"Write a MongoDB query to find by embedded array.","completion":"db.collection.find({ 'items.name': 'product1' });"}
{"prompt":"What is Redis GEOSEARCH?","completion":"GEOSEARCH finds locations within a radius. Example: GEOSEARCH locations FROMLONLAT 13.361 52.516 RADIUS 10 km;"}
{"prompt":"Write a SQL query to find employees by region.","completion":"SELECT e.* FROM employees e JOIN departments d ON e.department_id = d.id WHERE d.region = 'North';"}
{"prompt":"How to use Cassandra frozen collections?","completion":"CREATE TABLE keyspace.employees (id UUID PRIMARY KEY, details FROZEN<MAP<TEXT, TEXT>>);"}
{"prompt":"Explain SQL aggregate functions.","completion":"Aggregate functions compute a single result from multiple rows, e.g., COUNT, SUM, AVG, MIN, MAX."}
{"prompt":"Write a MongoDB query to find by partial match.","completion":"db.collection.find({ name: { $regex: 'Jo.*', $options: 'i' } });"}
{"prompt":"How to use Redis ZADD with multiple members?","completion":"ZADD leaderboard 100 'player1' 200 'player2';"}
{"prompt":"Write a SQL query to find employees by years of service.","completion":"SELECT * FROM employees WHERE DATEDIFF(CURRENT_DATE, hire_date) / 365 > 5;"}
{"prompt":"What is MongoDB journal?","completion":"The journal logs operations for crash recovery, ensuring data durability."}
{"prompt":"Write a Neo4j query to find nodes by multiple properties.","completion":"MATCH (n:Person {city: 'New York', age: 30}) RETURN n;"}
{"prompt":"Write a Cassandra query to select by time range.","completion":"SELECT * FROM keyspace.events WHERE timestamp >= '2023-01-01' AND timestamp <= '2023-12-31';"}
{"prompt":"What is Redis CONFIG command?","completion":"CONFIG sets or gets server configuration. Example: CONFIG SET maxmemory 2GB;"}
{"prompt":"Write a SQL query to find employees by project assignment.","completion":"SELECT e.* FROM employees e JOIN project_assignments pa ON e.id = pa.employee_id WHERE pa.project_id = 1;"}
{"prompt":"How to use MongoDB $pull operator?","completion":"db.collection.updateOne({ _id: 1 }, { $pull: { tags: 'old_tag' } });"}
{"prompt":"Explain SQL indexed views.","completion":"Indexed views store query results with an index for performance. Example: CREATE VIEW sales_view WITH SCHEMABINDING AS SELECT...;"}
{"prompt":"Write a Neo4j query to find nodes by relationship count.","completion":"MATCH (n:Person) WITH n, SIZE((n)-[:KNOWS]->()) AS rel_count WHERE rel_count > 1 RETURN n;"}
{"prompt":"How to use SQL CHAR_LENGTH?","completion":"SELECT CHAR_LENGTH(name) FROM employees;"}
{"prompt":"Write a MongoDB query to find by array element match.","completion":"db.collection.find({ items: { $elemMatch: { name: 'product1', price: { $gt: 10 } } } });"}
{"prompt":"What is Redis SHUTDOWN command?","completion":"SHUTDOWN stops the Redis server gracefully."}
{"prompt":"Write a SQL query to find employees by supervisor.","completion":"SELECT e1.* FROM employees e1 JOIN employees e2 ON e1.supervisor_id = e2.id WHERE e2.name = 'John';"}
{"prompt":"How to use Cassandra UDTs?","completion":"CREATE TYPE keyspace.address (street TEXT, city TEXT); CREATE TABLE employees (id UUID PRIMARY KEY, addr FROZEN<address>);"}
{"prompt":"Explain SQL merge statement.","completion":"MERGE (or UPSERT) combines INSERT and UPDATE. Example: MERGE INTO employees e USING new_data n ON e.id = n.id WHEN MATCHED THEN UPDATE... WHEN NOT MATCHED THEN INSERT...;"}
{"prompt":"Write a MongoDB query to find by nested array.","completion":"db.collection.find({ 'items.subitems.name': 'subproduct' });"}
{"prompt":"How to use Redis ZSCORE?","completion":"ZSCORE leaderboard 'player1';"}
{"prompt":"Write a SQL query to find employees by location.","completion":"SELECT * FROM employees WHERE location = 'New York';"}
{"prompt":"What is MongoDB backup with oplog?","completion":"Oplog backups capture incremental changes for point-in-time recovery using mongodump --oplog."}
{"prompt":"Write a Neo4j query to find nodes by property pattern.","completion":"MATCH (n:Person) WHERE n.name =~ 'Jo.*' RETURN n;"}
{"prompt":"Write a Cassandra query to select with secondary index.","completion":"CREATE INDEX ON keyspace.employees (name); SELECT * FROM employees WHERE name = 'John';"}
{"prompt":"What is Redis BGSAVE?","completion":"BGSAVE performs a background save of the dataset to disk."}
{"prompt":"Write a SQL query to find employees by salary percentile.","completion":"SELECT * FROM employees WHERE salary >= (SELECT PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY salary) FROM employees);"}
{"prompt":"How to use MongoDB $ne operator?","completion":"db.collection.find({ status: { $ne: 'inactive' } });"}
{"prompt":"Explain SQL schema.","completion":"A schema organizes database objects like tables and views. Example: CREATE SCHEMA company; CREATE TABLE company.employees...;"}
{"prompt":"Write a Neo4j query to find nodes by relationship direction.","completion":"MATCH (n)-[:KNOWS]->(m) WHERE n.age > m.age RETURN n, m;"}
{"prompt":"How to use SQL FLOOR?","completion":"SELECT FLOOR(salary / 1000) * 1000 AS salary_bucket FROM employees;"}
{"prompt":"Write a MongoDB query to find by array size range.","completion":"db.collection.find({ tags: { $size: { $gte: 2, $lte: 5 } } });"}
{"prompt":"What is Redis SAVE command?","completion":"SAVE performs a synchronous save of the dataset to disk."}
{"prompt":"Write a SQL query to find employees by project count.","completion":"SELECT e.* FROM employees e JOIN project_assignments pa ON e.id = pa.employee_id GROUP BY e.id HAVING COUNT(*) > 2;"}
{"prompt":"How to use Cassandra clustering columns?","completion":"CREATE TABLE keyspace.employees (dept_id UUID, join_date TIMESTAMP, id UUID, PRIMARY KEY (dept_id, join_date, id));"}
{"prompt":"Explain SQL dynamic SQL.","completion":"Dynamic SQL builds queries at runtime. Example: EXECUTE ('SELECT * FROM ' || table_name);"}
{"prompt":"Write a MongoDB query to find by nested field existence.","completion":"db.collection.find({ 'address.city': { $exists: true } });"}
{"prompt":"How to use Redis ZUNIONSTORE?","completion":"ZUNIONSTORE result 2 set1 set2;"}
{"prompt":"Write a SQL query to find employees by tenure range.","completion":"SELECT * FROM employees WHERE DATEDIFF(CURRENT_DATE, hire_date) BETWEEN 365 AND 730;"}
{"prompt":"What is MongoDB profiler?","completion":"The profiler logs slow queries for performance analysis. Example: db.setProfilingLevel(1, { slowms: 100 });"}
{"prompt":"Write a Neo4j query to find nodes by relationship property range.","completion":"MATCH (n)-[r:KNOWS {since: 2020}]->(m) RETURN n, m;"}
{"prompt":"How to use SQL CEIL?","completion":"SELECT CEIL(salary / 1000) * 1000 FROM employees;"}
{"prompt":"Write a Cassandra query to select with aggregation.","completion":"SELECT COUNT(*) FROM keyspace.employees WHERE department = 'Sales';"}
{"prompt":"What is Redis CLIENT command?","completion":"CLIENT commands manage client connections, e.g., CLIENT LIST or CLIENT KILL."}
{"prompt":"Write a SQL query to find employees by salary increase.","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) * 1.2 FROM employees);"}
{"prompt":"How to use MongoDB $rename operator?","completion":"db.collection.updateOne({ _id: 1 }, { $rename: { oldField: 'newField' } });"}
{"prompt":"Explain SQL full-text index.","completion":"Full-text indexes optimize text search. Example: CREATE FULLTEXT INDEX idx_text ON employees(description);"}
{"prompt":"Write a Neo4j query to find nodes by label count.","completion":"MATCH (n) WHERE SIZE(LABELS(n)) > 1 RETURN n;"}
{"prompt":"How to use SQL YEAR function?","completion":"SELECT YEAR(hire_date) FROM employees;"}
{"prompt":"Write a MongoDB query to find by array not empty.","completion":"db.collection.find({ tags: { $ne: [] } });"}
{"prompt":"What is Redis latency monitoring?","completion":"Latency monitoring tracks command execution delays. Example: LATENCY MONITOR THRESHOLD 100;"}
{"prompt":"Write a SQL query to find employees by department budget.","completion":"SELECT e.* FROM employees e JOIN departments d ON e.department_id = d.id WHERE d.budget > 1000000;"}
{"prompt":"How to use Cassandra timeuuid?","completion":"CREATE TABLE keyspace.events (id TIMEUUID PRIMARY KEY, data TEXT); INSERT INTO events (id, data) VALUES (now(), 'event');"}
{"prompt":"Explain SQL pivot vs unpivot.","completion":"PIVOT transposes rows to columns; UNPIVOT does the reverse. Example: SELECT * FROM sales PIVOT (SUM(amount) FOR year IN (2022, 2023));"}
{"prompt":"Write a MongoDB query to find by subdocument field.","completion":"db.collection.find({ 'details.status': 'active' });"}
{"prompt":"How to use Redis ZRANGEWITHSCORES?","completion":"ZRANGE leaderboard 0 -1 WITHSCORES;"}
{"prompt":"Write a SQL query to find employees by performance rank.","completion":"SELECT name, DENSE_RANK() OVER (PARTITION BY department ORDER BY performance_score DESC) FROM employees;"}
{"prompt":"What is MongoDB explain plan?","completion":"Explain plans analyze query performance. Example: db.collection.find().explain('executionStats');"}
{"prompt":"Write a Neo4j query to find nodes by property null.","completion":"MATCH (n:Person) WHERE n.age IS NULL RETURN n;"}
{"prompt":"How to use SQL MONTH function?","completion":"SELECT MONTH(hire_date) FROM employees;"}
{"prompt":"Write a Cassandra query to select with JSON.","completion":"SELECT JSON * FROM keyspace.employees WHERE id = 1;"}
{"prompt":"What is Redis failover?","completion":"Failover promotes a replica to primary in a Redis cluster or replica set."}
{"prompt":"How to use MongoDB $addToSet operator?","completion":"db.collection.updateOne({ _id: 1 }, { $addToSet: { tags: 'new_tag' } });"}
{"prompt":"Explain SQL table constraints.","completion":"Constraints enforce data integrity: NOT NULL, UNIQUE, PRIMARY KEY, FOREIGN KEY, CHECK."}
{"prompt":"How to use SQL DAY function?","completion":"SELECT DAY(hire_date) FROM employees;"}
{"prompt":"Write a MongoDB query to find by array field match.","completion":"db.collection.find({ tags: ['SQL', 'MongoDB'] });"}
{"prompt":"What is Redis PUBSUB command?","completion":"PUBSUB provides pub/sub channel info. Example: PUBSUB CHANNELS;"}
{"prompt":"Write a SQL query to find employees by project deadline.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.project_id = p.id WHERE p.deadline < '2023-12-31';"}
{"prompt":"How to use Cassandra tuple type?","completion":"CREATE TABLE keyspace.employees (id UUID PRIMARY KEY, coords TUPLE<INT, INT>); INSERT INTO employees (id, coords) VALUES (uuid(), (1, 2));"}
{"prompt":"Explain SQL indexing strategies.","completion":"Use B-tree for general queries, GiST for geospatial, GIN for full-text search, depending on query type."}
{"prompt":"Write a MongoDB query to find by date comparison.","completion":"db.collection.find({ createdAt: { $lt: new Date('2023-01-01') } });"}
{"prompt":"How to use Redis ZREMRANGEBYRANK?","completion":"ZREMRANGEBYRANK leaderboard 0 1;"}
{"prompt":"Write a SQL query to find employees by salary growth.","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) * 1.5 FROM employees);"}
{"prompt":"What is MongoDB partial index?","completion":"A partial index indexes a subset of documents. Example: db.collection.createIndex({ age: 1 }, { partialFilterExpression: { status: 'active' } });"}
{"prompt":"Write a Neo4j query to find nodes by property type.","completion":"MATCH (n) WHERE n.age IS NOT NULL AND n.age > 20 RETURN n;"}
{"prompt":"How to use SQL HOUR function?","completion":"SELECT HOUR(created_at) FROM logs;"}
{"prompt":"Write a Cassandra query to select with map.","completion":"CREATE TABLE keyspace.employees (id UUID PRIMARY KEY, details MAP<TEXT, TEXT>); SELECT details['key'] FROM employees;"}
{"prompt":"What is Redis client caching?","completion":"Client caching tracks frequently accessed keys for performance. Example: CLIENT TRACKING ON;"}
{"prompt":"Write a SQL query to find employees by contract type.","completion":"SELECT * FROM employees WHERE contract_type = 'full-time';"}
{"prompt":"How to use MongoDB $expr operator?","completion":"db.collection.find({ $expr: { $gt: ['$salary', '$bonus'] } });"}
{"prompt":"Explain SQL query optimization.","completion":"Optimization uses indexes, query rewriting, and execution plan analysis to improve performance."}
{"prompt":"Write a Neo4j query to find nodes by relationship pattern.","completion":"MATCH (n:Person)-[:KNOWS]->(:Person)-[:LIKES]->(m) RETURN n, m;"}
{"prompt":"How to use SQL SECOND function?","completion":"SELECT SECOND(created_at) FROM logs;"}
{"prompt":"Write a MongoDB query to find by array subset.","completion":"db.collection.find({ tags: { $all: ['tag1', 'tag2'] } });"}
{"prompt":"What is Redis slowlog?","completion":"SLOWLOG tracks slow commands. Example: SLOWLOG GET 10;"}
{"prompt":"Write a SQL query to find employees by bonus eligibility.","completion":"SELECT * FROM employees WHERE bonus > 0;"}
{"prompt":"How to use Cassandra list type?","completion":"CREATE TABLE keyspace.employees (id UUID PRIMARY KEY, skills LIST<TEXT>); UPDATE employees SET skills = skills + ['SQL'];"}
{"prompt":"Explain SQL query execution plan.","completion":"An execution plan shows how a query is executed, including index usage and join order. Example: EXPLAIN SELECT * FROM employees;"}
{"prompt":"Write a MongoDB query to find by nested field match.","completion":"db.collection.find({ 'profile.details.status': 'active' });"}
{"prompt":"How to use Redis ZCARD?","completion":"ZCARD leaderboard;"}
{"prompt":"Write a SQL query to find employees by performance tier.","completion":"SELECT * FROM employees WHERE performance_score >= 90;"}
{"prompt":"What is MongoDB retryable writes?","completion":"Retryable writes automatically retry failed writes for reliability in replica sets."}
{"prompt":"Write a Neo4j query to find nodes by relationship length.","completion":"MATCH p = (n:Person)-[:KNOWS*3..5]->(m) RETURN n, m;"}
{"prompt":"Write a Cassandra query to select with set.","completion":"CREATE TABLE keyspace.employees (id UUID PRIMARY KEY, tags SET<TEXT>); SELECT tags FROM employees;"}
{"prompt":"What is Redis memory optimization?","completion":"Memory optimization uses data structures like ziplists or intsets to reduce footprint."}
{"prompt":"Write a SQL query to find employees by team lead.","completion":"SELECT e.* FROM employees e JOIN employees l ON e.lead_id = l.id WHERE l.name = 'Jane';"}
{"prompt":"How to use MongoDB $currentDate?","completion":"db.collection.updateOne({ _id: 1 }, { $currentDate: { lastModified: true } });"}
{"prompt":"Explain SQL database roles.","completion":"Roles group permissions for access control. Example: CREATE ROLE manager; GRANT UPDATE ON employees TO manager;"}
{"prompt":"Write a Neo4j query to find nodes by property comparison.","completion":"MATCH (n:Person) WHERE n.salary > n.bonus RETURN n;"}
{"prompt":"How to use SQL ABS function?","completion":"SELECT ABS(salary - bonus) FROM employees;"}
{"prompt":"Write a MongoDB query to find by array index.","completion":"db.collection.find({ 'items.0': 'value' });"}
{"prompt":"What is Redis FLUSHALL?","completion":"FLUSHALL deletes all keys in all databases on the server."}
{"prompt":"Write a SQL query to find employees by office location.","completion":"SELECT * FROM employees WHERE office_id = 1;"}
{"prompt":"How to use Cassandra counter updates?","completion":"UPDATE keyspace.counters SET count = count + 1 WHERE id = uuid();"}
{"prompt":"Explain SQL query caching.","completion":"Query caching stores results for reuse, improving performance for frequent queries."}
{"prompt":"Write a MongoDB query to find by field existence.","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"How to use Redis ZRANGEBYLEX?","completion":"ZRANGEBYLEX myset [a [z;"}
{"prompt":"Write a SQL query to find employees by project budget.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.project_id = p.id WHERE p.budget > 500000;"}
{"prompt":"What is MongoDB snapshot isolation?","completion":"Snapshot isolation provides a consistent view of data for transactions, avoiding dirty reads."}
{"prompt":"Write a Neo4j query to find nodes by label pattern.","completion":"MATCH (n) WHERE 'Person' IN LABELS(n) RETURN n;"}
{"prompt":"How to use SQL SIGN function?","completion":"SELECT SIGN(salary - 50000) FROM employees;"}
{"prompt":"Write a Cassandra query to select with order by.","completion":"SELECT * FROM keyspace.employees WHERE department = 'Sales' ORDER BY join_date DESC;"}
{"prompt":"What is Redis eviction policy?","completion":"Eviction policies like LRU or LFU remove keys when memory is full. Example: CONFIG SET maxmemory-policy allkeys-lru;"}
{"prompt":"Write a SQL query to find employees by skill count.","completion":"SELECT * FROM employees WHERE ARRAY_LENGTH(skills) > 3;"}
{"prompt":"How to use MongoDB $setOnInsert?","completion":"db.collection.updateOne({ _id: 1 }, { $setOnInsert: { createdAt: new Date() } }, { upsert: true });"}
{"prompt":"Explain SQL locking mechanisms.","completion":"Locking prevents concurrent access issues. Example: SELECT * FROM employees FOR UPDATE;"}
{"prompt":"How to use SQL MOD function?","completion":"SELECT MOD(salary, 1000) FROM employees;"}
{"prompt":"Write a MongoDB query to find by field comparison.","completion":"db.collection.find({ $expr: { $gt: ['$salary', '$bonus'] } });"}
{"prompt":"What is Redis PEXPIRE?","completion":"PEXPIRE sets key expiration in milliseconds. Example: PEXPIRE key 1000;"}
{"prompt":"Write a SQL query to find employees by department growth.","completion":"SELECT d.name FROM departments d JOIN employees e ON d.id = e.department_id GROUP BY d.name HAVING COUNT(*) > (SELECT AVG(COUNT(*)) FROM employees GROUP BY department_id);"}
{"prompt":"How to use MongoDB $max operator?","completion":"db.collection.updateOne({ _id: 1 }, { $max: { highScore: 100 } });"}
{"prompt":"Explain SQL transaction isolation levels.","completion":"Isolation levels (Read Uncommitted, Read Committed, Repeatable Read, Serializable) control transaction visibility and concurrency."}
{"prompt":"Write a Neo4j query to find nodes by relationship property null.","completion":"MATCH (n)-[r:KNOWS]->(m) WHERE r.since IS NULL RETURN n, m;"}
{"prompt":"How to use SQL POWER function?","completion":"SELECT POWER(salary, 2) FROM employees;"}
{"prompt":"Write a Cassandra query to select with limit and filter.","completion":"SELECT * FROM keyspace.employees WHERE department = 'Sales' LIMIT 10 ALLOW FILTERING;"}
{"prompt":"What is Redis FLUSHDB?","completion":"FLUSHDB deletes all keys in the current database."}
{"prompt":"How to use MongoDB $min operator?","completion":"db.collection.updateOne({ _id: 1 }, { $min: { lowScore: 50 } });"}
{"prompt":"Explain SQL data types.","completion":"SQL data types include INTEGER, VARCHAR, DECIMAL, DATE, BOOLEAN, etc., defining column data formats."}
{"prompt":"Write a Neo4j query to find nodes by multiple labels.","completion":"MATCH (n:Person:Employee) RETURN n;"}
{"prompt":"How to use SQL RAND function?","completion":"SELECT * FROM employees ORDER BY RAND();"}
{"prompt":"Write a MongoDB query to find by array field regex.","completion":"db.collection.find({ tags: { $regex: 'sql', $options: 'i' } });"}
{"prompt":"What is Redis TIME command?","completion":"TIME returns the server’s current time as a Unix timestamp and microseconds."}
{"prompt":"Write a SQL query to find employees by training completion.","completion":"SELECT e.* FROM employees e JOIN trainings t ON e.id = t.employee_id WHERE t.completed = true;"}
{"prompt":"How to use Cassandra map updates?","completion":"UPDATE keyspace.employees SET details['email'] = 'john@example.com' WHERE id = uuid();"}
{"prompt":"Explain SQL query hints.","completion":"Query hints guide the optimizer. Example: SELECT /*+ INDEX(employees idx_name) */ * FROM employees;"}
{"prompt":"Write a MongoDB query to find by field range.","completion":"db.collection.find({ salary: { $gte: 50000, $lte: 75000 } });"}
{"prompt":"How to use Redis ZPOPMAX?","completion":"ZPOPMAX leaderboard 1;"}
{"prompt":"Write a SQL query to find employees by salary tier.","completion":"SELECT * FROM employees WHERE salary > (SELECT PERCENTILE_CONT(0.8) WITHIN GROUP (ORDER BY salary) FROM employees);"}
{"prompt":"What is MongoDB change stream resume?","completion":"Change streams resume after interruptions using a resume token. Example: db.collection.watch({ resumeAfter: token });"}
{"prompt":"Write a Neo4j query to find nodes by property sum.","completion":"MATCH (n:Person) WITH n, n.salary + n.bonus AS total_comp WHERE total_comp > 100000 RETURN n;"}
{"prompt":"How to use SQL COALESCE with multiple columns?","completion":"SELECT COALESCE(email, phone, 'no_contact') FROM employees;"}
{"prompt":"Write a Cassandra query to select with TTL remaining.","completion":"SELECT WRITETIME(name) FROM keyspace.employees WHERE id = uuid();"}
{"prompt":"What is Redis GEOADD?","completion":"GEOADD adds geospatial data. Example: GEOADD locations 13.361 52.516 'Berlin';"}
{"prompt":"Write a SQL query to find employees by department revenue.","completion":"SELECT e.* FROM employees e JOIN departments d ON e.department_id = d.id WHERE d.revenue > 1000000;"}
{"prompt":"How to use MongoDB $pop operator?","completion":"db.collection.updateOne({ _id: 1 }, { $pop: { items: 1 } });"}
{"prompt":"Explain SQL database snapshots.","completion":"Snapshots create a read-only copy of the database at a point in time for backups or reporting."}
{"prompt":"Write a Neo4j query to find nodes by relationship property comparison.","completion":"MATCH (n)-[r:KNOWS]->(m) WHERE r.since > 2020 RETURN n, m;"}
{"prompt":"How to use SQL EXP function?","completion":"SELECT EXP(salary / 1000) FROM employees;"}
{"prompt":"Write a MongoDB query to find by field not null.","completion":"db.collection.find({ field: { $ne: null } });"}
{"prompt":"What is Redis OBJECT command?","completion":"OBJECT provides key metadata, e.g., OBJECT ENCODING key."}
{"prompt":"Write a SQL query to find employees by project status.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.project_id = p.id WHERE p.status = 'active';"}
{"prompt":"How to use Cassandra frozen types?","completion":"CREATE TYPE keyspace.address (street TEXT); CREATE TABLE employees (id UUID PRIMARY KEY, addr FROZEN<address>);"}
{"prompt":"Explain SQL query rewriting.","completion":"Query rewriting optimizes queries internally, e.g., converting subqueries to joins for performance."}
{"prompt":"Write a MongoDB query to find by array field size.","completion":"db.collection.find({ tags: { $size: 2 } });"}
{"prompt":"How to use Redis ZPOPMIN?","completion":"ZPOPMIN leaderboard 1;"}
{"prompt":"Write a SQL query to find employees by supervisor rank.","completion":"SELECT e1.* FROM employees e1 JOIN employees e2 ON e1.supervisor_id = e2.id WHERE e2.rank = 'senior';"}
{"prompt":"What is MongoDB aggregation framework?","completion":"The aggregation framework processes data through stages like $match, $group, and $sort for complex queries."}
{"prompt":"Write a Neo4j query to find nodes by property existence and value.","completion":"MATCH (n:Person) WHERE EXISTS(n.salary) AND n.salary > 50000 RETURN n;"}
{"prompt":"How to use SQL LN function?","completion":"SELECT LN(salary) FROM employees;"}
{"prompt":"Write a Cassandra query to select with list update.","completion":"UPDATE keyspace.employees SET skills = skills + ['MongoDB'] WHERE id = uuid();"}
{"prompt":"What is Redis PTTL?","completion":"PTTL returns a key’s remaining time to live in milliseconds."}
{"prompt":"How to use MongoDB $geoWithin?","completion":"db.collection.find({ location: { $geoWithin: { $box: [[0, 0], [100, 100]] } } });"}
{"prompt":"Explain SQL database triggers.","completion":"Triggers execute automatically on events like INSERT or UPDATE. Example: CREATE TRIGGER audit AFTER INSERT ON employees FOR EACH ROW INSERT INTO audit_log...;"}
{"prompt":"Write a Neo4j query to find nodes by relationship count range.","completion":"MATCH (n:Person) WITH n, SIZE((n)-[:KNOWS]->()) AS rel_count WHERE rel_count BETWEEN 2 AND 5 RETURN n;"}
{"prompt":"How to use SQL PI function?","completion":"SELECT PI() * salary FROM employees;"}
{"prompt":"Write a MongoDB query to find by field type.","completion":"db.collection.find({ age: { $type: ['int', 'double'] } });"}
{"prompt":"What is Redis TOUCH command?","completion":"TOUCH updates a key’s last access time without modifying it."}
{"prompt":"Write a SQL query to find employees by office size.","completion":"SELECT e.* FROM employees e JOIN offices o ON e.office_id = o.id WHERE o.size > 100;"}
{"prompt":"How to use Cassandra set updates?","completion":"UPDATE keyspace.employees SET tags = tags + {'SQL'} WHERE id = uuid();"}
{"prompt":"Explain SQL query statistics.","completion":"Statistics help the optimizer estimate query costs, e.g., table row counts or index selectivity."}
{"prompt":"Write a MongoDB query to find by array field existence.","completion":"db.collection.find({ tags: { $exists: true, $ne: [] } });"}
{"prompt":"How to use Redis ZLEXCOUNT?","completion":"ZLEXCOUNT myset [a [z;"}
{"prompt":"Write a SQL query to find employees by project duration.","completion":"SELECT e.* FROM employees e JOIN projects p ON e.project_id = p.id WHERE DATEDIFF(p.end_date, p.start_date) > 365;"}
{"prompt":"What is MongoDB causally consistent sessions?","completion":"Causally consistent sessions ensure read-your-writes consistency across operations."}
{"prompt":"Write a Neo4j query to find nodes by property not null.","completion":"MATCH (n:Person) WHERE n.name IS NOT NULL RETURN n;"}
{"prompt":"How to use SQL SQUARE function?","completion":"SELECT SQUARE(salary) FROM employees;"}
{"prompt":"Write a Cassandra query to select with tuple.","completion":"CREATE TABLE keyspace.employees (id UUID PRIMARY KEY, coords TUPLE<INT, INT>); SELECT coords FROM employees;"}
{"prompt":"What is Redis LASTSAVE?","completion":"LASTSAVE returns the timestamp of the last successful save to disk."}
{"prompt":"Write a SQL query to find employees by department size growth.","completion":"SELECT d.name FROM departments d JOIN employees e ON d.id = e.department_id GROUP BY d.name HAVING COUNT(*) > (SELECT AVG(COUNT(*)) * 1.2 FROM employees GROUP BY department_id);"}
{"prompt":"How to use MongoDB $geoIntersects?","completion":"db.collection.find({ location: { $geoIntersects: { $geometry: { type: 'Point', coordinates: [0, 0] } } } });"}
{"prompt":"Explain SQL database replication.","completion":"Replication copies data to secondary nodes for redundancy and load balancing."}
{"prompt":"Write a Neo4j query to find nodes by relationship property existence.","completion":"MATCH (n)-[r:KNOWS]->(m) WHERE EXISTS(r.since) RETURN n, m;"}
{"prompt":"How to use SQL COS function?","completion":"SELECT COS(salary / 1000) FROM employees;"}
{"prompt":"Write a MongoDB query to find documents where age > 30.","completion":"db.collection.find({ age: { $gt: 30 } });"}
{"prompt":"How to insert a record in PostgreSQL?","completion":"INSERT INTO table_name (column1, column2) VALUES (value1, value2);"}
{"prompt":"Explain primary key in SQL.","completion":"A primary key uniquely identifies each record in a table, ensuring no duplicates and not null. Example: id INT PRIMARY KEY;"}
{"prompt":"Explain SQL GROUP BY clause.","completion":"GROUP BY groups rows with the same values into summary rows. Example: SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"Write a Neo4j query to find all nodes with a specific property.","completion":"MATCH (n:Node { property: 'value' }) RETURN n;"}
{"prompt":"What's the difference between SQL and NoSQL?","completion":"SQL databases are relational, using structured schemas and SQL queries, while NoSQL databases are non-relational, with flexible schemas for unstructured data."}
{"prompt":"Write a Cassandra query to insert data.","completion":"INSERT INTO keyspace.table (column1, column2) VALUES ('value1', 'value2');"}
{"prompt":"Explain transactions in SQL.","completion":"Transactions ensure ACID properties (Atomicity, Consistency, Isolation, Durability). Example: BEGIN TRANSACTION; UPDATE table SET value = 100; COMMIT;"}
{"prompt":"Write a MongoDB query to sort results.","completion":"db.collection.find().sort({ field: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"How to use Redis lists?","completion":"LPUSH mylist 'value'; RPOP mylist;"}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze execution plans, limit rows with WHERE."}
{"prompt":"Write a Neo4j query to find relationships.","completion":"MATCH (n)-[r:RELATION]->(m) RETURN n, r, m;"}
{"prompt":"What's a graph database?","completion":"A graph database stores data as nodes and relationships, ideal for complex connections like social networks. Example: Neo4j."}
{"prompt":"How to create a view in SQL?","completion":"CREATE VIEW view_name AS SELECT column1, column2 FROM table WHERE condition;"}
{"prompt":"Write a Redis command to expire a key.","completion":"SET mykey 'value' EX 3600; // Expires in 1 hour"}
{"prompt":"Explain normalization in SQL.","completion":"Normalization reduces redundancy by organizing data into tables, following forms like 1NF, 2NF, 3NF."}
{"prompt":"Write a MongoDB aggregation query.","completion":"db.collection.aggregate([{ $match: { field: 'value' } }, { $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"What is CAP theorem in NoSQL?","completion":"CAP theorem states a distributed system can only guarantee two of: Consistency, Availability, Partition tolerance."}
{"prompt":"Write a PostgreSQL trigger.","completion":"CREATE TRIGGER my_trigger BEFORE INSERT ON table FOR EACH ROW EXECUTE FUNCTION my_function();"}
{"prompt":"Explain SQL subqueries.","completion":"A subquery is a query nested inside another. Example: SELECT * FROM table WHERE id IN (SELECT id FROM other_table);"}
{"prompt":"How to use $lookup in MongoDB?","completion":"db.collection.aggregate([{ $lookup: { from: 'other', localField: 'field', foreignField: 'field', as: 'result' } }]);"}
{"prompt":"What are Redis sorted sets?","completion":"Sorted sets store elements with scores for ranking. Example: ZADD myset 1 'item';"}
{"prompt":"Explain indexing in MongoDB.","completion":"Indexes improve query performance. Example: db.collection.createIndex({ field: 1 });"}
{"prompt":"Write a SQL query with a CASE statement.","completion":"SELECT column, CASE WHEN condition THEN 'result' ELSE 'other' END FROM table;"}
{"prompt":"What is denormalization in NoSQL?","completion":"Denormalization embeds related data in documents to optimize read performance, unlike SQL's normalized tables."}
{"prompt":"Write a Neo4j query for shortest path.","completion":"MATCH p = shortestPath((n:Node {id: 'start'})-[*]-(m:Node {id: 'end'})) RETURN p;"}
{"prompt":"Write a SQL query with LIKE operator.","completion":"SELECT * FROM table WHERE column LIKE '%pattern%';"}
{"prompt":"Explain ACID properties.","completion":"ACID ensures reliable transactions: Atomicity (all or nothing), Consistency (valid state), Isolation (independent transactions), Durability (committed changes persist)."}
{"prompt":"Write a MongoDB text search query.","completion":"db.collection.find({ $text: { $search: 'term' } });"}
{"prompt":"Write a SQL query with window function.","completion":"SELECT column, ROW_NUMBER() OVER (PARTITION BY group_column ORDER BY sort_column) FROM table;"}
{"prompt":"How to use Redis hashes?","completion":"HMSET myhash field1 'value1' field2 'value2'; HGET myhash field1;"}
{"prompt":"Explain SQL FOREIGN KEY.","completion":"A FOREIGN KEY links tables to ensure referential integrity. Example: FOREIGN KEY (column) REFERENCES parent_table(parent_column);"}
{"prompt":"Write a MongoDB query to update multiple documents.","completion":"db.collection.updateMany({ filter }, { $set: { field: 'new_value' } });"}
{"prompt":"Write a Neo4j query to create a node.","completion":"CREATE (n:Node { property: 'value' });"}
{"prompt":"Explain SQL views.","completion":"Views are virtual tables based on a query. Example: CREATE VIEW view_name AS SELECT * FROM table WHERE condition;"}
{"prompt":"What are Redis transactions?","completion":"Transactions group commands atomically. Example: MULTI; SET key value; EXEC;"}
{"prompt":"Write a SQL query with DATE functions.","completion":"SELECT CURRENT_DATE, DATE_ADD(date_column, INTERVAL 1 DAY) FROM table;"}
{"prompt":"Explain NoSQL consistency models.","completion":"NoSQL offers eventual consistency (data syncs over time) or strong consistency (immediate sync), balancing CAP theorem trade-offs."}
{"prompt":"Write a Cassandra batch statement.","completion":"BEGIN BATCH INSERT INTO table (col1, col2) VALUES (val1, val2); UPDATE table SET col1 = val1; APPLY BATCH;"}
{"prompt":"How to use SQL PIVOT?","completion":"SELECT * FROM table PIVOT (AGGREGATE_FUNCTION(column) FOR pivot_column IN (value1, value2));"}
{"prompt":"Explain SQL triggers.","completion":"Triggers execute functions on specific table events. Example: CREATE TRIGGER my_trigger AFTER INSERT ON table FOR EACH ROW EXECUTE FUNCTION func();"}
{"prompt":"Write a Redis command for sorted set ranking.","completion":"ZADD myset 100 'item1'; ZRANK myset 'item1';"}
{"prompt":"What is a document store in NoSQL?","completion":"A document store (e.g., MongoDB) stores data as JSON/BSON documents, allowing flexible schemas."}
{"prompt":"Write a Neo4j query to delete a node.","completion":"MATCH (n:Node { property: 'value' }) DELETE n;"}
{"prompt":"Explain SQL CHECK constraint.","completion":"CHECK ensures column values meet a condition. Example: CREATE TABLE table (age INT CHECK (age >= 18));"}
{"prompt":"Write a MongoDB query to count documents.","completion":"db.collection.countDocuments({ field: 'value' });"}
{"prompt":"Write a SQL query with multiple JOINs.","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id JOIN table3 ON table2.id = table3.id;"}
{"prompt":"Explain MongoDB replica sets.","completion":"Replica sets are groups of mongod instances maintaining the same data for redundancy and high availability."}
{"prompt":"Write a Cassandra query to update data.","completion":"UPDATE keyspace.table SET column = 'new_value' WHERE key = value;"}
{"prompt":"How to use SQL COALESCE?","completion":"SELECT COALESCE(column, 'default') FROM table;"}
{"prompt":"Write a Neo4j query to find all paths.","completion":"MATCH p = (n:Node)-[*1..3]->(m:Node) RETURN p;"}
{"prompt":"Explain SQL indexing strategies.","completion":"Use B-tree for general queries, bitmap for low-cardinality columns, and clustered indexes for range queries."}
{"prompt":"Write a MongoDB query with $in operator.","completion":"db.collection.find({ field: { $in: ['value1', 'value2'] } });"}
{"prompt":"Write a SQL query with aggregate functions.","completion":"SELECT department, AVG(salary) FROM employees GROUP BY department;"}
{"prompt":"Explain NoSQL data modeling.","completion":"NoSQL data modeling uses denormalization, embedding, or references based on query patterns, unlike SQL's normalized tables."}
{"prompt":"Write a Cassandra query to select data.","completion":"SELECT * FROM keyspace.table WHERE key = value;"}
{"prompt":"How to use SQL MERGE statement?","completion":"MERGE INTO target_table USING source_table ON condition WHEN MATCHED THEN UPDATE SET column = value WHEN NOT MATCHED THEN INSERT VALUES (value1, value2);"}
{"prompt":"Explain SQL UNIQUE constraint.","completion":"UNIQUE ensures no duplicate values in a column. Example: CREATE TABLE table (email VARCHAR(50) UNIQUE);"}
{"prompt":"Write a Neo4j query to update a node.","completion":"MATCH (n:Node { id: 'value' }) SET n.property = 'new_value';"}
{"prompt":"How to use Redis bitmaps?","completion":"SETBIT mykey 7 1; GETBIT mykey 7;"}
{"prompt":"Explain MongoDB sharding.","completion":"Sharding splits data across servers using a shard key to improve scalability and performance."}
{"prompt":"How to use SQL BETWEEN operator?","completion":"SELECT * FROM table WHERE column BETWEEN 10 AND 20;"}
{"prompt":"Write a MongoDB query with $exists operator.","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"Explain SQL stored procedures.","completion":"Stored procedures are precompiled SQL code stored in the database for reuse. Example: CREATE PROCEDURE proc_name AS SELECT * FROM table;"}
{"prompt":"Write a Neo4j query to create a relationship.","completion":"MATCH (a:Node {id: '1'}), (b:Node {id: '2'}) CREATE (a)-[:RELATION]->(b);"}
{"prompt":"Explain NoSQL eventual consistency.","completion":"Eventual consistency means data syncs across nodes over time, prioritizing availability over immediate consistency."}
{"prompt":"Write a Cassandra query with ALLOW FILTERING.","completion":"SELECT * FROM keyspace.table WHERE column = 'value' ALLOW FILTERING;"}
{"prompt":"How to use SQL IN operator?","completion":"SELECT * FROM table WHERE column IN ('value1', 'value2');"}
{"prompt":"Explain SQL materialized views.","completion":"Materialized views store query results physically, refreshed periodically, unlike regular views. Example: CREATE MATERIALIZED VIEW view_name AS SELECT * FROM table;"}
{"prompt":"How to use Redis sets?","completion":"SADD myset 'item1'; SMEMBERS myset;"}
{"prompt":"Write a SQL query with DISTINCT.","completion":"SELECT DISTINCT column FROM table;"}
{"prompt":"Explain MongoDB transactions.","completion":"MongoDB supports multi-document transactions for replica sets. Example: db.getMongo().startSession().startTransaction();"}
{"prompt":"Write a Cassandra query to create a keyspace.","completion":"CREATE KEYSPACE mykeyspace WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};"}
{"prompt":"How to use SQL TRUNCATE?","completion":"TRUNCATE TABLE table_name;"}
{"prompt":"Explain SQL partitioning.","completion":"Partitioning divides large tables into smaller pieces for performance. Example: CREATE TABLE table (id INT) PARTITION BY RANGE (id);"}
{"prompt":"Write a Neo4j query to merge nodes.","completion":"MERGE (n:Node { id: 'value' }) ON CREATE SET n.property = 'new_value';"}
{"prompt":"How to use Redis geospatial data?","completion":"GEOADD mygeo 13.361 52.516 'place'; GEORADIUS mygeo 13.361 52.516 100 km;"}
{"prompt":"Write a SQL query with multiple conditions.","completion":"SELECT * FROM table WHERE column1 = 'value' AND column2 > 10;"}
{"prompt":"Explain NoSQL wide-column stores.","completion":"Wide-column stores (e.g., Cassandra) store data in flexible columns, optimized for large-scale analytics."}
{"prompt":"Write a Cassandra query with TTL.","completion":"INSERT INTO keyspace.table (id, value) VALUES ('1', 'data') USING TTL 3600;"}
{"prompt":"How to use SQL NULLIF?","completion":"SELECT NULLIF(column, 'value') FROM table;"}
{"prompt":"Explain SQL cursors.","completion":"Cursors iterate over query results row by row. Example: DECLARE my_cursor CURSOR FOR SELECT * FROM table;"}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH ()-[r:RELATION]->() WHERE r.property = 'value' DELETE r;"}
{"prompt":"How to use Redis Lua scripts?","completion":"EVAL 'return redis.call(\"SET\", KEYS[1], ARGV[1])' 1 mykey value;"}
{"prompt":"Write a SQL query with CTE.","completion":"WITH cte AS (SELECT * FROM table WHERE condition) SELECT * FROM cte;"}
{"prompt":"Explain MongoDB capped collections.","completion":"Capped collections have a fixed size, automatically overwriting old data. Example: db.createCollection('mycol', { capped: true, size: 100000 });"}
{"prompt":"Write a Cassandra query with IN clause.","completion":"SELECT * FROM keyspace.table WHERE key IN ('value1', 'value2');"}
{"prompt":"How to use SQL RANK function?","completion":"SELECT column, RANK() OVER (PARTITION BY group_column ORDER BY sort_column) FROM table;"}
{"prompt":"Write a MongoDB query to group by multiple fields.","completion":"db.collection.aggregate([{ $group: { _id: { field1: '$field1', field2: '$field2' }, count: { $sum: 1 } } }]);"}
{"prompt":"Explain SQL schema design.","completion":"Schema design organizes tables, keys, and relationships to ensure efficiency and integrity."}
{"prompt":"Write a Neo4j query to find node properties.","completion":"MATCH (n:Node) RETURN n.property;"}
{"prompt":"How to use Redis scan?","completion":"SCAN 0 MATCH 'pattern*' COUNT 100;"}
{"prompt":"Write a SQL query with self-join.","completion":"SELECT a.name, b.name FROM table a JOIN table b ON a.id = b.parent_id;"}
{"prompt":"Explain NoSQL time-series databases.","completion":"Time-series databases (e.g., InfluxDB) optimize for timestamped data, often used in monitoring."}
{"prompt":"How to use SQL LAG function?","completion":"SELECT column, LAG(column) OVER (ORDER BY sort_column) FROM table;"}
{"prompt":"Explain SQL temporary tables.","completion":"Temporary tables exist for a session. Example: CREATE TEMPORARY TABLE temp_table (id INT);"}
{"prompt":"How to use Redis incr?","completion":"INCR mycounter;"}
{"prompt":"Write a SQL query with cross join.","completion":"SELECT * FROM table1 CROSS JOIN table2;"}
{"prompt":"Explain MongoDB write concern.","completion":"Write concern specifies acknowledgment level for write operations. Example: db.collection.insertOne({ field: 'value' }, { w: 'majority' });"}
{"prompt":"Write a Cassandra query to create an index.","completion":"CREATE INDEX idx_name ON keyspace.table (column);"}
{"prompt":"Explain SQL sequence.","completion":"Sequences generate unique numbers. Example: CREATE SEQUENCE seq_name START 1;"}
{"prompt":"Write a Neo4j query to find neighbors.","completion":"MATCH (n:Node {id: 'value'})-[:RELATION]->(m) RETURN m;"}
{"prompt":"How to use Redis expireat?","completion":"SET mykey 'value'; EXPIREAT mykey 1631234567;"}
{"prompt":"Write a SQL query with IS NULL.","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores (e.g., Redis) store data as key-value pairs for fast retrieval."}
{"prompt":"Write a Cassandra query with counter.","completion":"UPDATE keyspace.table SET counter = counter + 1 WHERE key = value;"}
{"prompt":"How to use SQL LEAD function?","completion":"SELECT column, LEAD(column) OVER (ORDER BY sort_column) FROM table;"}
{"prompt":"Write a MongoDB query with $all operator.","completion":"db.collection.find({ field: { $all: ['value1', 'value2'] } });"}
{"prompt":"Explain SQL roles.","completion":"Roles manage permissions. Example: CREATE ROLE role_name; GRANT SELECT ON table TO role_name;"}
{"prompt":"Write a Neo4j query to create multiple nodes.","completion":"CREATE (n1:Node {id: '1'}), (n2:Node {id: '2'});"}
{"prompt":"How to use Redis zrange?","completion":"ZRANGE myset 0 -1 WITHSCORES;"}
{"prompt":"Write a SQL query with nested SELECT.","completion":"SELECT * FROM (SELECT column FROM table WHERE condition) AS subquery;"}
{"prompt":"Explain MongoDB GridFS.","completion":"GridFS stores large files by splitting them into chunks in MongoDB. Example: db.fs.files.find();"}
{"prompt":"Explain SQL database roles.","completion":"Database roles group privileges for easier management. Example: CREATE ROLE reader; GRANT SELECT TO reader;"}
{"prompt":"Write a Neo4j query to find all nodes of a label.","completion":"MATCH (n:Label) RETURN n;"}
{"prompt":"How to use Redis mset?","completion":"MSET key1 'value1' key2 'value2';"}
{"prompt":"Write a SQL query with HAVING and ORDER BY.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5 ORDER BY COUNT(*) DESC;"}
{"prompt":"Explain NoSQL scalability.","completion":"NoSQL databases often scale horizontally by adding nodes, unlike SQL's vertical scaling or sharding."}
{"prompt":"Write a Cassandra query to delete data.","completion":"DELETE FROM keyspace.table WHERE key = 'value';"}
{"prompt":"How to use SQL CONCAT?","completion":"SELECT CONCAT(first_name, ' ', last_name) AS full_name FROM table;"}
{"prompt":"Write a MongoDB query with $or operator.","completion":"db.collection.find({ $or: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"Explain SQL table partitioning.","completion":"Table partitioning splits large tables into smaller parts for performance. Example: PARTITION BY RANGE (column);"}
{"prompt":"How to use Redis lrange?","completion":"LRANGE mylist 0 -1;"}
{"prompt":"Write a SQL query with multiple aggregates.","completion":"SELECT department, COUNT(*), AVG(salary) FROM employees GROUP BY department;"}
{"prompt":"Explain MongoDB indexing types.","completion":"MongoDB supports single, compound, text, geospatial, and hashed indexes for query optimization."}
{"prompt":"Write a Cassandra query with ORDER BY.","completion":"SELECT * FROM keyspace.table WHERE key = 'value' ORDER BY clustering_column DESC;"}
{"prompt":"How to use SQL EXTRACT?","completion":"SELECT EXTRACT(YEAR FROM date_column) FROM table;"}
{"prompt":"Write a MongoDB query to update nested fields.","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $set: { 'nested.field': 'value' } });"}
{"prompt":"Explain SQL foreign key constraints.","completion":"Foreign keys enforce relationships between tables. Example: FOREIGN KEY (column) REFERENCES parent_table(parent_column);"}
{"prompt":"Write a Neo4j query to find common neighbors.","completion":"MATCH (a:Node {id: '1'})-[:RELATION]->(n)<-[:RELATION]-(b:Node {id: '2'}) RETURN n;"}
{"prompt":"How to use Redis getrange?","completion":"GETRANGE mykey 0 5;"}
{"prompt":"Write a SQL query with subquery in FROM.","completion":"SELECT * FROM (SELECT column FROM table WHERE condition) AS alias WHERE condition;"}
{"prompt":"Explain NoSQL graph database use cases.","completion":"Graph databases (e.g., Neo4j) are used for social networks, fraud detection, and recommendation systems."}
{"prompt":"Write a Cassandra query with secondary index.","completion":"SELECT * FROM keyspace.table WHERE indexed_column = 'value';"}
{"prompt":"How to use SQL CAST?","completion":"SELECT CAST(column AS INTEGER) FROM table;"}
{"prompt":"Write a MongoDB query with $elemMatch.","completion":"db.collection.find({ array_field: { $elemMatch: { key: 'value' } } });"}
{"prompt":"Explain SQL database snapshots.","completion":"Snapshots capture a database's state at a point in time for backup or analysis."}
{"prompt":"Write a Neo4j query to find cycles.","completion":"MATCH (n)-[:RELATION*1..3]->(n) RETURN n;"}
{"prompt":"How to use Redis zcount?","completion":"ZCOUNT myset 0 100;"}
{"prompt":"What's the history of computers?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain MongoDB TTL indexes.","completion":"TTL indexes automatically remove documents after a time period. Example: db.collection.createIndex({ createdAt: 1 }, { expireAfterSeconds: 3600 });"}
{"prompt":"Write a Cassandra query to select by range.","completion":"SELECT * FROM keyspace.table WHERE key = 'value' AND clustering_column > 10;"}
{"prompt":"How to use SQL NOW()?","completion":"SELECT NOW() AS current_time;"}
{"prompt":"What's a good photography tip?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $size operator.","completion":"db.collection.find({ array_field: { $size: 3 } });"}
{"prompt":"Explain SQL audit triggers.","completion":"Audit triggers log changes to tables for tracking. Example: CREATE TRIGGER audit_trigger AFTER UPDATE ON table FOR EACH ROW INSERT INTO audit_log VALUES (OLD.column, NEW.column);"}
{"prompt":"Write a Neo4j query to find all relationships of a node.","completion":"MATCH (n:Node {id: 'value'})-[r]-() RETURN r;"}
{"prompt":"How to use Redis hgetall?","completion":"HGETALL myhash;"}
{"prompt":"Write a SQL query with correlated subquery.","completion":"SELECT * FROM table1 WHERE column1 > (SELECT AVG(column2) FROM table2 WHERE table2.id = table1.id);"}
{"prompt":"Explain NoSQL multi-model databases.","completion":"Multi-model databases support multiple data models (e.g., document, graph) in one system, like ArangoDB."}
{"prompt":"Write a Cassandra query with lightweight transactions.","completion":"INSERT INTO keyspace.table (key, value) VALUES ('1', 'data') IF NOT EXISTS;"}
{"prompt":"How to use SQL DENSE_RANK?","completion":"SELECT column, DENSE_RANK() OVER (PARTITION BY group_column ORDER BY sort_column) FROM table;"}
{"prompt":"What's a good travel itinerary?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $gte and $lte.","completion":"db.collection.find({ field: { $gte: 10, $lte: 20 } });"}
{"prompt":"Explain SQL database backups.","completion":"Backups save database state for recovery. Example: mysqldump -u user -p database > backup.sql;"}
{"prompt":"Write a Neo4j query to find nodes by property pattern.","completion":"MATCH (n:Node) WHERE n.property =~ 'pattern.*' RETURN n;"}
{"prompt":"How to use Redis sinter?","completion":"SINTER set1 set2;"}
{"prompt":"Write a SQL query with JSON functions.","completion":"SELECT JSON_EXTRACT(column, '$.key') FROM table;"}
{"prompt":"Explain MongoDB change streams.","completion":"Change streams monitor real-time changes. Example: db.collection.watch().on('change', data => console.log(data));"}
{"prompt":"Write a MongoDB query to find by date range.","completion":"db.collection.find({ date: { $gte: ISODate('2023-01-01'), $lte: ISODate('2023-12-31') } });"}
{"prompt":"Explain SQL database replication.","completion":"Replication copies data to multiple servers for redundancy and load balancing. Example: MySQL master-slave replication."}
{"prompt":"Write a Neo4j query to create an index.","completion":"CREATE INDEX FOR (n:Node) ON (n.property);"}
{"prompt":"How to use Redis zrem?","completion":"ZREM myset 'item';"}
{"prompt":"Write a SQL query with string functions.","completion":"SELECT UPPER(column), LENGTH(column) FROM table;"}
{"prompt":"Explain NoSQL column-family stores.","completion":"Column-family stores (e.g., Cassandra) store data in flexible columns, optimized for large-scale analytics."}
{"prompt":"Write a Cassandra query with LIMIT.","completion":"SELECT * FROM keyspace.table WHERE key = 'value' LIMIT 10;"}
{"prompt":"How to use SQL MIN and MAX?","completion":"SELECT MIN(column), MAX(column) FROM table;"}
{"prompt":"Write a MongoDB query with $push operator.","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $push: { array_field: 'value' } });"}
{"prompt":"Explain SQL database roles and permissions.","completion":"Roles group permissions for access control. Example: GRANT SELECT, INSERT ON table TO role_name;"}
{"prompt":"Write a Neo4j query to find connected components.","completion":"CALL gds.wcc.stream({ nodeProjection: 'Node', relationshipProjection: 'RELATION' }) YIELD nodeId, componentId RETURN nodeId, componentId;"}
{"prompt":"How to use Redis expire?","completion":"SET mykey 'value'; EXPIRE mykey 3600;"}
{"prompt":"Write a SQL query with subquery in WHERE.","completion":"SELECT * FROM table WHERE column > (SELECT AVG(column) FROM table);"}
{"prompt":"Explain MongoDB aggregation pipeline.","completion":"The aggregation pipeline processes documents through stages like $match, $group. Example: db.collection.aggregate([{ $match: { field: 'value' } }]);"}
{"prompt":"Write a Cassandra query to update TTL.","completion":"UPDATE keyspace.table USING TTL 3600 SET column = 'value' WHERE key = 'value';"}
{"prompt":"How to use SQL GREATEST?","completion":"SELECT GREATEST(column1, column2) FROM table;"}
{"prompt":"Write a MongoDB query with $unset.","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $unset: { field: '' } });"}
{"prompt":"Explain SQL database indexes.","completion":"Indexes speed up queries by creating data structures. Example: CREATE INDEX idx_name ON table(column);"}
{"prompt":"How to use Redis lpushx?","completion":"LPUSHX mylist 'value';"}
{"prompt":"What's a good painting technique?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with CASE in ORDER BY.","completion":"SELECT * FROM table ORDER BY CASE WHEN column = 'value' THEN 0 ELSE 1 END;"}
{"prompt":"Explain NoSQL document database benefits.","completion":"Document databases offer flexible schemas, fast reads, and easy scaling for unstructured data."}
{"prompt":"Write a Cassandra query to select by time range.","completion":"SELECT * FROM keyspace.table WHERE time_column >= '2023-01-01' AND time_column <= '2023-12-31';"}
{"prompt":"How to use SQL INTERVAL?","completion":"SELECT date_column + INTERVAL '1 day' FROM table;"}
{"prompt":"Write a MongoDB query with $nin operator.","completion":"db.collection.find({ field: { $nin: ['value1', 'value2'] } });"}
{"prompt":"Explain SQL table constraints.","completion":"Constraints enforce data rules: PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL, CHECK."}
{"prompt":"Write a Neo4j query to find shortest path length.","completion":"MATCH (start:Node {id: 'start'}), (end:Node {id: 'end'}) RETURN length(shortestPath((start)-[*]-(end)));"}
{"prompt":"How to use Redis rpop?","completion":"RPOP mylist;"}
{"prompt":"What's a good book on philosophy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with JSON_ARRAYAGG.","completion":"SELECT JSON_ARRAYAGG(column) FROM table;"}
{"prompt":"Explain MongoDB read concern.","completion":"Read concern controls data consistency for reads. Example: db.collection.find().readConcern('majority');"}
{"prompt":"Write a Cassandra query to create a materialized view.","completion":"CREATE MATERIALIZED VIEW keyspace.view AS SELECT * FROM keyspace.table WHERE column IS NOT NULL PRIMARY KEY (column, key);"}
{"prompt":"How to use SQL LEAST?","completion":"SELECT LEAST(column1, column2) FROM table;"}
{"prompt":"What's renewable energy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $pull operator.","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $pull: { array_field: 'value' } });"}
{"prompt":"Explain SQL transaction isolation levels.","completion":"Isolation levels (e.g., READ COMMITTED, SERIALIZABLE) control transaction concurrency and consistency."}
{"prompt":"Write a Neo4j query to find node by regex.","completion":"MATCH (n:Node) WHERE n.property =~ 'value.*' RETURN n;"}
{"prompt":"How to use Redis srandmember?","completion":"SRANDMEMBER myset;"}
{"prompt":"What's a good cooking recipe?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with subquery in SELECT.","completion":"SELECT column, (SELECT COUNT(*) FROM table2 WHERE table2.id = table1.id) AS count FROM table1;"}
{"prompt":"Explain NoSQL document embedding.","completion":"Embedding stores related data in a single document for faster reads, unlike SQL's separate tables."}
{"prompt":"Write a Cassandra query with batch insert.","completion":"BEGIN BATCH INSERT INTO keyspace.table (key, value) VALUES ('1', 'data1'); INSERT INTO keyspace.table (key, value) VALUES ('2', 'data2'); APPLY BATCH;"}
{"prompt":"How to use SQL STR_TO_DATE?","completion":"SELECT STR_TO_DATE('2023-01-01', '%Y-%m-%d') FROM table;"}
{"prompt":"What's artificial intelligence ethics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $inc.","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $inc: { counter: 1 } });"}
{"prompt":"Explain SQL database clustering.","completion":"Clustering groups servers to act as a single system for high availability and load balancing."}
{"prompt":"Write a Neo4j query to find node relationships.","completion":"MATCH (n:Node {id: 'value'})-[r:RELATION]->(m) RETURN n, r, m;"}
{"prompt":"How to use Redis zrangebyscore?","completion":"ZRANGEBYSCORE myset 0 100;"}
{"prompt":"What's a good meditation technique?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with array functions.","completion":"SELECT ARRAY_AGG(column) FROM table;"}
{"prompt":"Explain MongoDB write conflicts.","completion":"Write conflicts occur in concurrent operations; MongoDB uses optimistic concurrency control."}
{"prompt":"Write a Cassandra query to select by token.","completion":"SELECT * FROM keyspace.table WHERE token(key) > token('value');"}
{"prompt":"What's a good painting style?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $slice operator.","completion":"db.collection.find({}, { array_field: { $slice: [0, 5] } });"}
{"prompt":"Explain SQL database sharding.","completion":"Sharding splits data across servers based on a shard key to improve scalability."}
{"prompt":"Write a Neo4j query to find all nodes in a subgraph.","completion":"MATCH (n)-[:RELATION*1..3]->(m) RETURN DISTINCT n, m;"}
{"prompt":"How to use Redis hsetnx?","completion":"HSETNX myhash field 'value';"}
{"prompt":"What's a good history documentary?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with JSON_OBJECT.","completion":"SELECT JSON_OBJECT('key', column) FROM table;"}
{"prompt":"Explain MongoDB data modeling.","completion":"MongoDB data modeling uses embedding for read-heavy loads and references for complex relationships."}
{"prompt":"Write a Cassandra query to select by IN and LIMIT.","completion":"SELECT * FROM keyspace.table WHERE key IN ('value1', 'value2') LIMIT 5;"}
{"prompt":"How to use SQL TIMESTAMPDIFF?","completion":"SELECT TIMESTAMPDIFF(DAY, date1, date2) FROM table;"}
{"prompt":"What's a good fitness routine?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $ne operator.","completion":"db.collection.find({ field: { $ne: 'value' } });"}
{"prompt":"Explain SQL database recovery.","completion":"Recovery restores a database to a consistent state using logs and backups after a failure."}
{"prompt":"Write a Neo4j query to find node by multiple properties.","completion":"MATCH (n:Node {prop1: 'value1', prop2: 'value2'}) RETURN n;"}
{"prompt":"How to use Redis spop?","completion":"SPOP myset;"}
{"prompt":"What's a good sci-fi book?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with subquery in JOIN.","completion":"SELECT * FROM table1 JOIN (SELECT id, column FROM table2) t2 ON table1.id = t2.id;"}
{"prompt":"Explain NoSQL database replication.","completion":"Replication copies data across nodes for fault tolerance and read scalability."}
{"prompt":"Write a Cassandra query to select with ORDER BY and LIMIT.","completion":"SELECT * FROM keyspace.table WHERE key = 'value' ORDER BY clustering_column DESC LIMIT 10;"}
{"prompt":"How to use SQL DATE_SUB?","completion":"SELECT DATE_SUB(date_column, INTERVAL 1 DAY) FROM table;"}
{"prompt":"What's a good art style?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $setOnInsert.","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $setOnInsert: { field: 'value' } }, { upsert: true });"}
{"prompt":"Explain SQL database views vs materialized views.","completion":"Views are virtual tables updated dynamically; materialized views store data physically, updated periodically."}
{"prompt":"Write a Neo4j query to find nodes with no relationships.","completion":"MATCH (n:Node) WHERE NOT (n)--() RETURN n;"}
{"prompt":"How to use Redis lrem?","completion":"LREM mylist 1 'value';"}
{"prompt":"Write a SQL query with subquery in HAVING.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > (SELECT AVG(cnt) FROM (SELECT COUNT(*) AS cnt FROM employees GROUP BY department) t);"}
{"prompt":"Explain MongoDB read preference.","completion":"Read preference controls which replica set members handle read queries. Example: db.collection.find().readPref('secondary');"}
{"prompt":"Write a Cassandra query to select with clustering key range.","completion":"SELECT * FROM keyspace.table WHERE partition_key = 'value' AND clustering_key >= 'a' AND clustering_key <= 'z';"}
{"prompt":"How to use SQL LOCATE?","completion":"SELECT LOCATE('substring', column) FROM table;"}
{"prompt":"Write a MongoDB query with $addToSet.","completion":"db.collection.updateOne({ _id: ObjectId('id') }, { $addToSet: { array_field: 'value' } });"}
{"prompt":"Explain SQL database triggers vs stored procedures.","completion":"Triggers run automatically on table events; stored procedures are explicitly called for reusable logic."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship type.","completion":"MATCH (n)-[:SPECIFIC_RELATION]->(m) RETURN n, m;"}
{"prompt":"How to use Redis zunionstore?","completion":"ZUNIONSTORE destset 2 set1 set2;"}
{"prompt":"What's a good music genre?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with COALESCE and CASE.","completion":"SELECT COALESCE(column, CASE WHEN column2 > 0 THEN 'positive' ELSE 'zero' END) FROM table;"}
{"prompt":"Explain NoSQL database sharding strategies.","completion":"Sharding strategies include range-based, hash-based, and directory-based sharding for load distribution."}
{"prompt":"Write a Cassandra query to select with secondary index and LIMIT.","completion":"SELECT * FROM keyspace.table WHERE indexed_column = 'value' LIMIT 5;"}
{"prompt":"How to use SQL ADDTIME?","completion":"SELECT ADDTIME(time_column, '01:00:00') FROM table;"}
{"prompt":"What's a good game to play?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $match and $sort.","completion":"db.collection.aggregate([{ $match: { field: 'value' } }, { $sort: { field: 1 } }]);"}
{"prompt":"Explain SQL database performance tuning.","completion":"Performance tuning involves indexing, query optimization, caching, and hardware upgrades."}
{"prompt":"Write a Neo4j query to find nodes by relationship property.","completion":"MATCH (n)-[r:RELATION {property: 'value'}]->(m) RETURN n, m;"}
{"prompt":"How to use Redis zrank?","completion":"ZRANK myset 'item';"}
{"prompt":"What's a good book on science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with JSON_CONTAINS.","completion":"SELECT * FROM table WHERE JSON_CONTAINS(json_column, '{\"key\": \"value\"}');"}
{"prompt":"Explain MongoDB backup strategies.","completion":"MongoDB backups use mongodump for logical backups or filesystem snapshots for physical backups."}
{"prompt":"Write a Cassandra query to select with IN and ORDER BY.","completion":"SELECT * FROM keyspace.table WHERE key IN ('value1', 'value2') ORDER BY clustering_column ASC;"}
{"prompt":"How to use SQL MAKEDATE?","completion":"SELECT MAKEDATE(2023, 100) FROM table;"}
{"prompt":"What's a good photography style?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $cond in aggregation.","completion":"db.collection.aggregate([{ $project: { field: { $cond: { if: { $eq: ['$field', 'value'] }, then: 1, else: 0 } } } }]);"}
{"prompt":"Explain SQL database high availability.","completion":"High availability uses replication, failover, and clustering to minimize downtime."}
{"prompt":"Write a Neo4j query to find nodes with specific degree.","completion":"MATCH (n:Node)-[r]-() WITH n, COUNT(r) AS degree WHERE degree = 3 RETURN n;"}
{"prompt":"How to use Redis sunion?","completion":"SUNION set1 set2;"}
{"prompt":"What's a good coding tutorial?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with subquery in CASE.","completion":"SELECT CASE WHEN (SELECT COUNT(*) FROM table2 WHERE id = table1.id) > 0 THEN 'exists' ELSE 'not exists' END FROM table1;"}
{"prompt":"Explain NoSQL database partitioning.","completion":"Partitioning splits data across nodes based on keys to improve scalability and performance."}
{"prompt":"Write a Cassandra query to select with timeuuid.","completion":"SELECT * FROM keyspace.table WHERE key = 'value' AND timeuuid_column = now();"}
{"prompt":"What's a good hiking gear?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $geoWithin.","completion":"db.collection.find({ location: { $geoWithin: { $box: [[0, 0], [100, 100]] } } });"}
{"prompt":"Explain SQL database load balancing.","completion":"Load balancing distributes queries across servers to optimize performance and availability."}
{"prompt":"How to use Redis zcard?","completion":"ZCARD myset;"}
{"prompt":"What's a good history podcast?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with JSON_EXTRACT_PATH.","completion":"SELECT JSON_EXTRACT_PATH(json_column, 'key1', 'key2') FROM table;"}
{"prompt":"Explain MongoDB index optimization.","completion":"Optimize indexes by targeting frequent queries, avoiding over-indexing, and using compound indexes."}
{"prompt":"Write a Cassandra query to select with DISTINCT and LIMIT.","completion":"SELECT DISTINCT column FROM keyspace.table LIMIT 10;"}
{"prompt":"How to use SQL DAYNAME?","completion":"SELECT DAYNAME(date_column) FROM table;"}
{"prompt":"What's a good sci-fi movie?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $arrayElemAt.","completion":"db.collection.aggregate([{ $project: { item: { $arrayElemAt: ['$array_field', 0] } } }]);"}
{"prompt":"Explain SQL database failover.","completion":"Failover switches to a standby server during failure to ensure availability."}
{"prompt":"How to use Redis sdiff?","completion":"SDIFF set1 set2;"}
{"prompt":"What's a good workout app?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with JSON_ARRAY_LENGTH.","completion":"SELECT JSON_ARRAY_LENGTH(json_column) FROM table;"}
{"prompt":"Explain MongoDB performance tuning.","completion":"Performance tuning involves indexing, query optimization, sharding, and caching."}
{"prompt":"Write a Cassandra query to select with clustering key and IN.","completion":"SELECT * FROM keyspace.table WHERE partition_key = 'value' AND clustering_key IN ('a', 'b');"}
{"prompt":"How to use SQL HOUR?","completion":"SELECT HOUR(time_column) FROM table;"}
{"prompt":"What's a good coding bootcamp?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $merge.","completion":"db.collection.aggregate([{ $match: { field: 'value' } }, { $merge: { into: 'output_collection' } }]);"}
{"prompt":"Explain SQL database encryption.","completion":"Encryption protects data at rest and in transit using algorithms like AES. Example: MySQL ENCRYPT() function."}
{"prompt":"Write a Neo4j query to find nodes by relationship count.","completion":"MATCH (n:Node) WITH n, SIZE(()-[:RELATION]->(n)) AS rel_count WHERE rel_count > 2 RETURN n;"}
{"prompt":"How to use Redis zrevrank?","completion":"ZREVRANK myset 'item';"}
{"prompt":"What's a good travel app?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with JSON_KEYS.","completion":"SELECT JSON_KEYS(json_column) FROM table;"}
{"prompt":"Explain NoSQL database caching.","completion":"Caching stores frequently accessed data in memory (e.g., Redis) to reduce database load."}
{"prompt":"Write a Cassandra query to select with range and LIMIT.","completion":"SELECT * FROM keyspace.table WHERE key = 'value' AND clustering_column >= 'a' LIMIT 5;"}
{"prompt":"How to use SQL MONTHNAME?","completion":"SELECT MONTHNAME(date_column) FROM table;"}
{"prompt":"What's a good history book?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $sample.","completion":"db.collection.aggregate([{ $sample: { size: 5 } }]);"}
{"prompt":"Explain SQL database auditing.","completion":"Auditing tracks database changes for compliance using logs or triggers."}
{"prompt":"Write a Neo4j query to find nodes with no incoming relationships.","completion":"MATCH (n:Node) WHERE NOT ()-[:RELATION]->(n) RETURN n;"}
{"prompt":"How to use Redis zrangebylex?","completion":"ZRANGEBYLEX myset [a [z;"}
{"prompt":"What's a good photography app?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with JSON_OBJECTAGG.","completion":"SELECT JSON_OBJECTAGG(key_column, value_column) FROM table;"}
{"prompt":"Explain MongoDB query optimization.","completion":"Query optimization uses indexes, projection, and avoiding unnecessary data scans."}
{"prompt":"Write a Cassandra query to select with time range and LIMIT.","completion":"SELECT * FROM keyspace.table WHERE time_column >= '2023-01-01' LIMIT 10;"}
{"prompt":"How to use SQL TIME_FORMAT?","completion":"SELECT TIME_FORMAT(time_column, '%H:%i:%s') FROM table;"}
{"prompt":"What's a good sci-fi game?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a MongoDB query with $redact.","completion":"db.collection.aggregate([{ $redact: { $cond: { if: { $eq: ['$field', 'value'] }, then: '$$KEEP', else: '$$PRUNE' } } }]);"}
{"prompt":"Explain SQL database indexing strategies.","completion":"Strategies include B-tree for general queries, bitmap for low-cardinality, and clustered for range queries."}
{"prompt":"Write a Neo4j query to find nodes by relationship direction.","completion":"MATCH (n)-[:RELATION]->(m) RETURN n, m;"}
{"prompt":"How to use Redis zscore?","completion":"ZSCORE myset 'item';"}
{"prompt":"How to create a table in PostgreSQL?","completion":"CREATE TABLE table_name (id SERIAL PRIMARY KEY, name VARCHAR(100), age INT);"}
{"prompt":"Explain SQL inner join.","completion":"An inner join returns rows with matching values in both tables. Example: SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Write a MongoDB query to find documents where price < 100.","completion":"db.collection.find({ price: { $lt: 100 } });"}
{"prompt":"What's the difference between SQL and NoSQL?","completion":"SQL databases are relational, using structured schemas and SQL for queries. NoSQL databases are non-relational, supporting flexible schemas and various data models like document, key-value, or graph."}
{"prompt":"How to set a key in Redis?","completion":"SET key value;"}
{"prompt":"What's a primary key in SQL?","completion":"A primary key uniquely identifies each record in a table, ensuring no duplicates and non-null values."}
{"prompt":"Write a SQL query to join two tables, orders and customers.","completion":"SELECT orders.id, customers.name FROM orders INNER JOIN customers ON orders.customer_id = customers.id;"}
{"prompt":"How to update documents in MongoDB?","completion":"db.collection.updateOne({ filter }, { $set: { field: new_value } });"}
{"prompt":"Explain indexing in databases.","completion":"Indexing creates a data structure to speed up query performance by allowing faster data retrieval, like a book index."}
{"prompt":"Write a Neo4j query to find all nodes connected by a relationship.","completion":"MATCH (n)-[r:RELATION]->(m) RETURN n, r, m;"}
{"prompt":"What's sharding in NoSQL?","completion":"Sharding distributes data across multiple servers to improve scalability and performance in NoSQL databases."}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, analyze execution plans, and limit result sets with WHERE or LIMIT."}
{"prompt":"What's a transaction in SQL?","completion":"A transaction ensures ACID properties (Atomicity, Consistency, Isolation, Durability). Example: BEGIN TRANSACTION; UPDATE table SET value = 10; COMMIT;"}
{"prompt":"Write a MongoDB query to sort results by age.","completion":"db.collection.find().sort({ age: 1 }); // 1 for ascending, -1 for descending"}
{"prompt":"SQL query for grouping data.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department;"}
{"prompt":"Explain CAP theorem for NoSQL.","completion":"CAP theorem states a distributed system can only guarantee two of: Consistency, Availability, Partition tolerance."}
{"prompt":"Write a Redis command to add to a sorted set.","completion":"ZADD my_set score member;"}
{"prompt":"SQL subquery to find employees with above-average salary.","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"}
{"prompt":"What's a foreign key in SQL?","completion":"A foreign key links two tables by referencing the primary key of another table, enforcing referential integrity."}
{"prompt":"Write a Neo4j query to find the shortest path.","completion":"MATCH p = shortestPath((start:Node)-[*]-(end:Node)) RETURN p;"}
{"prompt":"SQL query to update multiple rows.","completion":"UPDATE employees SET salary = salary + 5000 WHERE department = 'IT';"}
{"prompt":"MongoDB query for text search.","completion":"db.collection.find({ $text: { $search: 'keyword' } });"}
{"prompt":"Explain normalization in SQL.","completion":"Normalization reduces data redundancy by organizing tables into normal forms (1NF, 2NF, 3NF) to ensure data integrity."}
{"prompt":"Redis command for list operations.","completion":"LPUSH my_list value; RPOP my_list;"}
{"prompt":"SQL query with LEFT JOIN.","completion":"SELECT * FROM table1 LEFT JOIN table2 ON table1.id = table2.id;"}
{"prompt":"What's a document store in NoSQL?","completion":"A document store (e.g., MongoDB) stores data as JSON-like documents with flexible schemas."}
{"prompt":"How to expire a key in Redis?","completion":"SET key value EX 60; // Expires in 60 seconds"}
{"prompt":"SQL window function example.","completion":"SELECT name, salary, RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"Cassandra query to create a table.","completion":"CREATE TABLE keyspace.table (id UUID PRIMARY KEY, name TEXT);"}
{"prompt":"SQL query with HAVING clause.","completion":"SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;"}
{"prompt":"Explain ACID vs BASE.","completion":"ACID ensures strong consistency for SQL databases; BASE prioritizes availability and partition tolerance in NoSQL."}
{"prompt":"Neo4j query to merge nodes.","completion":"MERGE (n:Node {id: 'value'}) ON CREATE SET n.property = 'new_value';"}
{"prompt":"How does AI work?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query for date functions.","completion":"SELECT CURRENT_DATE; SELECT DATE_ADD(date_column, INTERVAL 1 DAY) FROM table;"}
{"prompt":"Redis pub/sub example.","completion":"PUBLISH channel message; SUBSCRIBE channel;"}
{"prompt":"SQL query to pivot data.","completion":"SELECT * FROM (SELECT column FROM table) PIVOT (COUNT(column) FOR column IN (value1, value2));"}
{"prompt":"SQL query to drop a table.","completion":"DROP TABLE table_name;"}
{"prompt":"SQL query with LIKE operator.","completion":"SELECT * FROM table WHERE column LIKE '%pattern%';"}
{"prompt":"Redis transaction example.","completion":"MULTI; SET key1 value1; SET key2 value2; EXEC;"}
{"prompt":"Cassandra batch statement.","completion":"BEGIN BATCH INSERT INTO table (id, value) VALUES (1, 'data'); UPDATE table SET value = 'new' WHERE id = 1; APPLY BATCH;"}
{"prompt":"MongoDB change stream example.","completion":"const changeStream = db.collection.watch(); for await (const change of changeStream) { console.log(change); }"}
{"prompt":"SQL query for UNION.","completion":"SELECT column FROM table1 UNION SELECT column FROM table2;"}
{"prompt":"Explain NoSQL scalability.","completion":"NoSQL databases often scale horizontally by adding servers, using sharding or replication, unlike SQL's vertical scaling."}
{"prompt":"Redis hash set command.","completion":"HMSET my_hash field1 value1 field2 value2;"}
{"prompt":"SQL query for FULL OUTER JOIN.","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"MongoDB projection example.","completion":"db.collection.find({}, { field1: 1, _id: 0 }); // Include field1, exclude _id"}
{"prompt":"PostgreSQL trigger example.","completion":"CREATE TRIGGER my_trigger BEFORE INSERT ON table FOR EACH ROW EXECUTE FUNCTION my_function();"}
{"prompt":"SQL query to create a view.","completion":"CREATE VIEW my_view AS SELECT * FROM table WHERE condition;"}
{"prompt":"MongoDB query with $exists.","completion":"db.collection.find({ field: { $exists: true } });"}
{"prompt":"Redis command for increment.","completion":"INCR counter;"}
{"prompt":"SQL query with EXISTS.","completion":"SELECT * FROM table1 WHERE EXISTS (SELECT 1 FROM table2 WHERE table2.id = table1.id);"}
{"prompt":"Neo4j query to delete relationships.","completion":"MATCH (n)-[r:RELATION]->(m) DELETE r;"}
{"prompt":"SQL query for self-join.","completion":"SELECT a.name, b.name FROM employees a JOIN employees b ON a.manager_id = b.id;"}
{"prompt":"MongoDB query with $in.","completion":"db.collection.find({ field: { $in: ['value1', 'value2'] } });"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data to optimize read performance, common in NoSQL for faster queries."}
{"prompt":"SQL query for aggregate functions.","completion":"SELECT department, SUM(salary) AS total_salary FROM employees GROUP BY department;"}
{"prompt":"MongoDB query with $all.","completion":"db.collection.find({ array_field: { $all: ['value1', 'value2'] } });"}
{"prompt":"Redis command for set operations.","completion":"SADD myset member1 member2; SUNION set1 set2;"}
{"prompt":"SQL query with COALESCE.","completion":"SELECT COALESCE(NULL, column1, 'default') FROM table;"}
{"prompt":"Cassandra query for time-series data.","completion":"CREATE TABLE events (id UUID, time TIMESTAMP, data TEXT, PRIMARY KEY (id, time)) WITH CLUSTERING ORDER BY (time DESC);"}
{"prompt":"SQL query for cross join.","completion":"SELECT * FROM table1 CROSS JOIN table2;"}
{"prompt":"MongoDB query with $regex.","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"Neo4j query to count relationships.","completion":"MATCH (n)-[r:RELATION]->() RETURN n, COUNT(r) AS rel_count;"}
{"prompt":"SQL query for DISTINCT.","completion":"SELECT DISTINCT column FROM table;"}
{"prompt":"MongoDB query with $elemMatch.","completion":"db.collection.find({ array_field: { $elemMatch: { key: 'value' } } });"}
{"prompt":"Redis command for expire at.","completion":"SET key value; EXPIREAT key timestamp;"}
{"prompt":"SQL query with BETWEEN.","completion":"SELECT * FROM employees WHERE salary BETWEEN 40000 AND 60000;"}
{"prompt":"MongoDB query with $group.","completion":"db.collection.aggregate([{ $group: { _id: '$field', count: { $sum: 1 } } }]);"}
{"prompt":"SQL query for TRUNCATE.","completion":"TRUNCATE TABLE table_name;"}
{"prompt":"Cassandra materialized view.","completion":"CREATE MATERIALIZED VIEW view_name AS SELECT * FROM table WHERE column IS NOT NULL PRIMARY KEY (column, id);"}
{"prompt":"SQL query for NULL handling.","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"MongoDB query with $unwind.","completion":"db.collection.aggregate([{ $unwind: '$array_field' }]);"}
{"prompt":"Redis command for scan.","completion":"SCAN 0 MATCH pattern COUNT 10;"}
{"prompt":"SQL query with LIMIT.","completion":"SELECT * FROM table LIMIT 10;"}
{"prompt":"Neo4j query to create relationships.","completion":"MATCH (a:Node {id: '1'}), (b:Node {id: '2'}) CREATE (a)-[:RELATION]->(b);"}
{"prompt":"SQL query for partitioning.","completion":"CREATE TABLE table_name (id INT, data VARCHAR(50)) PARTITION BY RANGE (id);"}
{"prompt":"MongoDB query with $push.","completion":"db.collection.updateOne({ filter }, { $push: { array_field: 'new_value' } });"}
{"prompt":"Cassandra query for TTL.","completion":"INSERT INTO table (id, value) VALUES (1, 'data') USING TTL 3600;"}
{"prompt":"Explain the difference between SQL and NoSQL databases.","completion":"SQL databases are relational, using structured schemas and SQL for querying, while NoSQL databases are non-relational, supporting unstructured data and flexible schemas like document, key-value, or graph models."}
{"prompt":"Write a SQL query to join two tables, employees and departments.","completion":"SELECT e.name, d.dept_name FROM employees e INNER JOIN departments d ON e.dept_id = d.id;"}
{"prompt":"Explain indexing in databases.","completion":"Indexing creates a data structure to speed up query performance by allowing faster data retrieval, like an index in a book."}
{"prompt":"Write a Neo4j query to find all nodes with a specific label.","completion":"MATCH (n:Label) RETURN n;"}
{"prompt":"What's a graph database used for?","completion":"Graph databases like Neo4j are used for complex relationships, such as social networks, recommendation systems, or fraud detection."}
{"prompt":"Write a SQL query using GROUP BY.","completion":"SELECT dept_id, COUNT(*) FROM employees GROUP BY dept_id;"}
{"prompt":"Explain ACID properties in SQL.","completion":"ACID ensures reliable transactions: Atomicity (all or nothing), Consistency (valid state), Isolation (independent transactions), Durability (persisted changes)."}
{"prompt":"Explain normalization in SQL.","completion":"Normalization reduces data redundancy by organizing tables into normal forms (1NF, 2NF, 3NF), ensuring data integrity."}
{"prompt":"Write a SQL query with HAVING clause.","completion":"SELECT dept_id, COUNT(*) FROM employees GROUP BY dept_id HAVING COUNT(*) > 5;"}
{"prompt":"How to perform a bulk insert in MongoDB?","completion":"db.collection.insertMany([{ name: 'Alice' }, { name: 'Bob' }]);"}
{"prompt":"Write a SQL query for a LEFT JOIN.","completion":"SELECT e.name, d.dept_name FROM employees e LEFT JOIN departments d ON e.dept_id = d.id;"}
{"prompt":"Explain sharding in NoSQL.","completion":"Sharding distributes data across multiple servers to improve scalability and performance in NoSQL databases."}
{"prompt":"How to set an expiration in Redis?","completion":"SET key value EX 3600; // Expires in 3600 seconds"}
{"prompt":"Write a PostgreSQL query using JSONB.","completion":"SELECT * FROM table WHERE jsonb_column @> '{\"key\": \"value\"}';"}
{"prompt":"Explain CAP theorem.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, and Partition Tolerance at once."}
{"prompt":"Write a Cassandra batch statement.","completion":"BEGIN BATCH INSERT INTO table (id, name) VALUES (1, 'Alice'); UPDATE table SET name = 'Bob' WHERE id = 2; APPLY BATCH;"}
{"prompt":"How to use Redis sorted sets?","completion":"ZADD key 1 'item1' 2 'item2';"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data in NoSQL to optimize read performance, reducing the need for joins or lookups."}
{"prompt":"Write a Neo4j query for shortest path.","completion":"MATCH p = shortestPath((start:Node)-[*]-(end:Node)) RETURN p;"}
{"prompt":"Write a Redis transaction.","completion":"MULTI; SET key1 value1; SET key2 value2; EXEC;"}
{"prompt":"Write a SQL query with LIKE operator.","completion":"SELECT * FROM employees WHERE name LIKE '%Smith%';"}
{"prompt":"Explain transactions in NoSQL.","completion":"Many NoSQL databases sacrifice strict transactions for scalability, but some (e.g., MongoDB) support multi-document transactions."}
{"prompt":"Write a PostgreSQL trigger.","completion":"CREATE TRIGGER trigger_name BEFORE INSERT ON table FOR EACH ROW EXECUTE FUNCTION trigger_function();"}
{"prompt":"Write a SQL query for date functions.","completion":"SELECT CURRENT_DATE, DATE_ADD(CURRENT_DATE, INTERVAL 1 DAY);"}
{"prompt":"How to use Redis pipelines?","completion":"client.pipeline().set('key1', 'value1').set('key2', 'value2').execute();"}
{"prompt":"Explain SQL constraints.","completion":"Constraints enforce data integrity: PRIMARY KEY, FOREIGN KEY, UNIQUE, NOT NULL, CHECK."}
{"prompt":"Write a Neo4j MERGE query.","completion":"MERGE (n:Person {id: '123'}) ON CREATE SET n.name = 'Alice';"}
{"prompt":"Write a SQL query for FULL OUTER JOIN.","completion":"SELECT e.name, d.dept_name FROM employees e FULL OUTER JOIN departments d ON e.dept_id = d.id;"}
{"prompt":"How to handle change streams in MongoDB?","completion":"const changeStream = db.collection.watch(); for await (const change of changeStream) { console.log(change); }"}
{"prompt":"Explain NoSQL data modeling.","completion":"NoSQL data modeling prioritizes query patterns, often denormalizing data or embedding documents for performance."}
{"prompt":"Write a SQL query with window functions.","completion":"SELECT name, salary, RANK() OVER (PARTITION BY dept_id ORDER BY salary DESC) FROM employees;"}
{"prompt":"How to use Redis hashes?","completion":"HMSET user:123 name 'Alice' age 30;"}
{"prompt":"Write a MongoDB query with $group.","completion":"db.collection.aggregate([{ $group: { _id: '$dept', total: { $sum: 1 } } }]);"}
{"prompt":"Explain SQL views vs materialized views.","completion":"Views are virtual tables based on a query; materialized views store query results physically for better performance."}
{"prompt":"Write a Cassandra query for time-series data.","completion":"INSERT INTO keyspace.timeseries (sensor_id, time, value) VALUES (1, '2023-01-01', 42);"}
{"prompt":"How to query full-text search in PostgreSQL?","completion":"SELECT * FROM table WHERE to_tsvector(column) @@ to_tsquery('keyword');"}
{"prompt":"Explain Redis persistence.","completion":"Redis supports RDB snapshots and AOF logs for data persistence to disk."}
{"prompt":"Write a SQL query with PIVOT.","completion":"SELECT * FROM (SELECT dept_id, month, sales FROM sales_data) PIVOT (SUM(sales) FOR month IN ('Jan', 'Feb'));"}
{"prompt":"Write a Redis list operation.","completion":"LPUSH mylist 'item1'; RPOP mylist;"}
{"prompt":"How to design a schema for MongoDB?","completion":"Embed related data for frequent reads, reference for large or frequently updated data."}
{"prompt":"Write a SQL query with EXISTS.","completion":"SELECT * FROM employees e WHERE EXISTS (SELECT 1 FROM departments d WHERE d.id = e.dept_id);"}
{"prompt":"Explain clustering keys in Cassandra.","completion":"Clustering keys determine the order of data within a partition, optimizing range queries."}
{"prompt":"Write a Neo4j query for node deletion.","completion":"MATCH (n:Node {id: '123'}) DETACH DELETE n;"}
{"prompt":"Write a SQL query for self-join.","completion":"SELECT e1.name, e2.name FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id;"}
{"prompt":"Explain MongoDB sharding keys.","completion":"Sharding keys determine how data is distributed across shards; choose based on query patterns."}
{"prompt":"Write a SQL query with LIMIT.","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 10;"}
{"prompt":"Write a MongoDB query with $project.","completion":"db.collection.find({}, { name: 1, _id: 0 });"}
{"prompt":"How to create a materialized view in PostgreSQL?","completion":"CREATE MATERIALIZED VIEW mat_view AS SELECT * FROM table WHERE condition WITH DATA;"}
{"prompt":"Explain Redis streams.","completion":"Redis streams store time-series data with XADD for appending and XREAD for reading."}
{"prompt":"How to handle transactions in MongoDB?","completion":"db.getMongo().startSession().startTransaction(); // operations; session.commitTransaction();"}
{"prompt":"How to use Redis GEO commands?","completion":"GEOADD key longitude latitude member; GEORADIUS key lon lat radius m;"}
{"prompt":"Explain SQL triggers.","completion":"Triggers are procedures that execute automatically in response to table events like INSERT or UPDATE."}
{"prompt":"Write a Neo4j query for pattern matching.","completion":"MATCH (n:Person)-[:FRIEND]->(m:Person) RETURN n, m;"}
{"prompt":"Explain partition keys in Cassandra.","completion":"Partition keys determine data distribution across nodes in Cassandra, ensuring even load."}
{"prompt":"Write a PostgreSQL query for array operations.","completion":"SELECT * FROM table WHERE column @> ARRAY['value1', 'value2'];"}
{"prompt":"How to use Redis HyperLogLog?","completion":"PFADD key element1 element2; PFCOUNT key;"}
{"prompt":"Explain NoSQL consistency models.","completion":"NoSQL offers eventual consistency (high availability) or strong consistency (like SQL) based on CAP trade-offs."}
{"prompt":"Write a Neo4j query for all paths.","completion":"MATCH p = (n:Node)-[*1..3]->(m:Node) RETURN p;"}
{"prompt":"How to use SQL cursors?","completion":"DECLARE cursor_name CURSOR FOR SELECT * FROM table; FETCH NEXT FROM cursor_name;"}
{"prompt":"Explain Redis cluster.","completion":"Redis Cluster shards data across nodes with automatic failover and scalability."}
{"prompt":"Write a Cassandra query with TTL.","completion":"INSERT INTO keyspace.table (id, name) VALUES (1, 'Alice') USING TTL 86400;"}
{"prompt":"Write a SQL query for aggregate functions.","completion":"SELECT AVG(salary), MAX(salary) FROM employees;"}
{"prompt":"Write a PostgreSQL query with LATERAL.","completion":"SELECT e.name, d.dept_name FROM employees e, LATERAL (SELECT * FROM departments WHERE id = e.dept_id) d;"}
{"prompt":"Explain NoSQL document stores.","completion":"Document stores like MongoDB store data as JSON/BSON documents, offering flexible schemas."}
{"prompt":"Write a Neo4j query for node properties.","completion":"MATCH (n:Node) SET n.property = 'value' RETURN n;"}
{"prompt":"Write a SQL query with IN clause.","completion":"SELECT * FROM employees WHERE dept_id IN (1, 2, 3);"}
{"prompt":"How to use Redis sets?","completion":"SADD key member1 member2; SMEMBERS key;"}
{"prompt":"Write a MongoDB query with $regex.","completion":"db.collection.find({ name: { $regex: '^A', $options: 'i' } });"}
{"prompt":"Write a Cassandra query for counter columns.","completion":"UPDATE keyspace.table SET counter = counter + 1 WHERE id = 1;"}
{"prompt":"Write a SQL query with NULL handling.","completion":"SELECT * FROM employees WHERE manager_id IS NULL;"}
{"prompt":"How to use Redis transactions with WATCH?","completion":"WATCH key; MULTI; SET key value; EXEC;"}
{"prompt":"Explain SQL window functions.","completion":"Window functions perform calculations across rows related to the current row, e.g., ROW_NUMBER() OVER (PARTITION BY column)."}
{"prompt":"Write a Neo4j query for relationship properties.","completion":"MATCH (n)-[r:REL]->(m) SET r.weight = 1 RETURN r;"}
{"prompt":"Write a SQL query with multiple joins.","completion":"SELECT e.name, d.dept_name, r.role_name FROM employees e JOIN departments d ON e.dept_id = d.id JOIN roles r ON e.role_id = r.id;"}
{"prompt":"Explain Cassandra tombstones.","completion":"Tombstones mark deleted data in Cassandra, impacting performance if not managed."}
{"prompt":"Write a PostgreSQL query with regexp_match.","completion":"SELECT regexp_match(column, 'pattern') FROM table;"}
{"prompt":"Write a SQL query for top-N results.","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"}
{"prompt":"How to use Redis bitfields?","completion":"BITFIELD key SET u8 0 100; BITFIELD key GET u8 0;"}
{"prompt":"Write a Neo4j query for node count.","completion":"MATCH (n) RETURN COUNT(n);"}
{"prompt":"Write a SQL query with date formatting.","completion":"SELECT DATE_FORMAT(created_at, '%Y-%m-%d') FROM table;"}
{"prompt":"Write a MongoDB query with $in.","completion":"db.collection.find({ field: { $in: ['value1', 'value2'] } });"}
{"prompt":"How to use SQL stored procedures?","completion":"CREATE PROCEDURE proc_name AS BEGIN SELECT * FROM table; END; CALL proc_name();"}
{"prompt":"Explain Redis data types.","completion":"Redis supports strings, lists, sets, sorted sets, hashes, streams, and more."}
{"prompt":"Write a Cassandra query with lightweight transactions.","completion":"INSERT INTO keyspace.table (id, value) VALUES (1, 'value') IF NOT EXISTS;"}
{"prompt":"Write a SQL query with TRUNCATE.","completion":"TRUNCATE TABLE table_name;"}
{"prompt":"Explain SQL execution plans.","completion":"Execution plans show how a database executes a query, detailing steps like scans or joins."}
{"prompt":"Write a Neo4j query for relationship deletion.","completion":"MATCH (n)-[r:REL]->(m) DELETE r;"}
{"prompt":"How to use Redis pub/sub with patterns?","completion":"PSUBSCRIBE 'channel*';"}
{"prompt":"Write a SQL query with OVER clause.","completion":"SELECT name, salary, SUM(salary) OVER (PARTITION BY dept_id) FROM employees;"}
{"prompt":"How to use MongoDB $out for aggregation?","completion":"db.collection.aggregate([{ $match: { condition } }, { $out: 'new_collection' }]);"}
{"prompt":"Explain Cassandra materialized views.","completion":"Materialized views in Cassandra are tables auto-populated from a base table for specific queries."}
{"prompt":"Write a PostgreSQL query with ILIKE.","completion":"SELECT * FROM table WHERE column ILIKE '%pattern%';"}
{"prompt":"Write a SQL query for row locking.","completion":"SELECT * FROM table WHERE id = 1 FOR UPDATE;"}
{"prompt":"How to use Redis Lua scripts?","completion":"EVAL 'return redis.call(\"SET\", KEYS[1], ARGV[1])' 1 key value;"}
{"prompt":"Explain MongoDB write concern.","completion":"Write concern defines acknowledgment levels for write operations, e.g., { w: 'majority' }."}
{"prompt":"Write a Neo4j query for node uniqueness.","completion":"CREATE CONSTRAINT ON (n:Person) ASSERT n.id IS UNIQUE;"}
{"prompt":"Write a SQL query with CURRENT_TIMESTAMP.","completion":"SELECT CURRENT_TIMESTAMP;"}
{"prompt":"Write a MongoDB query with $all.","completion":"db.collection.find({ tags: { $all: ['tag1', 'tag2'] } });"}
{"prompt":"How to use SQL functions?","completion":"CREATE FUNCTION func_name() RETURNS INT AS $$ SELECT COUNT(*) FROM table; $$ LANGUAGE SQL;"}
{"prompt":"Explain Redis eviction policies.","completion":"Redis supports policies like LRU, LFU, and noeviction for memory management."}
{"prompt":"Write a Cassandra query for range queries.","completion":"SELECT * FROM keyspace.table WHERE partition_key = 'value' AND clustering_key > 100;"}
{"prompt":"What's a neural network?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with subselect.","completion":"SELECT (SELECT COUNT(*) FROM orders WHERE emp_id = e.id) AS order_count FROM employees e;"}
{"prompt":"How to use MongoDB $merge?","completion":"db.collection.aggregate([{ $match: { condition } }, { $merge: { into: 'target_collection' } }]);"}
{"prompt":"Explain SQL temporary tables.","completion":"Temporary tables exist for a session or transaction: CREATE TEMP TABLE temp_table (id INT);"}
{"prompt":"Write a Neo4j query for weighted paths.","completion":"MATCH p = (start)-[:REL* {weight: 1}]->(end) RETURN p;"}
{"prompt":"How to use Redis scan?","completion":"SCAN 0 MATCH 'key*' COUNT 100;"}
{"prompt":"Write a SQL query with PARTITION BY.","completion":"SELECT name, dept_id, ROW_NUMBER() OVER (PARTITION BY dept_id ORDER BY salary) FROM employees;"}
{"prompt":"Explain Cassandra data types.","completion":"Cassandra supports types like int, text, uuid, timestamp, and collections (list, set, map)."}
{"prompt":"Write a PostgreSQL query with generate_series.","completion":"SELECT generate_series(1, 10) AS numbers;"}
{"prompt":"Write a SQL query with ROLLUP.","completion":"SELECT dept_id, SUM(salary) FROM employees GROUP BY ROLLUP(dept_id);"}
{"prompt":"How to use MongoDB $slice?","completion":"db.collection.find({}, { array_field: { $slice: [2, 3] } });"}
{"prompt":"Explain Redis replication.","completion":"Redis replication copies data from a master to replicas for redundancy and read scaling."}
{"prompt":"Write a Cassandra query with IN clause.","completion":"SELECT * FROM keyspace.table WHERE id IN (1, 2, 3);"}
{"prompt":"Write a SQL query with CHECK constraint.","completion":"CREATE TABLE employees (id INT, age INT CHECK (age >= 18));"}
{"prompt":"How to use MongoDB $size?","completion":"db.collection.find({ array_field: { $size: 3 } });"}
{"prompt":"Explain SQL query optimization.","completion":"Optimize queries with indexes, proper joins, avoiding subqueries, and analyzing EXPLAIN plans."}
{"prompt":"Write a Neo4j query for node aggregation.","completion":"MATCH (n:Person) RETURN n.age, COUNT(n);"}
{"prompt":"How to use Redis incr?","completion":"INCR key;"}
{"prompt":"Write a SQL query with ON DELETE CASCADE.","completion":"CREATE TABLE orders (id INT, emp_id INT, FOREIGN KEY (emp_id) REFERENCES employees(id) ON DELETE CASCADE);"}
{"prompt":"How to use MongoDB $inc?","completion":"db.collection.updateOne({ _id: '123' }, { $inc: { count: 1 } });"}
{"prompt":"Explain Cassandra replication factor.","completion":"Replication factor determines how many nodes store a copy of data for fault tolerance."}
{"prompt":"Write a PostgreSQL query with hstore.","completion":"SELECT * FROM table WHERE hstore_column -> 'key' = 'value';"}
{"prompt":"Write a SQL query with GROUP_CONCAT.","completion":"SELECT dept_id, GROUP_CONCAT(name) FROM employees GROUP BY dept_id;"}
{"prompt":"How to use MongoDB $cond?","completion":"db.collection.aggregate([{ $project: { result: { $cond: { if: { $gt: ['$age', 30] }, then: 'senior', else: 'junior' } } } }]);"}
{"prompt":"Explain SQL table partitioning.","completion":"Table partitioning divides large tables into smaller parts for better performance and management."}
{"prompt":"Write a Neo4j query for node filtering.","completion":"MATCH (n:Person) WHERE n.age > 30 RETURN n;"}
{"prompt":"How to use Redis expireat?","completion":"EXPIREAT key 1677654321;"}
{"prompt":"How to use MongoDB $elemMatch?","completion":"db.collection.find({ array_field: { $elemMatch: { subfield: 'value' } } });"}
{"prompt":"Explain Cassandra nodetool.","completion":"Nodetool is a command-line tool for managing and monitoring Cassandra clusters."}
{"prompt":"Write a PostgreSQL query with window aggregates.","completion":"SELECT name, salary, SUM(salary) OVER (PARTITION BY dept_id) AS dept_total FROM employees;"}
{"prompt":"Write a SQL query with MERGE.","completion":"MERGE INTO target_table USING source_table ON target_table.id = source_table.id WHEN MATCHED THEN UPDATE SET column = value WHEN NOT MATCHED THEN INSERT VALUES (value);"}
{"prompt":"Explain Redis sentinel.","completion":"Redis Sentinel monitors master and replica instances, handling failover if the master fails."}
{"prompt":"Write a Cassandra query for secondary indexing.","completion":"CREATE INDEX ON keyspace.table (column); SELECT * FROM table WHERE column = 'value';"}
{"prompt":"Write a SQL query with FIRST_VALUE.","completion":"SELECT name, salary, FIRST_VALUE(name) OVER (PARTITION BY dept_id ORDER BY salary) FROM employees;"}
{"prompt":"Explain SQL deadlock.","completion":"A deadlock occurs when two transactions block each other, waiting for resources held by the other."}
{"prompt":"Write a Neo4j query for community detection.","completion":"CALL gds.louvain.stream('graphName') YIELD nodeId, communityId;"}
{"prompt":"How to use Redis zrange?","completion":"ZRANGE key 0 -1 WITHSCORES;"}
{"prompt":"Write a SQL query with NTILE.","completion":"SELECT name, salary, NTILE(4) OVER (ORDER BY salary) AS quartile FROM employees;"}
{"prompt":"How to use MongoDB $arrayElemAt?","completion":"db.collection.aggregate([{ $project: { item: { $arrayElemAt: ['$array_field', 0] } } }]);"}
{"prompt":"Explain Cassandra repair.","completion":"Cassandra repair synchronizes data across nodes to ensure consistency."}
{"prompt":"Write a PostgreSQL query with JSON_ARRAY_ELEMENTS.","completion":"SELECT json_array_elements(jsonb_column) FROM table;"}
{"prompt":"Write a SQL query with CHECKSUM.","completion":"SELECT CHECKSUM(id) FROM table;"}
{"prompt":"How to use MongoDB $bucket?","completion":"db.collection.aggregate([{ $bucket: { groupBy: '$age', boundaries: [20, 30, 40, 50], default: 'Other' } }]);"}
{"prompt":"Explain SQL query caching.","completion":"Query caching stores query results to speed up repeated executions."}
{"prompt":"Write a Neo4j query for centrality.","completion":"CALL gds.degree.stream('graphName') YIELD nodeId, score;"}
{"prompt":"How to use Redis mset?","completion":"MSET key1 value1 key2 value2;"}
{"prompt":"How to use MongoDB $geoIntersects?","completion":"db.collection.find({ location: { $geoIntersects: { $geometry: { type: 'Polygon', coordinates: [[[x1, y1], ...]] } } } });"}
{"prompt":"Explain Cassandra lightweight transactions.","completion":"Lightweight transactions use Paxos for conditional updates, ensuring consistency."}
{"prompt":"Write a PostgreSQL query with table inheritance.","completion":"CREATE TABLE parent (id INT); CREATE TABLE child () INHERITS (parent);"}
{"prompt":"Write a SQL query with INTERSECT.","completion":"SELECT id FROM table1 INTERSECT SELECT id FROM table2;"}
{"prompt":"How to use MongoDB $sample?","completion":"db.collection.aggregate([{ $sample: { size: 10 } }]);"}
{"prompt":"Explain Redis memory optimization.","completion":"Redis optimizes memory with data structures like ziplists and intsets for small datasets."}
{"prompt":"Write a Cassandra query with collections.","completion":"INSERT INTO keyspace.table (id, tags) VALUES (1, {'tag1', 'tag2'});"}
{"prompt":"Write a SQL query with EXCEPT.","completion":"SELECT id FROM table1 EXCEPT SELECT id FROM table2;"}
{"prompt":"How to use MongoDB $setIntersection?","completion":"db.collection.aggregate([{ $project: { common: { $setIntersection: ['$array1', '$array2'] } } }]);"}
{"prompt":"Explain SQL sequence.","completion":"Sequences generate unique numeric values: CREATE SEQUENCE seq_name; SELECT nextval('seq_name');"}
{"prompt":"Write a Neo4j query for subgraph.","completion":"MATCH (n:Node)-[r:REL*1..2]->(m) RETURN n, r, m;"}
{"prompt":"How to use Redis hgetall?","completion":"HGETALL key;"}
{"prompt":"Write a SQL query with CUBE.","completion":"SELECT dept_id, region, SUM(salary) FROM employees GROUP BY CUBE(dept_id, region);"}
{"prompt":"Explain Cassandra anti-patterns.","completion":"Avoid frequent deletes, large partitions, or heavy secondary indexes."}
{"prompt":"Write a PostgreSQL query with crosstab.","completion":"SELECT * FROM crosstab('SELECT row, col, value FROM table') AS ct(row_name TYPE, col1 TYPE);"}
{"prompt":"Write a SQL query with DENSE_RANK.","completion":"SELECT name, salary, DENSE_RANK() OVER (PARTITION BY dept_id ORDER BY salary) FROM employees;"}
{"prompt":"How to use MongoDB $facet?","completion":"db.collection.aggregate([{ $facet: { cat1: [{ $match: { condition } }], cat2: [{ $match: { condition2 } }] } }]);"}
{"prompt":"Explain Redis pub/sub limitations.","completion":"Redis pub/sub is fire-and-forget, lacking persistence or guaranteed delivery."}
{"prompt":"Write a Cassandra query with map collection.","completion":"INSERT INTO keyspace.table (id, metadata) VALUES (1, { 'key1': 'value1', 'key2': 'value2' });"}
{"prompt":"Write a SQL query with JSON_OBJECT.","completion":"SELECT JSON_OBJECT('id', id, 'name', name) FROM employees;"}
{"prompt":"How to use MongoDB $addFields?","completion":"db.collection.aggregate([{ $addFields: { newField: { $sum: ['$field1', '$field2'] } } }]);"}
{"prompt":"Explain SQL b-tree indexes.","completion":"B-tree indexes balance search trees for efficient range queries and lookups."}
{"prompt":"Write a Neo4j query for page rank.","completion":"CALL gds.pageRank.stream('graphName') YIELD nodeId, score;"}
{"prompt":"How to use Redis zrem?","completion":"ZREM key member;"}
{"prompt":"Write a SQL query with JSON_ARRAY.","completion":"SELECT JSON_ARRAY(name, salary) FROM employees;"}
{"prompt":"How to use MongoDB $replaceRoot?","completion":"db.collection.aggregate([{ $replaceRoot: { newRoot: '$embedded_doc' } }]);"}
{"prompt":"Explain Cassandra compaction.","completion":"Compaction merges SSTables to optimize storage and read performance."}
{"prompt":"Write a PostgreSQL query with ts_rank.","completion":"SELECT column, ts_rank(to_tsvector(column), to_tsquery('keyword')) FROM table;"}
{"prompt":"Write a SQL query with TRIGGER AFTER UPDATE.","completion":"CREATE TRIGGER trig_name AFTER UPDATE ON table FOR EACH ROW EXECUTE FUNCTION func_name();"}
{"prompt":"Explain Redis LRU eviction.","completion":"LRU eviction removes least recently used keys when memory is full."}
{"prompt":"Write a Cassandra query with frozen collections.","completion":"CREATE TABLE keyspace.table (id INT, data frozen<map<text, text>>, PRIMARY KEY(id));"}
{"prompt":"What's physics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with JSONB_SET.","completion":"UPDATE table SET jsonb_column = jsonb_set(jsonb_column, '{key}', '\"value\"');"}
{"prompt":"How to use MongoDB $graphLookup?","completion":"db.collection.aggregate([{ $graphLookup: { from: 'collection', startWith: '$field', connectFromField: 'from', connectToField: 'to', as: 'result' } }]);"}
{"prompt":"Explain SQL hash indexes.","completion":"Hash indexes are used for equality queries but not for range queries."}
{"prompt":"Write a Neo4j query for triangle counting.","completion":"CALL gds.triangleCount.stream('graphName') YIELD nodeId, triangleCount;"}
{"prompt":"How to use Redis zrangebyscore?","completion":"ZRANGEBYSCORE key 0 100;"}
{"prompt":"Write a SQL query with PERCENT_RANK.","completion":"SELECT name, salary, PERCENT_RANK() OVER (PARTITION BY dept_id ORDER BY salary) FROM employees;"}
{"prompt":"How to use MongoDB $setDifference?","completion":"db.collection.aggregate([{ $project: { diff: { $setDifference: ['$array1', '$array2'] } } }]);"}
{"prompt":"Explain Cassandra read repair.","completion":"Read repair fixes inconsistencies during reads by updating stale replicas."}
{"prompt":"Write a PostgreSQL query with table partitioning.","completion":"CREATE TABLE parent (id INT, date DATE) PARTITION BY RANGE (date);"}
{"prompt":"Write a SQL query with SAVEPOINT.","completion":"SAVEPOINT savepoint_name; ROLLBACK TO savepoint_name;"}
{"prompt":"Explain Redis AOF persistence.","completion":"AOF logs every write operation, enabling data recovery on restart."}
{"prompt":"Write a Cassandra query with UDF.","completion":"CREATE FUNCTION keyspace.avg_state(count INT, sum INT) RETURNS INT LANGUAGE java AS 'return sum / count;';"}
{"prompt":"Write a SQL query with JSON_EXTRACT.","completion":"SELECT JSON_EXTRACT(json_column, '$.key') FROM table;"}
{"prompt":"How to use MongoDB $mod?","completion":"db.collection.find({ field: { $mod: [5, 0] } });"}
{"prompt":"Explain SQL covering indexes.","completion":"Covering indexes include all columns needed for a query, avoiding table access."}
{"prompt":"Write a Neo4j query for connected components.","completion":"CALL gds.wcc.stream('graphName') YIELD nodeId, componentId;"}
{"prompt":"How to use Redis zrank?","completion":"ZRANK key member;"}
{"prompt":"Write a SQL query with CUME_DIST.","completion":"SELECT name, salary, CUME_DIST() OVER (PARTITION BY dept_id ORDER BY salary) FROM employees;"}
{"prompt":"Explain Cassandra hinted handoff.","completion":"Hinted handoff stores missed writes for temporarily unavailable nodes."}
{"prompt":"Write a PostgreSQL query with ts_headline.","completion":"SELECT ts_headline(column, to_tsquery('keyword')) FROM table;"}
{"prompt":"What's philosophy of science?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query with ON CONFLICT.","completion":"INSERT INTO table (id, name) VALUES (1, 'Alice') ON CONFLICT (id) DO UPDATE SET name = EXCLUDED.name;"}
{"prompt":"How to use MongoDB $setOnInsert?","completion":"db.collection.updateOne({ _id: '123' }, { $setOnInsert: { created: new Date() } }, { upsert: true });"}
{"prompt":"Explain Redis RDB snapshots.","completion":"RDB snapshots save the entire dataset to disk at intervals."}
{"prompt":"Write a Cassandra query with tuple type.","completion":"CREATE TABLE keyspace.table (id INT, data tuple<int, text>, PRIMARY KEY(id));"}
{"prompt":"Write a SQL query with JSONB_ARRAY_ELEMENTS.","completion":"SELECT jsonb_array_elements(jsonb_column) FROM table;"}
{"prompt":"Explain SQL GiST indexes.","completion":"GiST indexes support complex data types like geospatial or full-text search."}
{"prompt":"Write a Neo4j query for shortest weighted path.","completion":"MATCH p = shortestPath((start:Node)-[* {weight: w}]->(end:Node)) RETURN p;"}
{"prompt":"How to use Redis zinterstore?","completion":"ZINTERSTORE dest 2 key1 key2 WEIGHTS 1 2;"}
{"prompt":"Write a SQL query with table constraints.","completion":"CREATE TABLE employees (id INT PRIMARY KEY, email VARCHAR(100) UNIQUE NOT NULL);"}
{"prompt":"Explain Cassandra bloom filters.","completion":"Bloom filters reduce disk reads by predicting if a key exists in an SSTable."}
{"prompt":"Write a PostgreSQL query with JSONB_BUILD_OBJECT.","completion":"SELECT JSONB_BUILD_OBJECT('id', id, 'name', name) FROM table;"}
{"prompt":"What's political philosophy?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to insert a key-value pair in Redis?","completion":"SET user:100 name 'John Doe';"}
{"prompt":"Write a SQL query to update employee department to 'Sales' where id = 5.","completion":"UPDATE employees SET department = 'Sales' WHERE id = 5;"}
{"prompt":"Explain ACID properties in SQL databases.","completion":"ACID stands for Atomicity (all-or-nothing), Consistency (data integrity), Isolation (independent transactions), Durability (committed changes are permanent)."}
{"prompt":"Write a Neo4j query to find all nodes connected to a specific node.","completion":"MATCH (n:Person)-[r]->(m) WHERE n.name = 'Alice' RETURN m;"}
{"prompt":"Write a SQL query to delete records older than 2023-01-01.","completion":"DELETE FROM records WHERE date < '2023-01-01';"}
{"prompt":"How to use a Redis sorted set?","completion":"ZADD leaderboard 100 'player1' 200 'player2';"}
{"prompt":"Explain normalization in SQL.","completion":"Normalization organizes data to reduce redundancy and improve integrity, using forms like 1NF, 2NF, 3NF."}
{"prompt":"Write a Cassandra query to insert data into a table.","completion":"INSERT INTO users (id, name, age) VALUES (1, 'Jane', 28);"}
{"prompt":"How to write a SQL subquery to find employees with above-average salary?","completion":"SELECT * FROM employees WHERE salary > (SELECT AVG(salary) FROM employees);"}
{"prompt":"What's a graph database used for?","completion":"Graph databases like Neo4j are used for complex relationships, e.g., social networks or fraud detection."}
{"prompt":"How to code in Python?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Write a SQL query for a LEFT JOIN between orders and customers.","completion":"SELECT * FROM customers LEFT JOIN orders ON customers.id = orders.customer_id;"}
{"prompt":"What is a foreign key in SQL?","completion":"A foreign key links a column in one table to the primary key in another, enforcing referential integrity."}
{"prompt":"Write a Redis command to set a key with expiration.","completion":"SET key value EX 3600;"}
{"prompt":"Explain CAP theorem for NoSQL databases.","completion":"CAP theorem states a distributed system can only guarantee two of Consistency, Availability, Partition tolerance."}
{"prompt":"Write a SQL query using a window function to rank employees by salary.","completion":"SELECT name, salary, RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"Write a Cassandra query to create a table.","completion":"CREATE TABLE keyspace.users (id UUID PRIMARY KEY, name TEXT, age INT);"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization embeds related data in a single document to improve read performance."}
{"prompt":"How to query geospatial data in MongoDB?","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"Write a SQL query to create a view.","completion":"CREATE VIEW active_users AS SELECT * FROM users WHERE status = 'active';"}
{"prompt":"What is a composite key in SQL?","completion":"A composite key uses multiple columns to uniquely identify records."}
{"prompt":"Write a Neo4j query to find shortest path.","completion":"MATCH p = shortestPath((n:Person {name: 'Alice'})-[*]-(m:Person {name: 'Bob'})) RETURN p;"}
{"prompt":"What is eventual consistency in NoSQL?","completion":"Eventual consistency means all replicas eventually reflect updates, prioritizing availability over immediate consistency."}
{"prompt":"Write a SQL query using CASE statement.","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"How to use Redis hashes?","completion":"HMSET user:100 name 'Alice' age 30; HGETALL user:100;"}
{"prompt":"Explain SQL indexing.","completion":"Indexes speed up queries by creating a data structure for fast lookups, but slow down writes."}
{"prompt":"Write a Cassandra batch query.","completion":"BEGIN BATCH INSERT INTO table1 ...; UPDATE table2 ...; APPLY BATCH;"}
{"prompt":"What's a NoSQL document store?","completion":"A document store (e.g., MongoDB) stores data as JSON-like documents with flexible schemas."}
{"prompt":"What is a SQL view used for?","completion":"A view is a virtual table based on a query, used to simplify complex queries or restrict access."}
{"prompt":"Write a MongoDB query to count documents.","completion":"db.collection.countDocuments({ condition });"}
{"prompt":"How to set up a MongoDB replica set?","completion":"Configure multiple mongod instances with --replSet, then use rs.initiate() and rs.add()."}
{"prompt":"Write a SQL query to pivot data.","completion":"SELECT * FROM (SELECT column, value FROM table) PIVOT (SUM(value) FOR column IN ('val1', 'val2'));"}
{"prompt":"How to use Redis for caching?","completion":"SET cache:key data EX 3600; GET cache:key;"}
{"prompt":"Explain SQL UNION operator.","completion":"UNION combines results from multiple SELECT queries, removing duplicates."}
{"prompt":"How to perform bulk insert in MongoDB?","completion":"db.collection.insertMany([{doc1}, {doc2}, {doc3}]);"}
{"prompt":"How to use MongoDB aggregation pipeline?","completion":"db.collection.aggregate([{ $match: { field: value } }, { $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"What's a database transaction?","completion":"A transaction is a sequence of operations treated as a single unit, ensuring ACID properties."}
{"prompt":"Write a Cassandra query to update data.","completion":"UPDATE keyspace.table SET column = value WHERE key = value;"}
{"prompt":"How to query Redis lists?","completion":"LPUSH mylist item; LRANGE mylist 0 -1;"}
{"prompt":"Explain SQL stored procedures.","completion":"Stored procedures are precompiled SQL code stored in the database, reusable for complex logic."}
{"prompt":"What is a non-clustered index in SQL?","completion":"A non-clustered index stores pointers to data, allowing multiple indexes per table."}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores (e.g., Redis) store data as simple key-value pairs, optimized for fast retrieval."}
{"prompt":"Write a SQL query to find employees hired in the last 6 months.","completion":"SELECT * FROM employees WHERE hire_date >= DATE_SUB(CURRENT_DATE, INTERVAL 6 MONTH);"}
{"prompt":"What's a database schema?","completion":"A schema defines the structure of a database, including tables, columns, and relationships."}
{"prompt":"Write a Cassandra query to select data with WHERE clause.","completion":"SELECT * FROM keyspace.table WHERE id = value;"}
{"prompt":"How to use Redis streams?","completion":"XADD mystream * field value; XREAD STREAMS mystream 0;"}
{"prompt":"Explain SQL cursors.","completion":"Cursors allow row-by-row processing of query results, used in stored procedures."}
{"prompt":"How to use MongoDB $push operator?","completion":"db.collection.updateOne({ _id: id }, { $push: { arrayField: value } });"}
{"prompt":"What is a SQL sequence?","completion":"A sequence generates unique numeric values, often used for primary keys."}
{"prompt":"Write a Redis command to get all keys matching a pattern.","completion":"KEYS pattern*;"}
{"prompt":"Explain NoSQL time-series databases.","completion":"Time-series databases (e.g., InfluxDB) are optimized for storing and querying timestamped data."}
{"prompt":"Write a SQL query to find distinct departments.","completion":"SELECT DISTINCT department FROM employees;"}
{"prompt":"How to use MongoDB $unset operator?","completion":"db.collection.updateOne({ _id: id }, { $unset: { field: '' } });"}
{"prompt":"What's a database trigger?","completion":"A trigger is a stored procedure that runs automatically on specific table events."}
{"prompt":"Write a SQL query to find employees with the same salary.","completion":"SELECT salary, COUNT(*) FROM employees GROUP BY salary HAVING COUNT(*) > 1;"}
{"prompt":"How to use MongoDB $elemMatch?","completion":"db.collection.find({ arrayField: { $elemMatch: { field: value } } });"}
{"prompt":"What is a SQL temporary table?","completion":"A temporary table is a short-lived table used within a session for intermediate results."}
{"prompt":"Explain NoSQL column-family stores.","completion":"Column-family stores (e.g., HBase) store data in columns, optimized for analytical queries."}
{"prompt":"Write a SQL query to find employees with no sales.","completion":"SELECT e.* FROM employees e LEFT JOIN sales s ON e.id = s.employee_id WHERE s.id IS NULL;"}
{"prompt":"How to use MongoDB $regex operator?","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"What's a database constraint?","completion":"Constraints enforce data integrity rules, like NOT NULL or UNIQUE."}
{"prompt":"Write a Neo4j query to update a node property.","completion":"MATCH (n:Person {name: 'Alice'}) SET n.age = 31;"}
{"prompt":"Write a SQL query to find employees by hire date range.","completion":"SELECT * FROM employees WHERE hire_date BETWEEN '2022-01-01' AND '2022-12-31';"}
{"prompt":"How to use MongoDB $slice operator?","completion":"db.collection.find({}, { arrayField: { $slice: [start, length] } });"}
{"prompt":"What is a SQL materialized view?","completion":"A materialized view stores query results physically, updated periodically."}
{"prompt":"Write a Redis command to get a range from a sorted set.","completion":"ZRANGE leaderboard 0 9;"}
{"prompt":"Explain NoSQL scalability.","completion":"NoSQL databases often scale horizontally by adding nodes, unlike SQL's vertical scaling."}
{"prompt":"Write a SQL query to find employees with highest salary per department.","completion":"SELECT department, name, salary FROM employees WHERE (department, salary) IN (SELECT department, MAX(salary) FROM employees GROUP BY department);"}
{"prompt":"How to use MongoDB $addToSet operator?","completion":"db.collection.updateOne({ _id: id }, { $addToSet: { arrayField: value } });"}
{"prompt":"What's a database index?","completion":"An index is a data structure that speeds up query retrieval but slows writes."}
{"prompt":"Write a SQL query to find employees with salary above department average.","completion":"SELECT e.* FROM employees e WHERE salary > (SELECT AVG(salary) FROM employees WHERE department = e.department);"}
{"prompt":"How to use MongoDB $inc operator?","completion":"db.collection.updateOne({ _id: id }, { $inc: { counter: 1 } });"}
{"prompt":"What is a SQL self-join?","completion":"A self-join joins a table to itself, useful for hierarchical data."}
{"prompt":"Write a Redis command to set multiple keys.","completion":"MSET key1 value1 key2 value2;"}
{"prompt":"Explain NoSQL document embedding.","completion":"Embedding stores related data within a single document, reducing joins."}
{"prompt":"Write a SQL query to find employees with no department.","completion":"SELECT * FROM employees WHERE department IS NULL;"}
{"prompt":"What's a database partition?","completion":"Partitioning divides a table into smaller pieces for performance and manageability."}
{"prompt":"Write a Neo4j query to find nodes with specific property.","completion":"MATCH (n:Person {age: 30}) RETURN n;"}
{"prompt":"Write a SQL query to find employees with salary in top 10%.","completion":"SELECT * FROM employees WHERE salary >= (SELECT PERCENTILE_CONT(0.9) WITHIN GROUP (ORDER BY salary) FROM employees);"}
{"prompt":"How to use MongoDB $size operator?","completion":"db.collection.find({ arrayField: { $size: 3 } });"}
{"prompt":"What is a SQL check constraint?","completion":"A CHECK constraint ensures column values meet a specific condition, e.g., age > 18."}
{"prompt":"Write a Redis command to get hash fields.","completion":"HGETALL user:100;"}
{"prompt":"Explain NoSQL eventual consistency.","completion":"Eventual consistency ensures all replicas converge to the same state over time."}
{"prompt":"Write a SQL query to find employees with same hire date.","completion":"SELECT hire_date, COUNT(*) FROM employees GROUP BY hire_date HAVING COUNT(*) > 1;"}
{"prompt":"How to use MongoDB $pull operator?","completion":"db.collection.updateOne({ _id: id }, { $pull: { arrayField: value } });"}
{"prompt":"What's a database view?","completion":"A view is a virtual table based on a query, used to simplify or secure data access."}
{"prompt":"Write a Cassandra query to select distinct values.","completion":"SELECT DISTINCT column FROM keyspace.table;"}
{"prompt":"Write a SQL query to find employees with salary rank.","completion":"SELECT name, salary, DENSE_RANK() OVER (ORDER BY salary DESC) FROM employees;"}
{"prompt":"How to use MongoDB $or operator?","completion":"db.collection.find({ $or: [{ field1: value1 }, { field2: value2 }] });"}
{"prompt":"What is a SQL unique constraint?","completion":"A UNIQUE constraint ensures all values in a column or set of columns are distinct."}
{"prompt":"Write a Redis command to expire a key in 24 hours.","completion":"SET key value EX 86400;"}
{"prompt":"Explain NoSQL replication.","completion":"Replication copies data across servers for redundancy and fault tolerance."}
{"prompt":"Write a SQL query to find employees with salary above 75th percentile.","completion":"SELECT * FROM employees WHERE salary > (SELECT PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY salary) FROM employees);"}
{"prompt":"How to use MongoDB $nin operator?","completion":"db.collection.find({ field: { $nin: ['value1', 'value2'] } });"}
{"prompt":"What's a database deadlock?","completion":"A deadlock occurs when two transactions block each other, waiting for resources."}
{"prompt":"Write a Neo4j query to delete a relationship.","completion":"MATCH (a)-[r:REL]->(b) WHERE a.name = 'Alice' DELETE r;"}
{"prompt":"Write a SQL query to find employees with salary below average.","completion":"SELECT * FROM employees WHERE salary < (SELECT AVG(salary) FROM employees);"}
{"prompt":"How to use MongoDB $set operator?","completion":"db.collection.updateOne({ _id: id }, { $set: { field: value } });"}
{"prompt":"What is a SQL foreign key constraint?","completion":"A foreign key constraint ensures a column references a valid primary key in another table."}
{"prompt":"Write a Redis command to get a list length.","completion":"LLEN mylist;"}
{"prompt":"Explain NoSQL data modeling.","completion":"NoSQL data modeling prioritizes query patterns, often using denormalization or embedding."}
{"prompt":"Write a SQL query to find employees with hire date in specific month.","completion":"SELECT * FROM employees WHERE MONTH(hire_date) = 6;"}
{"prompt":"How to use MongoDB $match in aggregation?","completion":"db.collection.aggregate([{ $match: { field: value } }]);"}
{"prompt":"What's a database lock?","completion":"A lock prevents concurrent access to data to ensure consistency during transactions."}
{"prompt":"Write a Cassandra query to update TTL.","completion":"UPDATE keyspace.table USING TTL 3600 SET column = value WHERE key = value;"}
{"prompt":"Write a SQL query to find employees with highest salary in each department.","completion":"SELECT e.* FROM employees e JOIN (SELECT department, MAX(salary) AS max_salary FROM employees GROUP BY department) m ON e.department = m.department AND e.salary = m.max_salary;"}
{"prompt":"How to use MongoDB $group in aggregation?","completion":"db.collection.aggregate([{ $group: { _id: '$field', total: { $sum: 1 } } }]);"}
{"prompt":"What is a SQL aggregate function?","completion":"Aggregate functions like COUNT, SUM, AVG compute values across rows."}
{"prompt":"Write a Redis command to pop an item from a list.","completion":"LPOP mylist;"}
{"prompt":"Explain NoSQL sharding strategies.","completion":"Sharding strategies include range-based, hash-based, or directory-based partitioning."}
{"prompt":"Write a SQL query to find employees with no sales in last year.","completion":"SELECT e.* FROM employees e LEFT JOIN sales s ON e.id = s.employee_id AND s.sale_date >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR) WHERE s.id IS NULL;"}
{"prompt":"How to use MongoDB $project in aggregation?","completion":"db.collection.aggregate([{ $project: { field1: 1, field2: 0 } }]);"}
{"prompt":"What's a database index scan?","completion":"An index scan uses an index to retrieve rows, faster than a full table scan."}
{"prompt":"Write a Neo4j query to find all paths between two nodes.","completion":"MATCH p = (a:Person {name: 'Alice'})-[*1..3]->(b:Person {name: 'Bob'}) RETURN p;"}
{"prompt":"Write a SQL query to find employees with salary above median.","completion":"SELECT * FROM employees WHERE salary > (SELECT PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY salary) FROM employees);"}
{"prompt":"How to use MongoDB $sort in aggregation?","completion":"db.collection.aggregate([{ $sort: { field: -1 } }]);"}
{"prompt":"What is a SQL table alias?","completion":"A table alias is a temporary name for a table in a query, e.g., FROM employees e."}
{"prompt":"Write a Redis command to add to a set.","completion":"SADD myset member;"}
{"prompt":"Explain NoSQL consistency models.","completion":"NoSQL offers eventual, strong, or causal consistency, balancing availability and performance."}
{"prompt":"Write a SQL query to find employees with salary changes.","completion":"SELECT e.* FROM employees e JOIN salary_history h ON e.id = h.employee_id WHERE h.change_date IS NOT NULL;"}
{"prompt":"How to use MongoDB $unwind in aggregation?","completion":"db.collection.aggregate([{ $unwind: '$arrayField' }]);"}
{"prompt":"What's a database transaction log?","completion":"A transaction log records all database changes for recovery and consistency."}
{"prompt":"Write a Cassandra query to select data with limit.","completion":"SELECT * FROM keyspace.table LIMIT 10;"}
{"prompt":"Write a SQL query to find employees with multiple roles.","completion":"SELECT employee_id, COUNT(*) FROM employee_roles GROUP BY employee_id HAVING COUNT(*) > 1;"}
{"prompt":"How to use MongoDB $geoNear in aggregation?","completion":"db.collection.aggregate([{ $geoNear: { near: { type: 'Point', coordinates: [lng, lat] }, distanceField: 'dist' } }]);"}
{"prompt":"What is a SQL clustered index?","completion":"A clustered index defines the physical order of data in a table."}
{"prompt":"Explain NoSQL data partitioning.","completion":"Partitioning splits data across nodes for scalability, using keys or ranges."}
{"prompt":"Write a SQL query to find employees with specific skill.","completion":"SELECT * FROM employees WHERE skills LIKE '%SQL%';"}
{"prompt":"How to use MongoDB $redact in aggregation?","completion":"db.collection.aggregate([{ $redact: { $cond: { if: { $eq: ['$field', 'value'] }, then: '$$KEEP', else: '$$PRUNE' } } }]);"}
{"prompt":"What's a database snapshot?","completion":"A snapshot is a point-in-time copy of a database for backup or analysis."}
{"prompt":"Write a Neo4j query to find nodes with multiple relationships.","completion":"MATCH (n)-[r]->() RETURN n, COUNT(r) AS rel_count HAVING COUNT(r) > 1;"}
{"prompt":"Write a SQL query to find employees with salary history.","completion":"SELECT e.* FROM employees e JOIN salary_history h ON e.id = h.employee_id;"}
{"prompt":"How to use MongoDB $sample in aggregation?","completion":"db.collection.aggregate([{ $sample: { size: 5 } }]);"}
{"prompt":"What is a SQL default constraint?","completion":"A DEFAULT constraint sets a default value for a column if none is provided."}
{"prompt":"Write a Redis command to check set membership.","completion":"SISMEMBER myset member;"}
{"prompt":"Explain NoSQL caching.","completion":"NoSQL databases like Redis cache frequently accessed data in memory for speed."}
{"prompt":"Write a SQL query to find employees with longest tenure.","completion":"SELECT * FROM employees ORDER BY hire_date ASC LIMIT 1;"}
{"prompt":"How to use MongoDB $out in aggregation?","completion":"db.collection.aggregate([{ $match: { field: value } }, { $out: 'newCollection' }]);"}
{"prompt":"What's a database join?","completion":"A join combines rows from multiple tables based on a related column."}
{"prompt":"Write a Cassandra query to select data with TTL.","completion":"SELECT * FROM keyspace.table WHERE column = value USING TTL 3600;"}
{"prompt":"Write a SQL query to find employees with specific department and salary.","completion":"SELECT * FROM employees WHERE department = 'Sales' AND salary > 60000;"}
{"prompt":"How to use MongoDB $merge in aggregation?","completion":"db.collection.aggregate([{ $match: { field: value } }, { $merge: { into: 'targetCollection' } }]);"}
{"prompt":"What is a SQL index hint?","completion":"An index hint forces the database to use a specific index for a query."}
{"prompt":"Write a Redis command to get a range of list items.","completion":"LRANGE mylist 0 4;"}
{"prompt":"Explain NoSQL high availability.","completion":"NoSQL achieves high availability through replication and distributed nodes."}
{"prompt":"Write a SQL query to find employees with salary above average in their department.","completion":"SELECT e.* FROM employees e WHERE salary > (SELECT AVG(salary) FROM employees WHERE department = e.department);"}
{"prompt":"How to use MongoDB $count in aggregation?","completion":"db.collection.aggregate([{ $count: 'total' }]);"}
{"prompt":"What's a database cursor?","completion":"A cursor processes query results row-by-row, often in stored procedures."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship type.","completion":"MATCH (n)-[r:KNOWS]->(m) RETURN n, m;"}
{"prompt":"Write a SQL query to find employees with salary in specific range.","completion":"SELECT * FROM employees WHERE salary BETWEEN 50000 AND 70000;"}
{"prompt":"How to use MongoDB $limit in aggregation?","completion":"db.collection.aggregate([{ $limit: 10 }]);"}
{"prompt":"What is a SQL not null constraint?","completion":"A NOT NULL constraint ensures a column cannot have NULL values."}
{"prompt":"Write a Redis command to increment a hash field.","completion":"HINCRBY user:100 age 1;"}
{"prompt":"Explain NoSQL data replication.","completion":"Replication copies data across nodes to ensure fault tolerance and availability."}
{"prompt":"Write a SQL query to find employees with specific manager.","completion":"SELECT * FROM employees WHERE manager_id = 100;"}
{"prompt":"How to use MongoDB $skip in aggregation?","completion":"db.collection.aggregate([{ $skip: 5 }]);"}
{"prompt":"What's a database stored function?","completion":"A stored function is a reusable SQL routine that returns a single value."}
{"prompt":"Write a Cassandra query to select data with clustering key.","completion":"SELECT * FROM keyspace.table WHERE partition_key = value AND clustering_key = value;"}
{"prompt":"Write a SQL query to find employees with salary above specific value.","completion":"SELECT * FROM employees WHERE salary > 75000;"}
{"prompt":"How to use MongoDB $avg in aggregation?","completion":"db.collection.aggregate([{ $group: { _id: null, avgValue: { $avg: '$field' } } }]);"}
{"prompt":"What is a SQL common table expression?","completion":"A CTE (WITH clause) is a temporary result set used within a query for readability."}
{"prompt":"Write a Redis command to get a hash field value.","completion":"HGET user:100 name;"}
{"prompt":"Explain NoSQL horizontal scaling.","completion":"Horizontal scaling adds more nodes to distribute data and workload."}
{"prompt":"How to use MongoDB $sum in aggregation?","completion":"db.collection.aggregate([{ $group: { _id: null, total: { $sum: '$field' } } }]);"}
{"prompt":"What's a database trigger event?","completion":"A trigger event (INSERT, UPDATE, DELETE) specifies when a trigger fires."}
{"prompt":"Write a Neo4j query to find nodes with specific label.","completion":"MATCH (n:Person) RETURN n;"}
{"prompt":"Write a SQL query to find employees with salary below specific value.","completion":"SELECT * FROM employees WHERE salary < 40000;"}
{"prompt":"How to use MongoDB $min in aggregation?","completion":"db.collection.aggregate([{ $group: { _id: null, minValue: { $min: '$field' } } }]);"}
{"prompt":"What is a SQL table partition?","completion":"A table partition splits a table into smaller, manageable pieces for performance."}
{"prompt":"Write a Redis command to remove a set member.","completion":"SREM myset member;"}
{"prompt":"Explain NoSQL fault tolerance.","completion":"Fault tolerance ensures NoSQL systems remain operational during node failures."}
{"prompt":"Write a SQL query to find employees with specific location.","completion":"SELECT * FROM employees WHERE location = 'New York';"}
{"prompt":"How to use MongoDB $max in aggregation?","completion":"db.collection.aggregate([{ $group: { _id: null, maxValue: { $max: '$field' } } }]);"}
{"prompt":"What's a database rollback?","completion":"A rollback undoes changes in a transaction if it fails, ensuring consistency."}
{"prompt":"Write a Cassandra query to select data with IN clause.","completion":"SELECT * FROM keyspace.table WHERE id IN (value1, value2);"}
{"prompt":"Write a SQL query to find employees with specific skill set.","completion":"SELECT * FROM employees WHERE skills LIKE '%Python%';"}
{"prompt":"How to use MongoDB $first in aggregation?","completion":"db.collection.aggregate([{ $group: { _id: '$field', first: { $first: '$otherField' } } }]);"}
{"prompt":"What is a SQL index type?","completion":"Index types include B-tree, hash, and full-text, each suited for different queries."}
{"prompt":"Write a Redis command to get all hash fields.","completion":"HKEYS user:100;"}
{"prompt":"Explain NoSQL data consistency.","completion":"NoSQL offers tunable consistency, balancing performance and data accuracy."}
{"prompt":"Write a SQL query to find employees with specific department and hire date.","completion":"SELECT * FROM employees WHERE department = 'HR' AND YEAR(hire_date) = 2022;"}
{"prompt":"How to use MongoDB $last in aggregation?","completion":"db.collection.aggregate([{ $group: { _id: '$field', last: { $last: '$otherField' } } }]);"}
{"prompt":"What's a database checkpoint?","completion":"A checkpoint saves the database state to ensure recovery after a crash."}
{"prompt":"Write a SQL query to find employees with specific salary and location.","completion":"SELECT * FROM employees WHERE salary > 50000 AND location = 'London';"}
{"prompt":"How to use MongoDB $addFields in aggregation?","completion":"db.collection.aggregate([{ $addFields: { newField: '$existingField' } }]);"}
{"prompt":"What is a SQL recursive query?","completion":"A recursive CTE processes hierarchical or iterative data, e.g., for org charts."}
{"prompt":"Explain NoSQL load balancing.","completion":"Load balancing distributes queries across nodes to optimize performance."}
{"prompt":"Write a SQL query to find employees with specific role and department.","completion":"SELECT * FROM employees WHERE role = 'Manager' AND department = 'Sales';"}
{"prompt":"How to use MongoDB $bucket in aggregation?","completion":"db.collection.aggregate([{ $bucket: { groupBy: '$field', boundaries: [0, 10, 20] } }]);"}
{"prompt":"What's a database archive?","completion":"An archive stores old data separately to reduce active database size."}
{"prompt":"Write a Cassandra query to select data with ORDER BY.","completion":"SELECT * FROM keyspace.table WHERE partition_key = value ORDER BY clustering_key DESC;"}
{"prompt":"Write a SQL query to find employees with specific tenure.","completion":"SELECT * FROM employees WHERE DATEDIFF(CURRENT_DATE, hire_date) > 365;"}
{"prompt":"How to use MongoDB $facet in aggregation?","completion":"db.collection.aggregate([{ $facet: { category1: [{ $match: { field: value } }], category2: [{ $match: { field: otherValue } }] } }]);"}
{"prompt":"What is a SQL full-text index?","completion":"A full-text index optimizes searches for text patterns in large datasets."}
{"prompt":"Write a Redis command to get a sorted set range by score.","completion":"ZRANGEBYSCORE myset 100 200;"}
{"prompt":"Explain NoSQL data migration.","completion":"Data migration moves data between NoSQL systems, often requiring schema redesign."}
{"prompt":"Write a SQL query to find employees with specific project.","completion":"SELECT e.* FROM employees e JOIN employee_projects p ON e.id = p.employee_id WHERE p.project_id = 100;"}
{"prompt":"How to use MongoDB $replaceRoot in aggregation?","completion":"db.collection.aggregate([{ $replaceRoot: { newRoot: '$embeddedDoc' } }]);"}
{"prompt":"What's a database recovery?","completion":"Recovery restores a database to a consistent state after a failure using logs."}
{"prompt":"Write a Neo4j query to find nodes with specific property value.","completion":"MATCH (n:Person) WHERE n.age > 25 RETURN n;"}
{"prompt":"Write a SQL query to find employees with specific certification.","completion":"SELECT * FROM employees WHERE certifications LIKE '%AWS%';"}
{"prompt":"How to use MongoDB $lookup with pipeline?","completion":"db.collection.aggregate([{ $lookup: { from: 'other', let: { id: '$id' }, pipeline: [{ $match: { $expr: { $eq: ['$_id', '$$id'] } } }], as: 'joined' } }]);"}
{"prompt":"What is a SQL table hint?","completion":"A table hint overrides the database optimizer's default query execution plan."}
{"prompt":"Write a Redis command to get a sorted set rank.","completion":"ZRANK leaderboard player1;"}
{"prompt":"Explain NoSQL data compression.","completion":"Data compression in NoSQL reduces storage needs, often applied at the document level."}
{"prompt":"Write a SQL query to find employees with specific team.","completion":"SELECT e.* FROM employees e JOIN team_members t ON e.id = t.employee_id WHERE t.team_id = 10;"}
{"prompt":"How to use MongoDB $graphLookup in aggregation?","completion":"db.collection.aggregate([{ $graphLookup: { from: 'collection', startWith: '$field', connectFromField: 'field', connectToField: 'field', as: 'hierarchy' } }]);"}
{"prompt":"What's a database backup?","completion":"A backup is a copy of a database used for restoration after data loss."}
{"prompt":"Write a Cassandra query to select data with ALLOW FILTERING.","completion":"SELECT * FROM keyspace.table WHERE column = value ALLOW FILTERING;"}
{"prompt":"Write a SQL query to find employees with specific performance rating.","completion":"SELECT * FROM employees WHERE performance_rating >= 4;"}
{"prompt":"How to use MongoDB $cond in aggregation?","completion":"db.collection.aggregate([{ $project: { result: { $cond: { if: { $gt: ['$field', 10] }, then: 'high', else: 'low' } } } }]);"}
{"prompt":"What is a SQL merge statement?","completion":"A MERGE statement combines INSERT, UPDATE, and DELETE operations based on conditions."}
{"prompt":"Write a Redis command to get a sorted set score.","completion":"ZSCORE leaderboard player1;"}
{"prompt":"Explain NoSQL data encryption.","completion":"NoSQL databases encrypt data at rest or in transit to ensure security."}
{"prompt":"Write a SQL query to find employees with specific training.","completion":"SELECT e.* FROM employees e JOIN trainings t ON e.id = t.employee_id WHERE t.training_id = 50;"}
{"prompt":"How to use MongoDB $switch in aggregation?","completion":"db.collection.aggregate([{ $project: { result: { $switch: { branches: [{ case: { $gt: ['$field', 10] }, then: 'high' }], default: 'low' } } } }]);"}
{"prompt":"What's a database audit?","completion":"An audit tracks database access and changes for security and compliance."}
{"prompt":"Write a Neo4j query to find nodes with specific pattern.","completion":"MATCH (n:Person)-[:FRIEND]->(m:Person) WHERE m.age > 30 RETURN n, m;"}
{"prompt":"Write a SQL query to find employees with specific education.","completion":"SELECT * FROM employees WHERE education_level = 'Masters';"}
{"prompt":"How to use MongoDB $arrayElemAt in aggregation?","completion":"db.collection.aggregate([{ $project: { item: { $arrayElemAt: ['$arrayField', 0] } } }]);"}
{"prompt":"What is a SQL window function?","completion":"A window function performs calculations across a set of rows without grouping them."}
{"prompt":"Write a Redis command to get a list of sets intersection.","completion":"SINTER set1 set2;"}
{"prompt":"Explain NoSQL data backup strategies.","completion":"NoSQL backups use snapshots, incremental dumps, or replication for data recovery."}
{"prompt":"Write a SQL query to find employees with specific experience years.","completion":"SELECT * FROM employees WHERE years_experience >= 5;"}
{"prompt":"How to use MongoDB $size in aggregation?","completion":"db.collection.aggregate([{ $match: { $expr: { $eq: [{ $size: '$arrayField' }, 3] } } }]);"}
{"prompt":"What's a database replication log?","completion":"A replication log records changes for synchronizing data across database replicas."}
{"prompt":"Write a Cassandra query to select data with specific partition key.","completion":"SELECT * FROM keyspace.table WHERE partition_key = value;"}
{"prompt":"Write a SQL query to find employees with specific bonus.","completion":"SELECT * FROM employees WHERE bonus > 1000;"}
{"prompt":"How to use MongoDB $let in aggregation?","completion":"db.collection.aggregate([{ $project: { result: { $let: { vars: { var1: '$field' }, in: { $add: ['$$var1', 10] } } } } }]);"}
{"prompt":"What is a SQL table scan?","completion":"A table scan reads all rows in a table, used when no suitable index exists."}
{"prompt":"Write a Redis command to get a sorted set reverse range.","completion":"ZREVRANGE leaderboard 0 9;"}
{"prompt":"Explain NoSQL data indexing.","completion":"NoSQL indexing creates structures to speed up queries, varying by database type."}
{"prompt":"Write a SQL query to find employees with specific shift.","completion":"SELECT * FROM employees WHERE shift = 'Night';"}
{"prompt":"How to use MongoDB $toString in aggregation?","completion":"db.collection.aggregate([{ $project: { stringField: { $toString: '$numberField' } } }]);"}
{"prompt":"What's a database log file?","completion":"A log file records database operations for recovery and auditing purposes."}
{"prompt":"Write a Neo4j query to find nodes with specific degree.","completion":"MATCH (n) WHERE SIZE((n)--()) > 2 RETURN n;"}
{"prompt":"Write a SQL query to find employees with specific status.","completion":"SELECT * FROM employees WHERE status = 'Active';"}
{"prompt":"How to use MongoDB $toInt in aggregation?","completion":"db.collection.aggregate([{ $project: { intField: { $toInt: '$stringField' } } }]);"}
{"prompt":"What is a SQL correlated subquery?","completion":"A correlated subquery references outer query columns, executed per row."}
{"prompt":"Write a Redis command to get a list of sets union.","completion":"SUNION set1 set2;"}
{"prompt":"Explain NoSQL data sharding.","completion":"Sharding splits data across nodes based on a shard key for scalability."}
{"prompt":"Write a SQL query to find employees with specific contract type.","completion":"SELECT * FROM employees WHERE contract_type = 'Permanent';"}
{"prompt":"How to use MongoDB $toDate in aggregation?","completion":"db.collection.aggregate([{ $project: { dateField: { $toDate: '$stringField' } } }]);"}
{"prompt":"What's a database performance tuning?","completion":"Performance tuning optimizes queries, indexes, and configurations for efficiency."}
{"prompt":"Write a Cassandra query to select data with specific clustering column.","completion":"SELECT * FROM keyspace.table WHERE partition_key = value AND clustering_column = value;"}
{"prompt":"Write a SQL query to find employees with specific language.","completion":"SELECT * FROM employees WHERE languages LIKE '%Spanish%';"}
{"prompt":"How to use MongoDB $concat in aggregation?","completion":"db.collection.aggregate([{ $project: { fullName: { $concat: ['$firstName', ' ', '$lastName'] } } }]);"}
{"prompt":"What is a SQL execution plan?","completion":"An execution plan shows how the database processes a query, including index usage."}
{"prompt":"Write a Redis command to get a sorted set range with scores.","completion":"ZRANGE leaderboard 0 9 WITHSCORES;"}
{"prompt":"Explain NoSQL data aggregation.","completion":"Aggregation in NoSQL processes data through pipelines for grouping or transformation."}
{"prompt":"Write a SQL query to find employees with specific award.","completion":"SELECT * FROM employees WHERE awards LIKE '%Employee of the Year%';"}
{"prompt":"How to use MongoDB $substr in aggregation?","completion":"db.collection.aggregate([{ $project: { substring: { $substr: ['$field', 0, 3] } } }]);"}
{"prompt":"What's a database connection pool?","completion":"A connection pool manages a set of database connections for reuse."}
{"prompt":"Write a Neo4j query to find nodes with specific relationship count.","completion":"MATCH (n)-[r]->() RETURN n, COUNT(r) AS count ORDER BY count DESC;"}
{"prompt":"Write a SQL query to find employees with specific hobby.","completion":"SELECT * FROM employees WHERE hobbies LIKE '%Photography%';"}
{"prompt":"How to use MongoDB $toLower in aggregation?","completion":"db.collection.aggregate([{ $project: { lowerField: { $toLower: '$stringField' } } }]);"}
{"prompt":"What is a SQL data type?","completion":"Data types define the kind of data a column can hold, e.g., INT, VARCHAR, DATE."}
{"prompt":"Write a Redis command to get a sorted set range by lexicographical order.","completion":"ZRANGEBYLEX myset [a [z;"}
{"prompt":"Explain NoSQL data versioning.","completion":"Data versioning tracks changes over time, allowing rollback or historical queries."}
{"prompt":"Write a SQL query to find employees with specific hobby and skill.","completion":"SELECT * FROM employees WHERE hobbies LIKE '%Hiking%' AND skills LIKE '%Java%';"}
{"prompt":"How to use MongoDB $toUpper in aggregation?","completion":"db.collection.aggregate([{ $project: { upperField: { $toUpper: '$stringField' } } }]);"}
{"prompt":"What's a database normalization form?","completion":"Normalization forms (1NF, 2NF, 3NF) reduce redundancy and improve data integrity."}
{"prompt":"Write a Cassandra query to select data with specific condition.","completion":"SELECT * FROM keyspace.table WHERE column = value;"}
{"prompt":"Write a SQL query to find employees with specific hobby and location.","completion":"SELECT * FROM employees WHERE hobbies LIKE '%Cycling%' AND location = 'San Francisco';"}
{"prompt":"How to use MongoDB $dateToString in aggregation?","completion":"db.collection.aggregate([{ $project: { dateString: { $dateToString: { format: '%Y-%m-%d', date: '$dateField' } } } }]);"}
{"prompt":"What is a SQL transaction isolation level?","completion":"Isolation levels (READ UNCOMMITTED, READ COMMITTED, REPEATABLE READ, SERIALIZABLE) define visibility of changes between transactions."}
{"prompt":"Write a Redis command to get a sorted set range by score with scores.","completion":"ZRANGEBYSCORE myset -inf +inf WITHSCORES;"}
{"prompt":"MongoDB query to find documents with age > 30.","completion":"db.collection.find({ age: { $gt: 30 } });"}
{"prompt":"SQL query for grouping by department and counting employees.","completion":"SELECT dept_id, COUNT(*) FROM employees GROUP BY dept_id;"}
{"prompt":"How to set a key-value pair in Redis?","completion":"SET user:123 name 'John Doe';"}
{"prompt":"MongoDB aggregation to count documents by category.","completion":"db.collection.aggregate([{ $group: { _id: '$category', count: { $sum: 1 } } }]);"}
{"prompt":"SQL query to update employee salary.","completion":"UPDATE employees SET salary = salary + 5000 WHERE id = 123;"}
{"prompt":"Explain sharding in NoSQL databases.","completion":"Sharding distributes data across multiple servers to improve scalability and performance, often used in NoSQL like MongoDB."}
{"prompt":"Neo4j query to find friends of a user.","completion":"MATCH (user:Person {name: 'Alice'})-[:FRIENDS_WITH]->(friend) RETURN friend;"}
{"prompt":"SQL left join example.","completion":"SELECT * FROM employees LEFT JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"Redis command to add to a list.","completion":"LPUSH mylist 'value';"}
{"prompt":"Cassandra query to insert data.","completion":"INSERT INTO keyspace.users (id, name) VALUES (1, 'Alice');"}
{"prompt":"MongoDB query to update multiple documents.","completion":"db.collection.updateMany({ status: 'inactive' }, { $set: { status: 'active' } });"}
{"prompt":"Explain ACID properties in SQL.","completion":"ACID (Atomicity, Consistency, Isolation, Durability) ensures reliable transactions in SQL databases."}
{"prompt":"SQL query to delete records older than a date.","completion":"DELETE FROM logs WHERE created_at < '2023-01-01';"}
{"prompt":"Neo4j query to create a relationship.","completion":"MATCH (a:Person {name: 'Alice'}), (b:Person {name: 'Bob'}) CREATE (a)-[:FRIENDS_WITH]->(b);"}
{"prompt":"Redis command to expire a key.","completion":"SET key value EX 3600;"}
{"prompt":"SQL window function example.","completion":"SELECT name, salary, RANK() OVER (PARTITION BY dept_id ORDER BY salary DESC) FROM employees;"}
{"prompt":"MongoDB index creation.","completion":"db.collection.createIndex({ name: 1 });"}
{"prompt":"Cassandra data modeling tip.","completion":"Design tables based on query patterns, denormalize data, and choose partition keys to optimize reads."}
{"prompt":"SQL query for full outer join.","completion":"SELECT * FROM table1 FULL OUTER JOIN table2 ON table1.id = table2.id;"}
{"prompt":"Redis sorted set command.","completion":"ZADD leaderboard 100 'player1';"}
{"prompt":"SQL query to create a view.","completion":"CREATE VIEW active_employees AS SELECT * FROM employees WHERE status = 'active';"}
{"prompt":"PostgreSQL JSONB query example.","completion":"SELECT * FROM table WHERE jsonb_column @> '{\"key\": \"value\"}';"}
{"prompt":"SQL query to drop a table.","completion":"DROP TABLE employees;"}
{"prompt":"MongoDB query to sort by date descending.","completion":"db.collection.find().sort({ created_at: -1 });"}
{"prompt":"SQL query for a self-join.","completion":"SELECT e1.name, e2.name FROM employees e1 JOIN employees e2 ON e1.manager_id = e2.id;"}
{"prompt":"Neo4j shortest path query.","completion":"MATCH p = shortestPath((start:Node)-[*]-(end:Node)) RETURN p;"}
{"prompt":"Cassandra secondary index creation.","completion":"CREATE INDEX ON keyspace.table (column);"}
{"prompt":"SQL date function example.","completion":"SELECT CURRENT_DATE; SELECT DATEADD(day, 1, '2023-01-01');"}
{"prompt":"MongoDB bulk insert example.","completion":"db.collection.insertMany([{ name: 'Alice' }, { name: 'Bob' }]);"}
{"prompt":"Explain normalization in SQL.","completion":"Normalization reduces data redundancy by organizing tables into forms like 1NF, 2NF, 3NF."}
{"prompt":"SQL case statement example.","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END FROM employees;"}
{"prompt":"PostgreSQL trigger example.","completion":"CREATE TRIGGER log_update BEFORE UPDATE ON employees FOR EACH ROW EXECUTE FUNCTION log_employee_changes();"}
{"prompt":"MongoDB geospatial query example.","completion":"db.collection.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [lng, lat] } } } });"}
{"prompt":"SQL query to find duplicate records.","completion":"SELECT column, COUNT(*) FROM table GROUP BY column HAVING COUNT(*) > 1;"}
{"prompt":"Redis hash set example.","completion":"HMSET user:123 name 'Alice' age 30;"}
{"prompt":"Explain denormalization in NoSQL.","completion":"Denormalization duplicates data across documents/tables to optimize read performance, common in NoSQL."}
{"prompt":"Neo4j merge clause example.","completion":"MERGE (n:Person {id: '123'}) ON CREATE SET n.name = 'Alice';"}
{"prompt":"SQL query to pivot data.","completion":"SELECT * FROM (SELECT column1, column2 FROM table) PIVOT (SUM(column2) FOR column1 IN (value1, value2));"}
{"prompt":"Cassandra batch statement example.","completion":"BEGIN BATCH INSERT INTO table (id, name) VALUES (1, 'Alice'); UPDATE table SET name = 'Bob' WHERE id = 2; APPLY BATCH;"}
{"prompt":"SQL like operator example.","completion":"SELECT * FROM table WHERE name LIKE '%John%';"}
{"prompt":"Redis pipeline example.","completion":"const pipeline = client.pipeline(); pipeline.set('key', 'value'); pipeline.get('key'); pipeline.exec();"}
{"prompt":"SQL query to find top 5 salaries.","completion":"SELECT * FROM employees ORDER BY salary DESC LIMIT 5;"}
{"prompt":"Neo4j query to delete a node.","completion":"MATCH (n:Node {id: '123'}) DETACH DELETE n;"}
{"prompt":"Cassandra query to update TTL.","completion":"ALTER TABLE keyspace.table WITH defaultTTL = 3600;"}
{"prompt":"SQL full-text search example.","completion":"SELECT * FROM table WHERE MATCH(column) AGAINST('search term' IN BOOLEAN MODE);"}
{"prompt":"Redis increment command.","completion":"INCR counter;"}
{"prompt":"MongoDB query to remove a field.","completion":"db.collection.updateMany({}, { $unset: { field: '' } });"}
{"prompt":"SQL query to join multiple tables.","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id JOIN table3 ON table2.id = table3.id;"}
{"prompt":"Explain eventual consistency in NoSQL.","completion":"Eventual consistency means updates propagate to all nodes over time, prioritizing availability."}
{"prompt":"Neo4j query to find all paths.","completion":"MATCH p = (start:Node)-[*1..3]->(end:Node) RETURN p;"}
{"prompt":"SQL query to calculate running total.","completion":"SELECT id, amount, SUM(amount) OVER (ORDER BY id) AS running_total FROM transactions;"}
{"prompt":"Redis command to get list length.","completion":"LLEN mylist;"}
{"prompt":"Cassandra query to drop index.","completion":"DROP INDEX keyspace.index_name;"}
{"prompt":"SQL query to rename a column.","completion":"ALTER TABLE table RENAME COLUMN old_name TO new_name;"}
{"prompt":"Explain MongoDB replica sets.","completion":"Replica sets are groups of MongoDB instances maintaining the same data for redundancy and failover."}
{"prompt":"Neo4j query to count relationships.","completion":"MATCH ()-[r:REL]->() RETURN COUNT(r);"}
{"prompt":"SQL query to truncate a table.","completion":"TRUNCATE TABLE table;"}
{"prompt":"Redis command to get hash values.","completion":"HGETALL user:123;"}
{"prompt":"Cassandra query to select by partition key.","completion":"SELECT * FROM keyspace.table WHERE partition_key = 'value';"}
{"prompt":"SQL query to find null values.","completion":"SELECT * FROM table WHERE column IS NULL;"}
{"prompt":"MongoDB query to limit results.","completion":"db.collection.find().limit(10);"}
{"prompt":"SQL query to create an index.","completion":"CREATE INDEX idx_name ON table (column);"}
{"prompt":"Neo4j query to update properties.","completion":"MATCH (n:Node {id: '123'}) SET n.property = 'new_value';"}
{"prompt":"Redis command to check key existence.","completion":"EXISTS key;"}
{"prompt":"SQL query to get distinct values.","completion":"SELECT DISTINCT column FROM table;"}
{"prompt":"MongoDB query with $or operator.","completion":"db.collection.find({ $or: [{ field1: 'value1' }, { field2: 'value2' }] });"}
{"prompt":"Cassandra query to alter table.","completion":"ALTER TABLE keyspace.table ADD column_name datatype;"}
{"prompt":"SQL query to calculate average.","completion":"SELECT AVG(column) FROM table;"}
{"prompt":"Redis command to get set members.","completion":"SMEMBERS myset;"}
{"prompt":"Explain SQL transactions.","completion":"Transactions group operations ensuring ACID: BEGIN TRANSACTION; INSERT...; COMMIT;"}
{"prompt":"Neo4j query to find nodes with specific property.","completion":"MATCH (n:Node {property: 'value'}) RETURN n;"}
{"prompt":"MongoDB query to skip results.","completion":"db.collection.find().skip(10);"}
{"prompt":"SQL query to add foreign key.","completion":"ALTER TABLE table ADD CONSTRAINT fk_name FOREIGN KEY (column) REFERENCES parent_table(id);"}
{"prompt":"Redis command to get range from sorted set.","completion":"ZRANGE leaderboard 0 9 WITHSCORES;"}
{"prompt":"Cassandra query to select with ALLOW FILTERING.","completion":"SELECT * FROM keyspace.table WHERE column = 'value' ALLOW FILTERING;"}
{"prompt":"SQL query to get row count.","completion":"SELECT COUNT(*) FROM table;"}
{"prompt":"MongoDB query to group and sort.","completion":"db.collection.aggregate([{ $group: { _id: '$field', count: { $sum: 1 } } }, { $sort: { count: -1 } }]);"}
{"prompt":"SQL query to find max value.","completion":"SELECT MAX(column) FROM table;"}
{"prompt":"Neo4j query to create index.","completion":"CREATE INDEX ON :Node(property);"}
{"prompt":"Redis command to get key TTL.","completion":"TTL key;"}
{"prompt":"SQL query to join with condition.","completion":"SELECT * FROM table1 JOIN table2 ON table1.id = table2.id WHERE condition;"}
{"prompt":"MongoDB query to find by regex.","completion":"db.collection.find({ field: { $regex: 'pattern', $options: 'i' } });"}
{"prompt":"Cassandra query to delete data.","completion":"DELETE FROM keyspace.table WHERE id = 'value';"}
{"prompt":"SQL query to get current timestamp.","completion":"SELECT CURRENT_TIMESTAMP;"}
{"prompt":"Redis command to add to set.","completion":"SADD myset 'value';"}
{"prompt":"Explain SQL views.","completion":"Views are virtual tables created from a query: CREATE VIEW view_name AS SELECT...;"}
{"prompt":"Neo4j query to find neighbors.","completion":"MATCH (n:Node {id: '123'})-[:REL]->(neighbor) RETURN neighbor;"}
{"prompt":"MongoDB query to project fields.","completion":"db.collection.find({}, { field1: 1, field2: 0 });"}
{"prompt":"SQL query to partition data.","completion":"SELECT column, NTILE(4) OVER (ORDER BY column) AS quartile FROM table;"}
{"prompt":"Redis command to get list range.","completion":"LRANGE mylist 0 -1;"}
{"prompt":"Cassandra query to create keyspace.","completion":"CREATE KEYSPACE mykeyspace WITH replication = { 'class': 'SimpleStrategy', 'replication_factor': 1 };"}
{"prompt":"SQL query to check constraints.","completion":"SELECT * FROM information_schema.table_constraints WHERE table_name = 'table';"}
{"prompt":"MongoDB query to count documents.","completion":"db.collection.countDocuments({ filter });"}
{"prompt":"SQL query to get min value.","completion":"SELECT MIN(column) FROM table;"}
{"prompt":"Neo4j query to find nodes by label.","completion":"MATCH (n:Label) RETURN n;"}
{"prompt":"Redis command to delete a key.","completion":"DEL key;"}
{"prompt":"What's a good recipe?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to find employees hired in last year.","completion":"SELECT * FROM employees WHERE hire_date >= DATEADD(year, -1, GETDATE());"}
{"prompt":"Explain MongoDB aggregation pipeline stages.","completion":"Stages include $match, $group, $sort, $project, $lookup, etc., each transforming data in sequence."}
{"prompt":"Cassandra query to create table.","completion":"CREATE TABLE keyspace.table (id UUID PRIMARY KEY, name TEXT, age INT);"}
{"prompt":"SQL query to find employees with specific skill set.","completion":"SELECT e.* FROM employees e JOIN employee_skills s ON e.id = s.employee_id WHERE s.skill IN ('Python', 'SQL');"}
{"prompt":"MongoDB query to find documents with array field containing value.","completion":"db.collection.find({ arrayField: 'value' });"}
{"prompt":"SQL query to get top N records per group.","completion":"SELECT * FROM (SELECT *, ROW_NUMBER() OVER (PARTITION BY group_column ORDER BY value_column DESC) AS rn FROM table) AS sub WHERE rn <= N;"}
{"prompt":"Redis command to get all keys matching pattern.","completion":"KEYS pattern*;"}
{"prompt":"Neo4j query to find nodes created after a date.","completion":"MATCH (n:Node) WHERE n.created_at > date('2023-01-01') RETURN n;"}
{"prompt":"What's a good exercise?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"SQL query to find employees with specific project and role.","completion":"SELECT e.* FROM employees e JOIN employee_projects p ON e.id = p.employee_id WHERE p.project_id = 100 AND e.role = 'Developer';"}
{"prompt":"Explain MongoDB capped collections.","completion":"Capped collections are fixed-size collections that maintain insertion order and automatically overwrite oldest entries when full."}
{"prompt":"Cassandra query to create materialized view.","completion":"CREATE MATERIALIZED VIEW keyspace.view AS SELECT * FROM keyspace.table WHERE condition;"}
{"prompt":"Explain SQL INNER JOIN.","completion":"An INNER JOIN returns rows with matching values in both tables. Example: SELECT * FROM employees INNER JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"What's the difference between SQL and NoSQL?","completion":"SQL databases are relational, structured, and use SQL for queries. NoSQL databases are non-relational, handle unstructured data, and use varied query methods."}
{"prompt":"How to insert a record in SQL?","completion":"INSERT INTO employees (id, name, salary) VALUES (1, 'John Doe', 60000);"}
{"prompt":"Write a Redis command to set a key-value pair.","completion":"SET user:1 \"John Doe\";"}
{"prompt":"How to update a document in MongoDB?","completion":"db.collection.updateOne({ _id: ObjectId('123') }, { $set: { name: 'Jane' } });"}
{"prompt":"Write a SQL query to delete records where age < 25.","completion":"DELETE FROM employees WHERE age < 25;"}
{"prompt":"Explain NoSQL document stores.","completion":"Document stores like MongoDB store data as JSON-like documents, offering flexible schemas for unstructured data."}
{"prompt":"What are SQL transactions?","completion":"Transactions ensure ACID properties. Example: BEGIN TRANSACTION; INSERT INTO table...; COMMIT;"}
{"prompt":"How to use Redis lists?","completion":"LPUSH mylist \"item\"; RPOP mylist;"}
{"prompt":"Explain SQL foreign keys.","completion":"A foreign key links two tables by referencing the primary key of another table, enforcing referential integrity."}
{"prompt":"Write a MongoDB aggregation query.","completion":"db.collection.aggregate([{ $group: { _id: \"$dept\", total: { $sum: 1 } } }]);"}
{"prompt":"Write a SQL query with a LEFT JOIN.","completion":"SELECT * FROM employees LEFT JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"How to create a keyspace in Cassandra?","completion":"CREATE KEYSPACE mykeyspace WITH replication = {'class': 'SimpleStrategy', 'replication_factor': 1};"}
{"prompt":"Explain SQL subqueries.","completion":"A subquery is a query nested inside another. Example: SELECT * FROM employees WHERE dept_id IN (SELECT id FROM departments WHERE name = 'HR');"}
{"prompt":"Write a Redis command for a sorted set.","completion":"ZADD leaderboard 100 \"player1\";"}
{"prompt":"Write a PostgreSQL query with a window function.","completion":"SELECT name, salary, RANK() OVER (PARTITION BY dept_id ORDER BY salary DESC) FROM employees;"}
{"prompt":"How to perform a bulk insert in MongoDB?","completion":"db.collection.insertMany([{ name: 'John' }, { name: 'Jane' }]);"}
{"prompt":"Explain normalization in SQL.","completion":"Normalization reduces redundancy by organizing data into tables following rules like 1NF, 2NF, 3NF."}
{"prompt":"Write a Neo4j query to find paths.","completion":"MATCH p = shortestPath((n:Person {name: 'Alice'})-[*]-(m:Person {name: 'Bob'})) RETURN p;"}
{"prompt":"Write a MongoDB query with $lookup.","completion":"db.orders.aggregate([{ $lookup: { from: 'customers', localField: 'customer_id', foreignField: '_id', as: 'customer' } }]);"}
{"prompt":"How to set an expiration in Redis?","completion":"SET key value EX 3600;"}
{"prompt":"What are SQL views?","completion":"A view is a virtual table based on a query. Example: CREATE VIEW high_earners AS SELECT * FROM employees WHERE salary > 50000;"}
{"prompt":"Write a Cassandra query to insert data.","completion":"INSERT INTO users (id, name) VALUES (uuid(), 'Alice');"}
{"prompt":"How to use MongoDB text search?","completion":"db.collection.find({ $text: { $search: 'keyword' } });"}
{"prompt":"What is a Redis pub/sub system?","completion":"Pub/sub allows publishing messages to channels and subscribing to them. Example: PUBLISH channel 'msg'; SUBSCRIBE channel;"}
{"prompt":"Write a SQL query with a CASE statement.","completion":"SELECT name, CASE WHEN salary > 50000 THEN 'High' ELSE 'Low' END AS salary_level FROM employees;"}
{"prompt":"How to create a trigger in PostgreSQL?","completion":"CREATE TRIGGER update_timestamp BEFORE UPDATE ON employees FOR EACH ROW EXECUTE FUNCTION update_timestamp();"}
{"prompt":"Explain NoSQL key-value stores.","completion":"Key-value stores like Redis store data as simple key-value pairs, optimized for fast retrieval."}
{"prompt":"How to optimize a SQL query?","completion":"Use indexes, avoid SELECT *, use specific columns, analyze execution plans."}
{"prompt":"How to use Redis hashes?","completion":"HMSET user:1 name 'John' age 30;"}
{"prompt":"Write a SQL query with a FULL OUTER JOIN.","completion":"SELECT * FROM employees FULL OUTER JOIN departments ON employees.dept_id = departments.id;"}
{"prompt":"Explain MongoDB replica sets.","completion":"Replica sets provide redundancy and high availability by maintaining multiple copies of data across servers."}
{"prompt":"How to alter a table in SQL?","completion":"ALTER TABLE employees ADD column email VARCHAR(100);"}
{"prompt":"Write a Cassandra batch statement.","completion":"BEGIN BATCH INSERT INTO users (id, name) VALUES (uuid(), 'Alice'); UPDATE users SET age = 30 WHERE id = uuid(); APPLY BATCH;"}
{"prompt":"What is a graph database?","completion":"Graph databases like Neo4j store data as nodes and relationships, ideal for complex relational queries."}
{"prompt":"Write a SQL query with date functions.","completion":"SELECT * FROM orders WHERE order_date > CURRENT_DATE - INTERVAL '30 days';"}
{"prompt":"How to use MongoDB geospatial queries?","completion":"db.places.find({ location: { $near: { $geometry: { type: 'Point', coordinates: [-73.9, 40.7] } } } });"}
{"prompt":"Explain SQL indexes.","completion":"Indexes speed up queries by creating a data structure for fast lookups, e.g., CREATE INDEX idx_name ON employees (name);"}
{"prompt":"How to use SQL PIVOT?","completion":"SELECT * FROM sales PIVOT (SUM(amount) FOR region IN ('North', 'South'));"}
{"prompt":"What is quantum computing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain the solar system.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What is AI ethics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Recommend a workout plan.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe ancient Egypt.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to draw a landscape?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe global warming.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain natural selection.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Recommend a podcast.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to brew coffee?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe ecosystems.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's machine vision?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn piano?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's mobile app development?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe plate tectonics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to do photography?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe biodiversity.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Explain cosmology.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's IoT?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe genetics.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's DevOps?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to build a PC?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's 5G technology?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"Describe oceanography.","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's data analytics?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"How to learn dance?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
{"prompt":"What's edge computing?","completion":"Sorry, I can only answer questions related to SQL and NoSQL databases."}
